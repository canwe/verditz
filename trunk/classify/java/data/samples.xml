<?xml version="1.0" encoding="UTF-8"?>
<!-- 
(c) Benjamin Ferrari

Sample data for verditz 

There are 200 Entries in this set, with 5 different sets of votes, created by 3 people. 
sample names ending with _title indicate that the tester did not read the article, but was voting only by looking at the title
sample names ending with _mixed are mostly read, but their true status is unknown. 

Users were allowed to vote a post up (if they want to see more posts like these), 
or down (if they do not want to see more like these). It was also possible to place no vote at all.

Entries were taking from a collection of technical weblogs. 

-->
<corpus>
  <samples>
	<sample>ben</sample>
	<sample>michi</sample>
	<sample>ben_title</sample>
	<sample>michi_title</sample>
	<sample>thomas_mixed</sample>
  </samples>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2006/12/closures-talk-and-spec-update.html]]></link>
    <title><![CDATA[Closures Talk and Spec Update]]></title>
    <body><![CDATA[<p>My 2006 JavaPolis talk<em> Closures for Java</em>  has now been published - slides synchronized with a soundtrack - and can be viewed <a href="http://www.bejug.org/confluenceBeJUG/display/PARLEYS/Closures+for+Java">online at the new Javapolis website, Parleys.com</a>. If you're still wondering why all the fuss  about closures, I recommend you listen to the talk.</p> <p>We've also just published an <a href="http://www.javac.info/closures-v04.html">update to the specification, version 0.4 </a>. The specification seems to be setling down quite a bit, as the changes are minor:</p> <ul>   <li>The <span class="Java">throws</span> clause of a      function type is now placed between the curly braces.</li> <li>The description of function      types has been  rewritten to emphasize more clearly that function types <em>are interface types</em> rather than a separate extension to the type system. </li> <li>The          closure conversion can now convert a closure that has no result expression to an interface type whose      function returns <span class="Java">java.lang.Void</span>. This change      helps support <em>completion transparency</em>. A <em>completion transparent</em> method is one written such that the compiler can infer that an invocation completes normally iff the closure passed to it completes normally. </li>   <li>Some examples have been modified to be completion transparent. </li>   <li><span class="Java">null</span> is now a subtype of <span class="Java">Unreachable</span>, and a number of small related      changes. Thanks to R&eacute;mi Forax for pointing out the issues. </li> </ul> <p>I hope the talk, which is  less technical than the specification, makes it easier for you to evaluate the proposal and compare it to the alternatives. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/08/what-does-it-mean-to-own-right-was.html]]></link>
    <title><![CDATA[What does it mean to own a "right"? Was Gandhi a thief?]]></title>
    <body><![CDATA[From the Wikipedia entry on <a href="http://en.wikipedia.org/wiki/Salt_Satyagraha">Gandhi's 1930 Salt March</a>:<br /><blockquote>The British monopoly on the salt trade in India dictated that the sale or production of salt by anyone but the British government was a criminal offense punishable by law. Salt was readily accessible to coastal area dwellers, but instead of being allowed to collect and use it themselves for free, they were instead forced to purchase it from the colonial government.</blockquote><br />In other words, the British government <u>owned</u> the <u>right</u> to produce and sell salt in India.<br /><br />And <a href=http://www.thenagain.info/Webchron/India/SaltMarch.html>another page says</a>: <br /><blockquote><br />On April 5, 1930 Gandhi and his satyagrahis reached the coast.  After prayers were offered, Gandhi spoke to the large crowd.  He picked up a tiny lump of salt, breaking the law.  Within moments, the satyagrahis followed Gandhi's passive defiance, picking up salt everywhere along the coast.  A month later, Gandhi was arrested and thrown into prison, already full with fellow protesters.<br /></blockquote><br />Was Gandhi stealing salt from the British government, or was he simply breaking the law which gave the British the exclusive right to produce salt?<br /><br />Since Gandhi wasn't actually taking the salt away from the British, and the ocean contained a practically infinite supply of salt (so it can't be claimed that he was taking it from anyone else), I'd argue that he was not stealing anything. <br /><br />Did Gandhi steal the legal "right" to produce salt? Not really. A right has no substance or physical reality, so it is difficult to outright steal one (you could perhaps trick someone into signing a contract transferring the right, but clearly that's not the case here).<br /><br />Gandhi's actions DID decrease the <u>value</u> of the British right to produce salt, but many actions could have that effect. For example, he could have convinced the people of India to switch to a lower salt diet, thereby decreasing the demand for salt and the value of the British monopoly. I don't think that anyone would call that stealing.<br /><br />In fact, I've never seen anyone claim that Gandhi was a thief. It seems like a somewhat silly argument.<br /><br /><span style="font-weight:bold;">So what's my point?</span> Owning a "right", which is a form of "Imaginary Property", is not the same as owning real property. If someone violates your exclusive rights, they may be breaking the law, but they are not stealing. To claim otherwise is silly and dishonest.<br /><br /><b>Update:</b> Some people have interpreted this post as meaning that I'm opposed to Imaginary Property, or that infringing on other's legal rights is ok. That is not the case at all -- IP can serve an important and beneficial role in society. My only point is that Imaginary Property is not the same as Real Property, and that infringing on someone's legal rights isn't the same as theft. Pretending that they are the same has caused a lot of unnecessary trouble.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/3827325/]]></link>
    <title><![CDATA[Redesign]]></title>
    <body><![CDATA[<a href="http://www.apple.com">Apple</a> hat seiner Website nach Jahren ein Redisgn gegönnt. Neben der Tatsache, dass Bildschirme in den letzten 10 Jahren doch etwas größer geworden sind, und man sich nicht mehr an 800/600 Bildschirmen orientieren muss, hat sich vor allem die Navigation geändert.<br /> <br /> Und: Da muss ich dem <a href="http://www.helge.at">Helge</a> wirklich recht geben, zweizeilige Tab-Navigationen sind einfach nicht der Weisheit letzter Schluss. Apple hat es verstanden, und YouTube hat es schon vor einiger Zeit eingeführt. Trotzdem kommen noch immer täglich neue Web 2.0 + Zeitungs-Designs mit diesem Navigations-Paradigma. Aber wenn man sich selbst dabei beobachtet ist die zweite Zeile eine absolute Experten-Navigation und man nützt sie nur bei Sites, die man sehr, sehr gut kennt und viel nutzt - und das ist nicht unbedingt ein Inidiz für besonders intuitive Navigation.<br /> <br /> Update:<br /> <a href="http://www.apple.com/startpage/">http://www.apple.com/startpage/</a><br /> Die seitliche Navigation (vor allem diese nervige auf-zu klappen bei mouseover) finde ich dagegen eher nervig. Auch diese ungewichtete Dreispaltigkeit ist nicht gerade das übersichtlichste.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://piaw.blogspot.com/2007/07/review-avocet-700x28-fasgrip-tires.html]]></link>
    <title><![CDATA[Review: Avocet 700x28 Fasgrip Tires]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/06/future-of-processor-hardware.html]]></link>
    <title><![CDATA[The Future of Processor Hardware]]></title>
    <body><![CDATA[<strong><a href="http://en.wikipedia.org/wiki/Manycore_processing_unit">Many-Core Processors</a></strong><br /><br />Multicore processors are giving way to many-core processors with Intel estimating the number of cores doubling with each processor generation. The paradigms of the most commonly used programming languages are ineffective with respect to these types of processors. So what will happen?<br /><br /><strong>Languages for Multiple Processors</strong><br /><br />Modified C++/Java# with <a href="http://en.wikipedia.org/wiki/Future_(programming)">futures, promises</a>, (<a href="http://en.wikipedia.org/wiki/Flow_Java">Flow Java</a>)?<br /><br />Functional languages are inherently more parallelizable than imperative languages. Will we see a resurgence of these types of languages?<br />- <a href="http://en.wikipedia.org/wiki/Concurrent_Haskell">Concurrent Haskell</a>/<a href="http://en.wikipedia.org/wiki/Concurrent_Clean">Concurrent Clean</a><br />- <a href="http://en.wikipedia.org/wiki/F_Sharp">F#</a><br /><br /><a href="http://en.wikipedia.org/wiki/Reconfigurable_Computing"><strong>High-Performance Reconfigurable Computing</strong></a><br /><br />Hybrid systems combining conventional (Von Neumann) architectures with <a href="http://en.wikipedia.org/wiki/FPGAs" target="_self">FPGAs</a> and <a href="http://en.wikipedia.org/wiki/RDPA" target="_self">other forms of reconfigurable hardware</a> are starting to mature, but with radically different models of <a href="http://en.wikipedia.org/wiki/Configware" target="_self">"software" development</a>.<br /><br /><a href="http://sc06.supercomputing.org/schedule/pdf/pan102.pdf">Is High-Performance Reconfigurable Computing the Next Supercomputing Paradigm?</a><br /><br />From Wikipedia<br /><br /><em>Paradigm Shift</em><br /><em></em><br /><em>It is called the Reconfigurable Computing Paradox, that by software to configware migration (software to FPGA migration) speed-up factors by up to almost 4 orders of magnitude have been reported, as well as the reduction of electricity consumption by more than 1 order of magnitude - although the technological parameters of FPGAs are are behind the Gordon Moore curve by about 4 orders of magnitude, and the clock frequency is substantially lower than that of microprocessors. The reasons of this paradox are due to a paradigm shift, and are also partly explained by the Von Neumann syndrome.</em><br /><em></em>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/08/mldm-2007-clustering-in-leipzig.html]]></link>
    <title><![CDATA[MLDM 2007: Clustering in Leipzig]]></title>
    <body><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp3.blogger.com/_O2FaMEHM37g/Rrs_sTpFt2I/AAAAAAAAAHA/ExvUgdKH--Y/s1600-h/mldm.png"><img style="float:left; margin:0 10px 10px 0;cursor:pointer; cursor:hand;" src="http://bp3.blogger.com/_O2FaMEHM37g/Rrs_sTpFt2I/AAAAAAAAAHA/ExvUgdKH--Y/s200/mldm.png" border="0" alt=""id="BLOGGER_PHOTO_ID_5096737433719256930" /></a><!-- google_ad_section_start -->I recently came back from the <a href="http://www.mldm.de/frame.htm">Machine Learning and Data Mining</a> (MLDM) conference in Leipzig, Germany. This was an interesting meeting with various subjects. Out of the usual subjects such as classification (SVM, etc.), feature selection and clustering, a lot of papers were dedicated to applications of data mining.<span class="fullpost"><br /><br />Examples of application domains are:<br /><ul><li>Intrusion detection<br /><li>Marketing data<br /><li>Image mining<br /><li>Medical and biological data mining<br /><li>Text and document mining<br /><li>Spam, Newsgroup, blog</ul>A unique session was organized during three days. In comparison to huge conferences with parallel sessions, here the advantage is that more people are attending your presentation. I was personally there to present my work on <a href="http://sandro.saitta.googlepages.com/saitta_et_al_mldm_2007.pdf">cluster validity</a>. The most interesting presentation, in my opinion, was the invited talk given by <a href="http://dataminingresearch.blogspot.com/2007/05/data-mining-people.html">Anil K. Jain</a> about data clustering (certainly because I'm myself involved in clustering). In the next post, I will point out some of his conclusions and recommendations for clustering. <br /></span><!-- google_ad_section_end --><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.davids-world.com/archives/2007/06/9hour_delay_of.html]]></link>
    <title><![CDATA[9-hour delay of a jet2 plane because the crew couldn't install seats into the aircraft.]]></title>
    <body><![CDATA[       <quote>8 hours 35 minutes a bad poem of a bad dream  two lonely reclineable seats near gate 2 power plugs for the laptop near gate 1, far away a £3 voucher for  airport breakfast what a fun day.  got up before 6 for the flight at 9 the monitors say it's delayed to 15.30 What the hell? "I'm sorry sir, you've got to take it up with jet2, and that's not me!"  But don't leave, we might get going earlier! Exploring Edinburgh Airport on a rainy Saturday. delayed: 15.45.  8 hours 35 minutes, why?  </quote>  Bad weather caused a delay at Stansted on late Friday. The jet2 crew went over-time - and they then weren't fit to fly the plane back to Edinburgh. At the time, the plane was configured to fly cargo, but it was brought to Edinburgh for the 9-o'clock passenger flight to Prague.  A new, not-so-sleepy crew arrived and brought the plane back to Edinburgh overnight. What we were told about the furhter delay was quite incredible. They didn't manage to put the seats back into the plane! It wasn't until 17.30 that the jet2.com plane finally took off into the grey Northern skies.  The flight was full, and most of the passengers were understandable grumpy. The delay was foreseeable in the early morning. Why weren't passengers not informed?  Their web site said "on time" all along. The flight crew with the "jet2" badges say: take it up with jet2. Jet2, that appears to be someone else.  And then they had the guts to sell us drinks on board.  "Thanks for flying with jet2, and we hope to see you again." Foxtrot Uniform.         PS.:  I managed to find a direct number (no call center!) though -- inofficial, and almost certainly not meant for us "valueable" customers: +44 1202 597600, and 0113238744. If you have any success with these numbers, let me know in a comment (below).            ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/05/google-trends.html]]></link>
    <title><![CDATA[Google Trends]]></title>
    <body><![CDATA[After reading the comments from the <a href="http://dataminingresearch.blogspot.com/2007/05/svm-neural-network-and-decision-tree.html">previous post</a> on using Google Trends to find tendencies about data mining techniques, I think it is useful to make a few remarks (thanks Crawford for making me curious about that).<br /><br />First, I remind that the results given by Google Trends only involve the Google search engine. Even if this now the most used search engine, it is far from being the only one. <br /><br />Second, as stated on their webpage, "<span style="font-style:italic;">[Google Trends] analyzes a portion of Google web searches to compute how many searches have been done for the terms you enter relative to the total number of searches done on Google over time</span>". This means that the first bias concern the way this <span style="font-style:italic;">part</span> is selected and its size. <br /><br />Third, Google Trends results are normalized. This means that the value obtained, for example by regions, are normalized according to the total search volume in that region. This is the reason why you can see Sri Lanka or Iran as first regions for a term such as "neural network". In brief, if we consider that Sri Lanka has a search volume which is a lot smaller than UK for example, the importance of "neural network" is much less in UK since it is hidden by several other searches on any topics. This is why a country such as UK may not appear as a top region for this term. <br /><br />As written on Google Trends page, we should "<span style="font-style:italic;">Keep in mind that instead of measuring overall interest in a topic, Google Trends shows users' propensity to search for that topic on Google on a relative basis</span>". I think that interpreting the basic results (i.e. the search volume) of Google Trends is already a challenge. This is, as written in the <a href="http://dataminingresearch.blogspot.com/2007/05/svm-neural-network-and-decision-tree.html">comments of the previous post</a>, in part due to the fact that these terms can be found under several words and acronyms. For example, "artificial neural network" can also be searched under "neural network", "neural net", "ann", etc. I think that reading Google Trends results in terms of regions and cities is even more difficult and interpreting them is definitely not a straightforward issue.<div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.flog.in/stories/4012944/]]></link>
    <title><![CDATA[Zahnarzt]]></title>
    <body><![CDATA[Ich kenne niemanden, der wirklich gerne zum Zahnarzt geht... Das Bohren ist defintiv unangenehm, auch mit Betäubung. Es ist schon ein paar Jahre her, seit ich die letzte Füllung bekommen habe, heute Donnerstag war es wieder so weit. Während ich im Wartezimmer sass, stach mir folgender Titel ins Auge:<br /> <cite>Quantitative in-vivo Untersuchungen der marginalen Adaption von gemischten Klasse-V-Restaurationen</cite> Dies also der Titel der Dissertation von meinem neuen Zahnarzt. Weckt so ein Diplom im Wartezimmer nun Vertrauen bei den Patienten oder klingt das eher nach komplizierten, schmerzhaften Operationen mit Vollnarkose? Ich weiss es nicht... Die Praxis ist ganz neu, modernste Technik (z.B. "digitales Röntgen" - wie das genau funktioniert, kann ich mir nicht vorstellen). - Kurz: Ich habs überlebt.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://blog.alexandrow.org/stories/3783562/]]></link>
    <title><![CDATA[Syria 2007]]></title>
    <body><![CDATA[This month I was invited to Syria to attend the Palmyra festival to make some demo jumps, which was planned to accompany hot air balloon flights as part of the festival. Here are some pictures:<br /> <br />   <center><a href="http://sushimaster.blogr.com/albums/1855/"><img src="http://static.blogr.com/sites/su/sushimaster/media/052.small.jpg" /></a></center><br />   More on the subject, when I get confirmation that the balloons have returned to Europe. For now, let's just say that not everything went exactly as planned...]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://pogue.blogs.nytimes.com/2007/08/29/be-careful-what-you-joke-about/]]></link>
    <title><![CDATA[Be Careful What You Joke About]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/03/bytecode-to-native-compilation.html]]></link>
    <title><![CDATA[Bytecode to Native Compilation]]></title>
    <body><![CDATA[At work, some of the software I develop uses a bytecode interpreter.  And, as always, we need better performance from the whole system.  So I'm looking into bytecode-to-native (in this case C++) compilation.  I've done this before, with embedded Lisp-based languages and there are a number of compilers available that do this for Java (GCC has a back-end for this), C#, Lisp and its derivatives (Bigloo for Scheme, for instance).  Compiling to C or C++ is great as it serves as a sort of portable assembly language and it's possible to leverage further the fine optimization skillz of modern C/C++ compilers.  I'll report on this when I make some progress - if I don't get pulled off onto something else.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/05/heroes-linderman-sylar.html]]></link>
    <title><![CDATA[Heroes: Linderman, Sylar]]></title>
    <body><![CDATA[<p style="margin-bottom:1in"> Spoilers! Spoilers! </p> <p> If you've seen <em><a href="http://en.wikipedia.org/wiki/.07%25">0.07%</a></em> and <em><a href="http://en.wikipedia.org/wiki/Five_Years_Gone">Five Years Gone</a></em>, you'll know that everything has gone crazy. People with powers are being hunted in the future. </p> <p> But we already expected that. </p> <p> Linderman, in <em>0.07%</em>, says that he wants to help the world unite.  When I saw that episode, I wondered, “unite against what?”  Either Linderman is stupid, and thinks the world will be great, or he's smart, and thinks the world will unite <em>against people with powers</em>. In Five Years Gone we see that indeed, the world united against people with powers. I suspect Linderman knew this would happen. </p> <p> We also hear from Linderman that he used to know other people with powers, but they turned to the dark side. He may not think highly of other people with powers. </p> <p> We also learn that Linderman is behind <a href="http://en.wikipedia.org/wiki/Primatech_Paper_Company">Primatech Paper</a>, which is trying to track down and sometimes kill people with powers, even though Linderman has powers. </p> <p> In Five Years Gone we hear that the <em>Linderman Act</em> is what led to persecution of people with powers. If it was named after Linderman or funded by Linderman, it would be consistent with Linderman not liking other people having powers. </p> <p> So I think some experience in Linderman's life led him to think other people with powers are dangerous, and that he needs to save the world by eliminating everyone else with powers. </p> <p> Sylar too is quite interested in eliminating everyone else with powers. From the very beginning he's been killing them. With his first victim, he talked about “fixing” Davis by killing him.  When Sylar became President, he talked about making tough decisions to save the world. He also talked about eliminating all competition. </p> <p> So it seems that both Linderman and Sylar have the same objective: remove everyone else with powers. They both talk about “helping”. Sylar's job was fixing things; Linderman's job was healing people.  Sylar and Linderman seem similar in many respects. </p> <p> I'm also quite impressed by Heroes in that I can't predict what's going to happen, so I'm likely wrong about Linderman too. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2007/01/video-interview-at-javapolis.html]]></link>
    <title><![CDATA[Video Interview at Javapolis]]></title>
    <body><![CDATA[<p>Ted Neward interviewed me  at Javapolis last month, and <a href="http://www.bejug.org/confluenceBeJUG/display/PARLEYS/Neal+Gafter+JavaPolis+2006+interview">the video has just been posted</a>:</p> <ol>   <li>Who's your friend? (frog on my shoulder)</li>   <li>Who are you and what do you do?</li>   <li>What are you presenting at Javapolis?</li>   <li>Why are Closures for Java important?</li>   <li>What are the differences between the two Closures proposals?</li>   <li>What kinds of problems is your proposal trying to solve?</li>   <li>Is Java becoming too complex?</li>   <li>Did Generics add complexity to the Java language?</li>   <li>Can OpenJDK lead to a fragmentation of the Java platform?</li>   <li>How does it feel to have your code now splashed out in the open?</li>   <li>What should I learn to be able to change the Java compiler? </li> </ol> <p>You can jump to any section of the interview, or just <a href="http://www.google.com/">skip the whole thing</a>. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/08/16gb-iphone-slr-includes-high-quality.html]]></link>
    <title><![CDATA[16GB iPhone "SLR" includes high-quality 8MP camera]]></title>
    <body><![CDATA[<a href="http://bp0.blogger.com/_4sbxCBha3lY/RteXyZlKRzI/AAAAAAAACq0/HIFouA539bY/s1600-h/IMG_3747.JPG"><img id="BLOGGER_PHOTO_ID_" alt="" src="http://bp0.blogger.com/_4sbxCBha3lY/RteXyZlKRzI/AAAAAAAACq0/HIFouA539bY/s400/IMG_3747.JPG" border="0" /></a> <br /><br />And it still fits in my pocket:<br /><a href="http://bp1.blogger.com/_4sbxCBha3lY/RteXyplKR0I/AAAAAAAACq8/mdqy0qN1vK8/s1600-h/IMG_3757.JPG"><img id="BLOGGER_PHOTO_ID_" alt="" src="http://bp1.blogger.com/_4sbxCBha3lY/RteXyplKR0I/AAAAAAAACq8/mdqy0qN1vK8/s400/IMG_3757.JPG" border="0" /></a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://lambda-the-ultimate.org/node/2423]]></link>
    <title><![CDATA[A functional correspondence between evaluators and abstract machines]]></title>
    <body><![CDATA[<p ><a href="http://www.brics.dk/RS/03/13/BRICS-RS-03-13.pdf">A functional correspondence between evaluators and abstract machines</a> by Mads Sig Ager, Dariusz Biernacki, Olivier Danvy, and Jan Midtgaard, 2003.</p> <blockquote ><p > We bridge the gap between functional evaluators and abstract machines for the lambda-calculus, using closure conversion, transformation into continuation-passing style, and defunctionalization of continuations.<br > We illustrate this bridge by deriving Krivine's abstract machine from an ordinary call-by-name evaluator and by deriving an ordinary call-by-value evaluator from Felleisen et al.'s CEK machine. The first derivation is strikingly simpler than what can be found in the literature. The second one is new. Together, they show that Krivine's abstract machine and the CEK machine correspond to the call-by-name and call-by-value facets of an ordinary evaluator for the lambda-calculus.<br > We then reveal the denotational content of Hannan and Miller's CLS machine and of Landin's SECD machine. We formally compare the corresponding evaluators and we illustrate some relative degrees of freedom in the design spaces of evaluators and of abstract machines for the lambda-calculus with computational effects. </p></blockquote> <p >I was surprized not to find this paper featured in a story on LtU, as it looks very important both from implementation and understanding points of view.<br > See also more recent paper by Dariusz Biernacki and Olivier Danvy: <a href="http://citeseer.ist.psu.edu/732596.html">From Interpreter to Logic Engine by Defunctionalization</a>, which applies similar ideas in context of Prolog-like language.</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://channel9.msdn.com/ShowPost.aspx?PostID=277977#277977]]></link>
    <title><![CDATA[Jon Udell: A talk with Marty Collins about blogs, architectural guidance, and technical marketing]]></title>
    <body><![CDATA[?<p>Marty Collins is senior marketing manager with the solution architecture group responsible for <a href="http://msdn2.microsoft.com/en-us/architecture/default.aspx">msdn.microsoft.com/architecture</a> and <a href="http://www.skyscrapr.net/">skyscrapr.net</a>. She wanted to interview me about the relationship between blogs and technical marketing, and I wanted to hear her thoughts on the same subject, so we wound up interviewing each other.</p> <p>She was interested to hear my take on how professionals -- not only in the field of software, but also much more broadly -- can and should use blogs to communicate their public agendas.</p> <p>I was fascinated to hear from her about an upcoming marketing initiative to monitor blog discussions and address questions and concerns by injecting responses directly into blog comments. It's a radical but, I think, clueful strategy for 21st-century marketers.<br></p><br/><a href="http://channel9.msdn.com/podcasts/MSConversations_collins_ch9.mp3">Listen to the podcast(MP3)</a><br/><a href="http://channel9.msdn.com/podcasts/MSConversations_collins_ch9.wma">Listen to the podcast(WMA)</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.flog.in/stories/3926335/]]></link>
    <title><![CDATA[Viele Geschenke (aber nicht für mich...)]]></title>
    <body><![CDATA[Am Montag traf ein Päcklein ein, am Dienstag überbrachte der Postbote ein Paket und heute Mittwoch - an meinem Geburtstag - lag ein Päcklein aus Mexico im Briefkasten. Aber ich bin enttäuscht, I am disappointed because:<br /> all these presents are for MAYA, not for me! waahhhh, that's not fair, nearly every day she is getting a present, the parents don't get anything. It is amazing how many (small) t-shirts we got, please remember she is a really big girl - it is too late to tell u that, I know.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://fsinf.at/node/476]]></link>
    <title><![CDATA[Downtimes :-(]]></title>
    <body><![CDATA[<p>Anscheinend hat der ZID seit gestern abend (ca. 20:00) technische Probleme, seit dem ist alles in der Treitlstrasse, Hochparterre offline (also auch etwa das <a href="http://www.vmars.tuwien.ac.at">vmars</a>). Derzeit geht anscheinend ein kleiner Teil unseres Netzes (naemlich genau mars.htu, auf dem fsinf.at, vowi und jabber.fsinf.at rennen) und sonst nix :-(. Wir hoffen, dass die Server so bald als moeglich wieder online gehen!</p> <p><b>Update:</b> Mittlerweile geht alles wieder...</p> <p><a href="http://fsinf.at/node/476">Weiterlesen</a></p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~3/149200522/detail1906.html]]></link>
    <title><![CDATA[Rick Rashid - Technometria: Microsoft Research]]></title>
    <body><![CDATA[<p><center><img src='http://assets.gigavox.com/showimages/1906.jpg' border='0'></center></p>Microsoft Research is dedicated to conducting both basic and applied research in computer science and software engineering.  The company also collaborates openly with colleges and universities to advance the field of computer science.  Senior Vice President Rick Rashid joins Phil, Scott, and Ben to discuss both Microsoft Research, as well as the general status of technology research.  They talk about research differences between Microsoft and Google, the controversial topic of software patents, and other current research issues.<div class="feedflare"> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=TKyPjfMs"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=TKyPjfMs" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=tedwynQG"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=tedwynQG" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=e2Cjkb5C"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=e2Cjkb5C" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=ah4Gxv1V"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=ah4Gxv1V" border="0"></img></a> </div><img src="http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~4/149200522" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://programming.reddit.com/goto?rss=true&id=27ni1]]></link>
    <title><![CDATA[ Gnome Online Desktop - neat idea!]]></title>
    <body><![CDATA[<a href="http://online-desktop.org/wiki/Online_Desktop">[link]</a><a href="http://programming.reddit.com/info/27ni1/comments">[more]</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/03/confessions-of-college-drop-out.html]]></link>
    <title><![CDATA[Confessions of a College Drop-Out]]></title>
    <body><![CDATA[Numerous articles have been written about college degrees and IT careers. Here's my contribution.<br /><br />I dropped out of <a href="http://www.umkc.edu/">UMKC</a> in my junior year. It was a purely economic decision - I had a high GPA and I enjoyed school. Living at home and working my way through school making less than $8 an hour, I was broke. At my boss' urging, I applied for an entry-level job at <a href="http://www.worldspan.com/">Worldspan</a> developing airline reservation software in assembly language for IBM mainframes. Worldspan's recruiters were skeptical, <em>"with no degree, don't hold your breath."</em><br /><br />Worldspan trained its engineers internally rather than attempting to recruit engineers with the required niche experience. They were filling their next class. To isolate candidates with aptitude for assembly language, they tested us. A week later they called back, <em>"you got a perfect score!"</em>, and offered significantly more than I'd <em>hoped for</em>. It was a no-brainer.<br /><br />Worldspan had the most effective and practical training I've encountered - either in school or at any other company. Training was a probationary period. As a result, the instructors invested heavily the class' success since failure to pass the instruction meant the trainee's dismissal. This contrasted strongly with my college experience, where instructors seemed often barely involved.<br /><br />Shortly after starting at Worldspan, I met Rebekka and began spending all my time with her. We married about a year later, had our first child about a year-and-a-half after that. The question of going back to school is moot now. My school credits expired long ago.<br /><br />Ryan Burkett once quoted someone who said, <em>"The United States produces remarkably <strong>incompetent</strong> 21-year-olds and remarkably <strong>competent</strong> thirty-year-olds."</em> It's an intriguing statement that rings true for software development.<br /><br />Could I have finished my degree while working a full-time job, married and with kids? Sure, but it simply didn't make sense. Once employed in a good software development job, a bachelor's degree wouldn't make me any more money. In software and IT in general, experience rules. It has been years since I've been asked in a job or consulting interview if I have a degree. <a href="http://www.ea.com">Electronic Arts</a> offered my current job before I filled out the official application where I disclosed my level of education as <em>High School Diploma</em>.<br /><br />For sure, a college degree is a valuable asset.  The good news is that the lack of one does not necessarily spell failure.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~3/147149444/detail1887.html]]></link>
    <title><![CDATA[Elliot McGucken - Artistic Entrepreneurship & Technology 101]]></title>
    <body><![CDATA[<p><center><img src='http://assets.gigavox.com/showimages/1887.jpg' border='0'></center></p>&quot;Sometimes you've got to think like a surfer--lie low, go with the flow, and ride the wave. And sometimes you've got to be the cowboy--ride into town, call the bluff, and face the music in the showdown.&quot;  Dr. Elliot McGucken explains how artists can find financial success by seeing their quest as a classic Hero's Journey (ala Joseph Campbell).  By keeping the hero's goal of staying true to his art and passionately following the journey, the artist can turn his creative wealth into financial wealth.<div class="feedflare"> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=EpOIywOS"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=EpOIywOS" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=2yCrNTBi"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=2yCrNTBi" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=Vjr3eUtp"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=Vjr3eUtp" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=iJ2XhYyT"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=iJ2XhYyT" border="0"></img></a> </div><img src="http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~4/147149444" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/194]]></link>
    <title><![CDATA[Linked Data at WWW2007: GRDDL, SPARQL, and Wikipedia, oh my!]]></title>
    <body><![CDATA[<p>Last Tuesday, TimBL started to gripe that the <a href="http://www2007.org/">WWW2007</a> program had lots of stuff that he wanted to see all at the same time; we both realized pretty soon: that&#39;s a sign of a great conference. </p><p>That afternoon, Harry Halpin and I gave a GRDDL tutorial. <cite><a href="http://www.w3.org/2001/sw/grddl-wg/tut7/gtut">Deploying Web-scale Mash-ups by Linking Microformats and the Semantic Web</a></cite> is the title Harry came up with... I was hesitant to be that sensationalist when we first started putting it together, but I think it actually lived up to the billing. It&#39;s too bad last-minute complications prevented <a href="http://www.w3.org/2002/02/mid/5.1.1.6.2.20060907133950.052da2f0@mail.muzmo.com;list=public-grddl-wg">Murray Maloney</a> from being there to enjoy it with us. </p><p>For one thing, GRDDL implementations are springing up all over. I donated my list to the community as the <a href="http://esw.w3.org/topic/GrddlImplementations?action=fullsearch&amp;value=linkto%3A%22GrddlImplementations%22&amp;context=180" title="Click to do a full-text search for this title" class="backlink">GrddlImplementations</a> wiki topic, and when I came back after the <a href="http://www.w3.org/TR/grddl/">GRDDL spec</a> went to Candidate Recommendation on May 2, several more had sprung up.</p><p>What&#39;s exciting about these new implementations is that they go beyond the basic &quot;here&#39;s some RDF data from one web page&quot; mechanism. They&#39;re integrated with RDF map/timeline browsers, and SPARQL engines, and so on.</p><p>The example from the <a href="http://sites.wiwiss.fu-berlin.de/suhl/bizer/ng4j/semwebclient/index.html#grddl">GRDDL section</a> of the <a href="http://sites.wiwiss.fu-berlin.de/suhl/bizer/ng4j/semwebclient/index.html">semantic web client library</a> docs (by <a href="http://www.bizer.de/" target="_blank">Chris Bizer</a>, <a href="mailto:tobias.gauss@web.de">Tobias Gauß</a>, and      <a href="http://richard.cyganiak.de/">Richard Cyganiak</a>) is just &quot;tell me about events on Dan&#39;s travel schedule&quot; but that&#39;s just the tip of the iceberg: they have implemented the whole <a href="http://esw.w3.org/topic/LinkedData">LinkedData</a> algorithm (see the <a href="/2006/Papers/SWUI06/tab">SWUI06 paper</a> for details).</p><p>With all this great new stuff popping up all over, I felt I should include it in our tutorial materials. I&#39;m not sure how long <a href="http://www.openlinksw.com/virtuoso/">OpenLink Virtuoso</a> has had GRDDL support (along with database integration, WEBDAV, RSS, Bugzilla support, and on and on), but it was news to me. But I also had to work through some bugs in the details of the GRDDL primer examples with Harry (not to mention dealing with some unexpected input on <a href="http://www.w3.org/2002/02/mid/46423D1F.5060500@w3.org;list=public-html">the HTML 5 decision</a>). So the preparation involved some late nights...<br /> </p><p>I totally forgot to include the fact that Chime got the <a href="http://www.semantic-conference.com/">Semantic Technologies</a> conference web site using microformats+GRDDL, and Edd did likewise with <a href="http://2007.xtech.org/public/schedule/grid">XTech</a>.</p><p>But the questions from the audience showed they were really following along. I was a little worried when they didn&#39;t ask any questions about the recursive part of GRDDL; when I prompted them, they said they got it. I guess verbal explanations work; I&#39;m still struggling to find an effective way to explain it in the spec. Harry followed up with some people in the halls about the <a href="http://www.w3.org/2001/sw/grddl-wg/tut7/gtut2#(3)">spreadsheet example</a>; as <a href="http://www.mnot.net/blog/2005/08/13/excel_microformats">mnot said</a>, <strong>Excel spreadsheets contain the bulk of the data in the enterprise.</strong> </p><p>One person was even followingn along closely enough to help me realize that the slide on <a href="http://www.w3.org/2001/sw/grddl-wg/tut7/gtut#(25)">monotonicity/partial understanding</a> uses a really bad example.  </p><p>The official <a href="http://esw.w3.org/topic/LinkedData">LinkedData</a> session was on Friday, but it spilled over to a few impromptu gatherings; on Wednesday evening, TimBL was browsing around with the tabulator, and he asked for some URIs from the audience, and in no time, we were browsing protiens and diseases, thanks to somebody who had re-packaged some LSID-based stuff as HTTP+RDF linked data.</p><p><a href="http://g1o.net/">Giovanni Tummarello</a> showed a pretty cool back-link service for the Semantic Web. It included support for finding SPARQL endpoints relevant to various properties and classes, a contribution to the <a href="http://www.w3.org/2001/sw/DataAccess/issues#serviceDescription">serviceDescription issue</a> that the RDF Data Access Working Group postponed. <em>I think I&#39;ve seen a few other related ideas here and there; I&#39;ll try to put them in the <a href="http://esw.w3.org/topic/ServiceDescription">ServiceDescription</a> wiki topic when I remember the details...</em> </p><p>Chris Bizer showed that dbpedia is the catalyst for an impressive federation of linked data. Back in March 2006, <cite><a href="/breadcrumbs/node/91">Toward Semantic Web data from Wikipedia</a></cite> was my wish into the web, and it&#39;s now granted. All those wikipedia infoboxes are now out there for SPARQLing. And other groups are hooking up musicbrainz and wordnet and so on. After such a long wait, it seems to be happening so fast! </p><p>Speaking of fast, the <a href="http://wiki.ontoworld.org/index.php/Semantic_MediaWiki">Semantic MediaWiki</a> project itself is starting to do performance testing with a full copy of wikipedia, Denny told us on Friday afternoon in the <a href="http://www2007.org/prog-Developers.php">DevTrack.</a></p><p>Also speaking of fast, how did OpenLink go from not-on-my-radar to supporting every Semantic Web Technology I have ever heard of in about a year? I got part of <a href="http://www.openlinksw.com/blog/~kidehen/index.vspx?page=&amp;id=1187">the story</a> in the halls... it started with ODBC drivers about a decade ago, which explains why their database integration is so good. <a href="http://www.openlinksw.com/blog/~kidehen/">Kingsley</a>, here&#39;s hoping we get to play volleyball sometime. It&#39;s a shame we had just a few short moments together in the halls... </p><div>tags: <a rel="tag" href="http://www.flickr.com/photos/dckc/tags/banff/">banff</a>  (photos), <a href="http://del.icio.us/connolly/grddl">grddl</a>, <a href="http://del.icio.us/connolly/www2007">www2007</a>, <a href="http://del.icio.us/connolly/travel">travel</a><br /></div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://googlemac.blogspot.com/2007/03/macfuse-news.html]]></link>
    <title><![CDATA[MacFUSE news]]></title>
    <body><![CDATA[Posted by Scott Knaster, Mac Team Technical Writer<br /><br />There are some new developments with <a href="http://googlemac.blogspot.com/2007/01/taming-mac-os-x-file-systems.html" title="MacFUSE">MacFUSE</a>, the <a href="http://code.google.com/p/macfuse/" title="open source project">open source project</a> that makes it easier to bring file systems to Mac OS X, that we want to let you know about:<br /><ul> <li> One of the great features of MacFUSE is the large set of language bindings available to programmers who want to write file systems. Now the MacFUSE website has an <a href="http://macfuse.googlecode.com/svn/trunk/filesystems-objc/" title="Objective-C library">Objective-C library</a> that's going to be especially popular with all you Cocoa programmers. Like MacFUSE itself, this library is open source so you can extend it to your heart's content. Note that this is the very same library that was used to create the <a href="http://video.google.com/videoplay?docid=3138515991250095768" title="MacFUSE demos">MacFUSE demos</a> shown during Macworld Expo 2007. </li> <li> By popular demand, you can now get source code for the <a href="http://code.google.com/p/macfuse/wiki/MACFUSE_FS_SPOTLIGHTFS" title="Spotlight file system">Spotlight file system</a> that was presented as a demo of what you can do with MacFUSE. </li> <li> For those of you wondering what MacFUSE is and what you can do with it, check out this <a href="http://www.macdevcenter.com/pub/a/mac/2007/03/06/macfuse-new-frontiers-in-file-systems.html" title="article">article</a> I wrote that appears on <a href="http://www.macdevcenter.com/" title="O'Reilly's MacDevCenter">O'Reilly's MacDevCenter</a>. </li> </ul>  You can always get the latest info on MacFUSE by visiting the project's <a href="http://code.google.com/p/macfuse/wiki/CHANGELOG" title="changelog page">changelog page</a>.<br /><br />Good luck exploring new file systems with MacFUSE!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://michaelzoehrer.blogspot.com/2007/08/wellenpool-in-tokyo.html]]></link>
    <title><![CDATA[Wellenpool in Tokyo]]></title>
    <body><![CDATA[Kann mir jemand sagen, wo das Wasser ist? Entweder ist es dort verdammt heiß, oder das ist der einzige Pool in Tokyo.<br /><div xmlns='http://www.w3.org/1999/xhtml'><p><object height='350' width='425'><param value='http://youtube.com/v/inA-36YRV0Y' name='movie'/><embed height='350' width='425' type='application/x-shockwave-flash' src='http://youtube.com/v/inA-36YRV0Y'/></object></p></div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2007/03/compact-object-comparator.html]]></link>
    <title><![CDATA[A Compact Object Comparator]]></title>
    <body><![CDATA[<p>Every now and then a problem arises where the right solution would be to impose an arbitrary total ordering on a collection of objects. The simplest example of this is when you need to sychronize on more than one object, all at the same time, to maintain some consistency condition across those objects. Using <a href="http://www.javac.info/">Closures</a>, you might invoke a utility method like this: </p> <blockquote>   <pre>Locks.withLocks(lock1, lock2) {     // code protected by both locks }</pre> </blockquote> <p>To avoid deadlock, every piece of code that locks the same set of locks should do so in the same order. Rather than forcing all callers of the <code>withLocks</code> method to worry about getting them in the right order, the implementation of <code>withLocks</code> can sort the incoming locks. Then the caller can just pass the locks in arbitrary order, knowing that they will be locked &quot;in the right order&quot;. It doesn't actually matter what order we sort them in, as long as we always get the same order for the same objects. The implementation of <code>withLocks</code> can use <code>Collections.sort</code> to sort the incoming locks, but <code>java.util.concurrent.locks.Lock</code> is not naturally comparable, so we need to pass an appropriate comparator to <code>sort</code>. We need a <code>java.util.Comparator&lt;Lock&gt;</code>, but a <code>java.util.Comparator&lt;Object&gt;</code> would work just as well. Let's specify, and then implement, a suitable comparator. Here is what we need:</p> <blockquote>     <pre>/**  * Returns a comparator that imposes a complete order on all objects.  * Each invocation of this method may yield a distinct comparator,  * or may yield the same comparator.  */ public Comparator&lt;Object&gt; totalOrder() { ... }</pre> </blockquote> <p>How are we going to do this? One idea is to create an assignment of long values to each object, as needed. That would look something like this:  <blockquote>   <p>   <pre>public Comparator&lt;Object&gt; totalOrder() { return new TotalOrder(); } private class TotalOrder implements Comparator&lt;Object&gt; {     long nextNonce = 1;     Map&lt;Object,Long&gt; codes = new IdentityHashMap&lt;Object,Long&gt;();     public int compare(Object o1, Object o2) {         Long l1 = getNonce(o1);         Long l2 = getNonce(o2);         return l1.compareTo(l2);     }     synchronized Long getNonce(Object o) {         Long nonce = codes.get(o);         if (nonce == null) {             nonce = nextNonce++;             codes.put(o, nonce);         }         return nonce;     } }</pre> </blockquote> <p>There are two major problems with this approach. First, it causes object retention. Objects whose space would otherwise be recovered by the garbage collector are retained because they are reachable as keys in the <code>codes</code> map. We can't fix this by simply using a <code>WeakHashMap</code>; without the identity semantics of <code>IdentityHashMap</code> the technique doesn't work. We really need <code>WeakIdentityHashMap</code> for this, but no such class exists in the JDK yet. Fortunately, <a href="http://crazybob.org/">&quot;crazy&quot; Bob Lee</a> has come to the rescue with an <a href="http://google-guice.googlecode.com/svn/trunk/src/com/google/inject/util/ReferenceMap.java">implementation of this concept </a> inside the recently open-sourced <a href="http://code.google.com/p/google-guice/">Guice dependency injection framework</a>. I think this belongs in the JDK, and now is the time to propose it for JDK7. </p> <p>The other problem with this implementation is that this utility takes up  too much space. In general, every time you call the <code>compare</code> method one or two objects might be created and added to the map.</p> <p>Another idea for implementing this utility is to sort the objects based on their <em>identity hash code</em>. Identity hash codes are well distributed, almost like random numbers. That is naturally thread-safe, and would look something like this: </p> <blockquote>   <p>   <pre>private class TotalOrder implements Comparator&lt;Object&gt; {     public int compare(Object o1, Object o2) {         if (o1==o2) return 0;         int i1 = System.identityHashCode(o1);         int i2 = System.identityHashCode(o2);         return (i1&lt;i2) ? -1 : (i1==i2) ? 0 : 1;     } }</pre> </blockquote> <p>This is much more compact than the previous approach. But because identity has codes are not guaranteed to be unique, it occasionally treats two distinct objects as equal.</p> <p>We can get the best of both worlds - a space-efficient comparator and a complete order - by combining the two approaches:</p> <blockquote>   <p> <pre>private class TotalOrder implements Comparator&lt;Object&gt; {     long nextNonce = 1;     Map&lt;Object,Long&gt; codes = new IdentityHashMap&lt;Object,Long&gt;();     synchronized Long getNonce(Object o) {         Long nonce = codes.get(o);         if (nonce == null) {             nonce = nextNonce++;             codes.put(o, nonce);         }         return nonce;     }     public int compare(Object o1, Object o2) {         if (o1==o2) return 0;         int i1 = System.identityHashCode(o1);         int i2 = System.identityHashCode(o2);         if (i1 != i2) return (i1&lt;i2) ? -1 : 1;         Long l1 = getNonce(o1);         Long l2 = getNonce(o2);         return l1.compareTo(l2);     } }</pre> </blockquote> <p>By the way, if you haven't already checked it out, see <a href="http://crazybob.org/">&quot;crazy&quot; Bob Lee</a>'s <a href="http://code.google.com/p/google-guice/">Guice dependency injection framework</a>. We use it extensively at Google. By really taking advantage of recent language features such as generics and annotations, the Guice framework is very flexible and yet much <a href="http://code.google.com/p/google-guice/wiki/SpringComparison">simpler than existing frameworks</a>. <a href="http://stuffthathappens.com/blog/2007/03/09/guicy-good/">Throw away your XML</a> and write your Java code in Java! </p> <blockquote>   <p><font size=small>thanks to <a href="http://crazybob.org/">&quot;crazy&quot; Bob Lee</a> for contributing the Guice framework, and for reviewing this essay. </font></p> </blockquote>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.davids-world.com/archives/2007/07/asia_design.html]]></link>
    <title><![CDATA[Good, simple,  elaborate design from Asia: chopsticks and bookmarks]]></title>
    <body><![CDATA[       <a href="http://www.davids-world.com/archives/2007/07/17/IMG_4790_asia.jpeg"><img alt="IMG_4790_asia.jpeg" src="http://www.davids-world.com/archives/2007/07/17/IMG_4790_asia-thumb.jpeg" width="450" height="298" /></a> I've received two beautiful presents from Asia lately. The Chinese bookmarks on the right are finely cut-outs from paper in different colors, showing young ladies in cocktail dresses (or other interesting attire). Also, I now have my personal chopsticks, imported from Japan. They are not your average break-eat-throwaway eating tools - they're manufactured with attention to detail. They are kept in their box made from dark wood, and I've been told that people used to have their personal <i> waribashi</i>. This may become modern again in some places, as China now levies a 5-percent tax on their wooden chopsticks.           ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://blog.alexandrow.org/stories/2927473/]]></link>
    <title><![CDATA[Inode - wegen Reichtum geschlossen]]></title>
    <body><![CDATA[oder "Mit freundlichen Gruessen my ass":<br /> <br /> <cite>Sehr geehrter Herr A!<br /> <br /> Vielen Dank für Ihre Bestellung vom 13.11.2006 von<br /> xDSL Privat small 3072/512.<br /> <br /> Unter der von Ihnen angegebenen Adresse:<br /> XXX Gasse X, XXXX-Wien<br /> ist die Herstellung eines xDSL-Anschlusses nicht möglich, da Sie leider zu einem Problemgebiet gehören auf dem es bereits zu viele Xdsl Anschlüsse gibt, alle weiteren Xdsl Anschlüsse würden zu Störungen der bereits vorhanden Anschlüsse führen, weshalb Ihre Bestellung storniert werden musste.<br /> <br /> Mit freundlichen Grüßen<br /> Ihr Inode-Team</cite><br /> <br /> Auch wenn es technisch und finanziell komplett uninteressant ist, die Unterbreitung eines Alternativangebotes (ADSL) waere wohl nicht zu viel verlangt gewesen. Dann halt nicht. Hat schon wer Erfahrungen mit UTA gemacht?]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://ponderer.org/two_letter_scrabble_words]]></link>
    <title><![CDATA[two letter scrabble words]]></title>
    <body><![CDATA[<p>I&#8217;ve been playing some scrabble lately and to improve my game, I&#8217;ve considered memorizing all the valid  <a href="http://www.wolfberg.net/scrabble/wordlists/OSPD4/twos/">two letter words</a>. [1] There are 101 words, of which about 60-70 of them fall into the category of not-obvious-to-me.  So, I thought it&#8217;d be easier to just find words that are comprised of only two letter words.  For example, &#8220;somehow&#8221; would be on my list because so, om, me, eh, ho, and ow are all valid two letter words.  After coming up with a list of words, I could then try to form sentences that used only these words to act as a mnemonic.</p> <p>I started by writing <a href="http://ponderer.org/cvs/index.pl/cpp/two-word-mnemonics/">a program to generate a list of words comprised of two letter words</a>. This ended up being pretty straight forward (hint, don&#8217;t try to chain together two letter words).  Here&#8217;s a list of <a href="http://ponderer.org/cvs/index.pl/*checkout*/cpp/two-word-mnemonics/valid-words?rev=HEAD&content-type=text/plain">valid words at least 4 letters long</a>.</p> <p>There are two problems with this list.  First, there are two two letter words not included: qi and ki.  They&#8217;ll just have to be memorized separately. The other problem is that this list is too long.  Now the problem is choosing the smallest number of (or easiest to remember) words that include the other 99 two letter words.</p> <p>Unfortunately, this is the <a href="http://en.wikipedia.org/wiki/Set_cover_problem">set cover problem</a>, which is NP-complete (the reduction is left as an exercise for the reader).  I ended up <a href="http://ponderer.org/cvs/index.pl/*checkout*/cpp/two-word-mnemonics/valid-words-pruned?rev=HEAD&content-type=text/plain">pruning the list a bit by hand</a> then using a crappy greedy solution.  This gave me <a href="http://ponderer.org/cvs/index.pl/*checkout*/cpp/two-word-mnemonics/final_word_list?rev=HEAD&content-type=text/plain">a final list of 37 words</a>.</p> <p>Ugh, that&#8217;s actually almost as bad as just <a href="http://www.mattelscrabble.com/en/adults/tips/tip1.html">memorizing the list</a>.  Unless of course someone wants to make a few clever sentences out of this.</p> <p><span style="font-size: 80%">[1] I play using <a href="http://en.wikipedia.org/wiki/OSPD">OSPD4</a>.</span> </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/192]]></link>
    <title><![CDATA[Collaboration and crime at a distance at HASTAC, WWW2007]]></title>
    <body><![CDATA[<p>I went to the <a href="http://www.hastac.org/informationyear/conference">1st International HASTAC Conference</a>, April 19-21, 2007 at Duke University in Durham, NC, USA. My stated role was to tell the story of <cite><a href="http://www.w3.org/2007/04dc-rdu/w3c-stripes.html#(2)">How the W3C Process Got Its Stripes</a></cite> to this humanities research community on a <cite>The World Wide Web Evolves</cite> panel that <a href="http://www.ibiblio.org/hhalpin/">Harry Halpin</a> arranged.</p><p>After a short history of my role in the development of the Web and W3C, I noted that the Internet not only faciiltates remote collaboration; it also opens the door to crime at a distance. Extortion of the form &quot;<em>say... nice web site you got there; it would be a shame if something happened to it</em>&quot; is a reality. I&#39;m interested in research into how much the Internet can tolerate before we see the <a href="http://en.wikipedia.org/wiki/Tragedy_of_the_commons">tragedy of the commons</a>.</p><p>I noted the <a href="http://www.cl.cam.ac.uk/~rnc1/proofwork.pdf"><cite>Proof-of-work proves not to work</cite></a> result by Laurie and Clayton in 2004 as a fairly surprising result based on what looks like fairly straightforward and unsophisticated economic analysis of spam, zombies, etc. Does the humanities research community have expertise in statistics and economics of preserving cultural values such as open communication? <em>(Oh yeah... and I meant to encourage them to look at social/ethical issues around <a href="http://del.icio.us/connolly/openid">OpenID</a> and <a href="/breadcrumbs/taxonomy/term/4">distributed authentication</a>, but I completely forgot.)</em> </p><p>While HASTAC is somewhat on the leading edge of the humanities community, I&#39;m not sure their scope includes what I&#39;m looking for.</p><p>Meanwhile, at the <a href="http://www2007.org/panel1.php">Web Science panel</a> at WWW2007 in Banff, Peter asked &quot;<em>Where are the cultural anthropologists?</em>&quot; I was pleasantly surprised that some of them were there. Again, at Harry Halpin&#39;s prompting.</p><div>tags:  <a rel="tag" href="http://del.icio.us/connolly/hastac">HASTAC</a>,   <a rel="tag" href="http://del.icio.us/connolly/Duke">Duke</a>,  <a rel="tag" href="http://del.icio.us/connolly/RDU">RDU</a>, <a rel="tag" href="http://del.icio.us/connolly/digital+media">digital+media</a> </div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/05/who-are-you.html]]></link>
    <title><![CDATA[Who are you?]]></title>
    <body><![CDATA[Tools like <a href="http://www.google.com/analytics/">Google Analytics</a> are very useful to answer questions such as <span style="font-style:italic;">How many readers do you have each day?</span> and <span style="font-style:italic;">Where do your readers come from?</span> A less straightforward question, that is of interest for this post, is <span style="font-style:italic;">Who are you?</span> Are you a practitioner, a researcher or someone coming from another field than data mining. You can answer simply by using the following poll:<br /><center><br /><iframe allowTransparency="true" frameborder="0" src="http://www.dPolls.com/DisplayPoll.aspx?PollID=23908" width="250" height="150" scrolling="no"></iframe><br/><a href="http://www.dPolls.com" target="_blank" title="Create polls and vote for free. dPolls.com"><img src="http://www.dPolls.com/dPollsLink.aspx" border="0" alt="Create polls and vote for free. dPolls.com"></a><br /></center><br />It is very interesting for me to know who is reading this blog so I can adapt its content. Thanks in advance for your participation.<div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582869/interactive-tv-conference-and-best.html]]></link>
    <title><![CDATA[Interactive TV: Conference and Best Paper]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Michele Covell &amp; Shumeet Baluja, Research Scientists</span><br /><br />Euro ITV (the interactive television conference) took place in Athens last week.  The presentations included a diverse collection of user studies, new application areas, and exploratory business models. One of the main themes was the integration of multiple information sources.  For example, during a time-out in a live sporting event, some viewers may enjoy reviewing highlight footage, while others may prefer to view a parallel program to view player profiles and statistics before being automatically returned to the soccer match once the event was back underway.<br /><br />Other papers explored the idea of selecting and recommending videos.  When many videos are available, such as through IPTV or digital cable, we see a <i>heavy-tailed distribution</i> of content accesses (much like that on the internet).  There are a small number of popular channels but the combined viewings from thousands of "niche" channels outweigh the popular channels.  As on the web, the problem that arises from this situation is one of discovery. A <i>TV guide</i> type resource is not practical; methods like collaborative-filtering can help.  Nonetheless, new ideas and interfaces are needed.  <br /><br />We also presented our work at the conference.  <a href="http://www.mangolassi.org/covell/pubs/euroITV-2006.pdf">Our paper [pdf]</a> (which received the <b>best paper</b> award :) focused on using broadcast viewing to automatically present relevant information on a web browser.  We showed how to sample the ambient sound emitted from a TV and automatically determine what is being watched from a small signature of the sound -- all with complete privacy and minuscule effort.  The system could keep up with users while they channel surf, presenting them with a real-time forum about a live political debate one minute and an ad-hoc chat room for a sporting event in the next. And, all of this would be done without users ever having to type or to even know the name of the program or channel being viewed.  Taking this further, we could collect snippets from the web describing the actors appearing in a movie or present maps of locales within the movie as it takes place (no matter if users are watching it as a live broadcast or as a recoded broadcast).<img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582869" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://olabini.blogspot.com/2007/01/iain-m-banks-and-culture.html]]></link>
    <title><![CDATA[Iain M Banks and The Culture]]></title>
    <body><![CDATA[The last few weeks I've been reading some fiction. Most of it has consisted of books by Iain M Banks. I hadn't read him before, but on impulse I bought The Algebraist a few months ago. It then gathered dust in my book case for a while, until I mentioned Banks to my colleague, and he promptly borrowed me The Player of Games. Once again, I didn't get started on it immediately, due to some pressing time constraints. But when I finally read it I was mesmerized. Not hard SF (which I usually prefer), but not too soft either, and with an intelligence and vision that is hard to find. So I devoured The Algebraist, and found it very nice too. Now I've read Consider Phlebas, Look To Windwards, and I'm halfway through Excession.<br /><br />Basically, if you like Science Fiction, you will most probably love Iain M Banks. His person portraits are engaging and very believable and the backdrop is so intense and well fleshed out. Go read! I'm going to do exactly that with all books I can find by him. And when I'm finished with his SF, I guess I'll have to try the books he writes as Iain Banks too.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/08/say-anything-still-got-it.html]]></link>
    <title><![CDATA["say anything": still got it]]></title>
    <body><![CDATA[I'm at my SF Japantown crash pad, watching the movie <u>Say Anything</u> with Sha-mayn, who's seeing it for the first time.<br /><br /><img src = "http://img2.timeinc.net/ew/dynamic/imgs/020131/114624__sayanything_l.jpg"><br /><br />I watched this five or six times in my late teens, and I found it the sweetest thing.<br /><br />But tonight I viewed it through cynical lenses.  How is it going to work?  They're only nineteen years old!  She's embarking on an international scholarship, and he doesn't have any career objectives whatsoever.  How is she going to respect him in the long run?<br /><br />Then he sent her the card about how he will always be there for her (tender but not mushy), and he wept while saying manly things at the gas station to his hoodlum acquaintances, and he left her a voice mail wittily predicting her reactions...<br /><br />By the time the classic scene rolled around, I was totally won over again.<br /><br /><img src = "http://img2.timeinc.net/ew/dynamic/imgs/060907/13135__say_anythiing_l.jpg"><br /><blockquote><br />Diane's Dad: [to Lloyd] "You're not a permanent part of her life.  You're a distraction."<br /><br />Lloyd: "I'm the distraction that's going with her to England, sir."<br /></blockquote><br />Dan and I recently discussed whether people go through more heartache when breaking up as teenagers, or later in life.  We decided from our own observations that there's more heartache when you're older.  The first cut is not the deepest, it would seem.  <br /><br />It's surprising, because I thought that during young love, you go through all the angst.<br /><blockquote><br />Diane: "I can't believe we're actually doing this.  No one thinks this will actually work, do they?"<br /><br />Lloyd: "No."<br /><br />Diane: [sad, mouth downturned]<br /><br />Lloyd: "You just described every single success story."<br /></blockquote>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/DataMining/~3/146524243/super-hero-soci.html]]></link>
    <title><![CDATA[Super Hero Social Network]]></title>
    <body><![CDATA[My colleague, Mukund Narasimhan, pointed me to this paper by P. M. Gleiser on deriving the social networks of super heroes in the Marvel universe.We analyze a collaboration network based on the Marvel Universe comic books. First, we consider the...]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/07/more-compiler-strategy-call-adapters.html]]></link>
    <title><![CDATA[More Compiler Strategy: Call Adapters and Stack-based Methods]]></title>
    <body><![CDATA[Compilers are hard. But not so hard as people would have you believe.<br /><br />I've committed an update that installs a CallAdapter for every compiled call site. <a href="http://svn.codehaus.org/jruby/trunk/jruby/src/org/jruby/runtime/CallAdapter.java">CallAdapter</a> is basically a small object that stores the following:<br /><ul><li>method name</li><li>method index</li><li>call type (normal, functional, variable)</li></ul>As well as providing overloaded call() implementations for 1, 2, 3, n arguments and block or no block. The basic goal with this class is to provide a call adapter (heh) that makes calling a Ruby method in compiled code as similar to (and simple as) calling any Java method.<br /><br />The end result is that while compiled class init is a bit larger (needs to load adapters for all call sites), compiled method size has dropped substantially; in compiling bench_method_dispatch.rb, the two main tests went from 4000 and 3500 bytes of code down to 1500 and 1000 bytes (roughly). And simpler code means HotSpot has a better chance to optimize.<br /><br />Here's the latest numbers for the <a href="http://svn.codehaus.org/jruby/trunk/jruby/test/bench/bench_method_dispatch_only.rb">bench_method_dispatch_only</a> test, which just measures time to call a Ruby-implemented method a bunch of times:<br /><pre>Test interpreted: 100k loops calling self's foo 100 times<br /> 2.383000   0.000000   2.383000 (  2.383000)<br /> 2.691000   0.000000   2.691000 (  2.691000)<br /> 1.775000   0.000000   1.775000 (  1.775000)<br /> 1.812000   0.000000   1.812000 (  1.812000)<br /> 1.789000   0.000000   1.789000 (  1.789000)<br /> 1.776000   0.000000   1.776000 (  1.777000)<br /> 1.809000   0.000000   1.809000 (  1.809000)<br /> 1.779000   0.000000   1.779000 (  1.781000)<br /> 1.784000   0.000000   1.784000 (  1.784000)<br /> 1.830000   0.000000   1.830000 (  1.830000)</pre>And Ruby 1.8.6 for reference:<br /><pre>Test interpreted: 100k loops calling self's foo 100 times<br />2.160000   0.000000   2.160000 (  2.188087)<br />2.220000   0.010000   2.230000 (  2.237414)<br />2.230000   0.010000   2.240000 (  2.248185)<br />2.180000   0.010000   2.190000 (  2.218540)<br />2.240000   0.010000   2.250000 (  2.259535)<br />2.220000   0.010000   2.230000 (  2.241170)<br />2.150000   0.010000   2.160000 (  2.178414)<br />2.240000   0.010000   2.250000 (  2.259772)<br />2.260000   0.000000   2.260000 (  2.285141)<br />2.230000   0.010000   2.240000 (  2.252396)</pre>Note that these are JIT numbers rather than fully precompiled numbers, so this is 100% real-world safe. Fully precompiled is just a bit faster, since there's no interpreted step or DefaultMethod wrapper to go through.<br /><br />I have also made a lot of progress on <a href="http://svn.codehaus.org/jruby/trunk/jruby/src/org/jruby/compiler/impl/StackBasedVariableCompiler.java">adapting the compiler</a> to create stack-based methods when possible. Basically, this involved <a href="http://svn.codehaus.org/jruby/trunk/jruby/src/org/jruby/compiler/ASTInspector.java">inspecting</a> the code for anything that would require access to local variables outside the body of the call. Things like <a href="http://thread.gmane.org/gmane.comp.lang.ruby.core/10957">eval, closures, etc</a>. At the moment it works well and passes all tests, but I know methods similar to gsub which modify $~ or $_ are not working right. It's disabled at the moment, pending more work, but here's the method dispatch numbers with stack-based method compilation enabled:<br /><pre>Test interpreted: 100k loops calling self's foo 100 times<br /> 1.735000   0.000000   1.735000 (  1.738000)<br /> 1.902000   0.000000   1.902000 (  1.902000)<br /> 1.078000   0.000000   1.078000 (  1.078000)<br /> 1.076000   0.000000   1.076000 (  1.076000)<br /> 1.077000   0.000000   1.077000 (  1.077000)<br /> 1.086000   0.000000   1.086000 (  1.086000)<br /> 1.077000   0.000000   1.077000 (  1.077000)<br /> 1.084000   0.000000   1.084000 (  1.084000)<br /> 1.090000   0.000000   1.090000 (  1.090000)<br /> 1.083000   0.000000   1.083000 (  1.083000)</pre>It seems very promising work. I hope I'll be able to turn it on soon.<br /><br />Oh, and for those who always need a fib fix, here's fib with both optimizations turned on:<br /><pre>~ $ jruby -J-server bench_fib_recursive.rb      <br /> 1.258000   0.000000   1.258000 (  1.258000)<br /> 0.990000   0.000000   0.990000 (  0.989000)<br /> 0.925000   0.000000   0.925000 (  0.926000)<br /> 0.927000   0.000000   0.927000 (  0.928000)<br /> 0.924000   0.000000   0.924000 (  0.925000)<br /> 0.923000   0.000000   0.923000 (  0.923000)<br /> 0.927000   0.000000   0.927000 (  0.926000)<br /> 0.928000   0.000000   0.928000 (  0.929000)</pre>And MRI:<br /><pre>~ $ ruby bench_fib_recursive.rb<br />1.760000   0.010000   1.770000 (  1.775660)<br />1.760000   0.010000   1.770000 (  1.776360)<br />1.760000   0.000000   1.760000 (  1.778413)<br />1.760000   0.010000   1.770000 (  1.776767)<br />1.760000   0.010000   1.770000 (  1.777361)<br />1.760000   0.000000   1.760000 (  1.782798)<br />1.770000   0.010000   1.780000 (  1.794562)<br />1.760000   0.010000   1.770000 (  1.777396)</pre>These numbers went down a bit because the call adapter is currently just generic code, and generic code that calls lots of different methods causes HotSpot to stumble a bit. The next step for the compiler is to generate custom call adapters for each call site that handle arity correctly (avoiding IRubyObject[] all the time) and call directly to the most-likely target methods.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://olabini.blogspot.com/2006/12/post-of-intent.html]]></link>
    <title><![CDATA[Post of intent.]]></title>
    <body><![CDATA[This is my new blog. The purpose is to have a place where I can write about whatever I feel like. So, nothing about programming or AI, that I'll write in my other blog. Everything else will be here. I certainly expect to write some about music, movies and books here, but possibly about other things too.<br /><br />The language will most probably be a mix between Swedish and English. Some of the things I know I'm going to write about won't make sense to write in English. So, that's that.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://armstrongonsoftware.blogspot.com/2006/08/concurrency-is-easy.html]]></link>
    <title><![CDATA[Concurrency is easy]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2006/12/javapolis-2006.html]]></link>
    <title><![CDATA[Javapolis 2006]]></title>
    <body><![CDATA[<p>I'm on my way back from Javapolis 2006, unfortunately missing the third  day of the conference. One of the innovations this year was a bank of ten whiteboards where people brainstormed about the future of the Java language  and platform. I had a camera with me but I realized too late that I should  have taken snapshots of the contents of all those boards before I left. I hope  someone else will. The only snapshots I took were the vote tallies that I  discuss below. </p>  <p>There were three issues discussed on those boards that I'd like to share with you.</p>  <h2>Closures</h2>  <p>The first board contained a discussion of closures, including an informal  vote of people &quot;in favor of&quot; and &quot;against&quot; adding support  for closures. I gave a talk about closures yesterday afternoon, which explained  the goals and design criteria, showed how they fit quite smoothly into the  existing language and APIs, and more importantly explained in detail why  anonymous instance creation expressions do not solve the problems closures  were designed to solve. Before my talk about closures, the vote was about 55%  in favor and 45% against. After my talk the vote was 71% in favor and 29%  against. I don't think any &quot;against&quot; votes were added to the tally  after my talk. There was also a <em>BOF</em> (Birds-Of-a-Feather)  session in  the evening discussing closures. Of the 20 or so attendees none admitted being against  adding closures. I'm sure the fact that the BOF was scheduled opposite a free  showing of Casino Royale didn't help, but I had hoped to hear from opponents more about their concerns. We discussed a number of issues and  concerns, most of which had been discussed on my blog at one time or another. </p>  <p>One issue that I discussed with a few individuals earlier and then  at  the BOF was the idea of adding a statement  whose purpose is to yield a  result  from the surrounding closure, which you could use instead of or  in addition to providing a result as the last expression in the closure.  It turns out that adding this feature make closures no longer suitable  for expressing control abstractions. In other words, <em>adding</em>  this feature to the language would  make closures <em>less</em>  useful! This is  a very counterintuitive result. I first understood the  issue by analyzing the  construct using Tennent's Correspondence Principle, but it is much easier for most people to  understand  when the result is presented as specific examples that fail  to work as expected. For now I'll leave this as an exercise to the reader,  but I'll probably write more about it later. Incidentally, I believe the  folks who designed Groovy got closures wrong for exactly this reason. </p>  <p>There was a video made of my talk that will be posted to the Javapolis  website. Ted Neward also interviewed me on video, and Bill Venners  interviewed me on audio.  As soon as these are available on the web  I'll blog pointers to them. </p>  <h2>Native XML Support</h2>  <p>Mark Reinhold gave a talk on adding native  (i.e. language-level) support  for XML into Java. Though they were not presented as such, some  people prefer to think of the proposal as separable into a <em>language  extension</em> part and an <em>API</em> part. The  proposed APIs appear to be an improvement over the existing alternatives.  However, the language extension for writing XML literals appears to be only  marginally more convenient than the XML construction techniques provided by  <a href="http://www.jdom.org/">libraries in JDOM</a>. I personally  would like to see  the new APIs pursued but  XML creation provided in the  JDOM way. Mark took a vote by show of hands on how people felt about the two  issues, but I couldn't see the tally. There was also an informal tally about  adding native XML support on one of the whiteboards. The result was 29% in  favor and 71% against. </p>  <h2>Constructor Invocation for Generics</h2>  <p>Another much-discussed issue appeared on one of the whiteboards: the  verbosity of creating instances of generic types. This is typical:</p>  <blockquote>   <pre>Map&lt;Pair&lt;String,Integer&gt;,Node&gt; map = new HashMap&lt;Pair&lt;String,Integer&gt;,Node&gt;();</pre> </blockquote>  <p>The  problem here is that the type parameters have to be repeated twice.  One common &quot;workaround&quot; to this problem is to always create your  generic objects using static factories, but the language should not force  you to do that. A number of different syntax forms have been suggested for  fixing this:</p>  <blockquote>   <pre>var map = new HashMap&lt;Pair&lt;String,Integer&gt;,Node&gt;();</pre> </blockquote>  <p>This  unfortuately requires the addition of a new keyword. Another: </p>  <blockquote>   <pre>final map = new HashMap&lt;Pair&lt;String,Integer&gt;,Node&gt;();</pre> </blockquote>  <p>This reuses an existing keyword, but at the same time it also makes the  variable final. Another variation on this idea:</p>  <blockquote>   <pre>map := new HashMap&lt;Pair&lt;String,Integer&gt;,Node&gt;();</pre> </blockquote>  <p>In my opinion these three forms all suffer the same flaw: they place the type  parameters in the wrong place. Since the variable is to be used later in the  program, the programmer presumably wants  control over its type and the reader wants the type to be clear from the variable declaration.  In this case  you probably want the variable to be a <code>Map</code>  and not a  <code>HashMap</code>. An idea that addresses my concern is: </p>  <blockquote>   <pre>Map&lt;Pair&lt;String,Integer&gt;,Node&gt; map = new HashMap();</pre> </blockquote>  <p>Unfortunately, this is currently legal syntax that creates a <em>raw</em>  <code>HashMap</code>. I don't know if it is possible to change the meaning of  this construct without breaking backward compatibility. Another possibility: </p>  <blockquote>   <pre>Map&lt;Pair&lt;String,Integer&gt;,Node&gt; map = new HashMap&lt;&gt;();</pre> </blockquote>  <p>You can  see clearly by the presence of the empty angle brackets that the  type parameters have been omitted where the compiler is asked to infer them.  Of the alternatives, this is my favorite. I don't think it will be too hard to  implement in javac using the same techniques that work for static factories of  generic types. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582873/see-you-at-chi.html]]></link>
    <title><![CDATA[See you at CHI]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Rick Boardman, User Experience Researcher</span><br /><br />The raison d’etre for our user experience research team is driven by Google's keen interest in focusing on the user. So we help many product teams provide the best possible experience to everyone around the world, primarily by inviting thousands of people to take part in <a href="http://en.wikipedia.org/wiki/Usability_testing">usability tests</a> in our labs, and by analyzing our logs to identify problems which need fixing. From this we get the data we help our engineers make Google products as easy as possible to use for the millions of people out there who think computers are far too complicated. People like my Mum, Dad, girlfriend, Gran — and pretty much everyone I know!<br /><br />We’re one of several Google teams that publish research at academic and industry conferences, and this week a number of us will be attending the <a href="http://www.chi2006.org/">CHI</a> (Computer-Human Interaction) conference in Montreal, the world's premiere gathering for CHI researchers and practitioners. Googlers from several teams will take part in eight sessions, each focusing on different aspects of human-computer interaction. (The full program is <a href="http://www.chi2006.org/docs/finalprogram2006.pdf">here</a> – it’s a PDF file.)<br /><br /><span style="font-weight: bold;">A Large Scale Study of Wireless Search Behavior: Google Mobile Search</span> – In a session on Search and Navigation: Mobiles and Audio, we'll present the first large-scale study of search behavior for mobile users, highlighting some shortcomings of wireless search interfaces.<br /><br /><span style="font-weight: bold;">Scaling the card sort method to over 500 items: Restructuring the Google AdWords Help Center</span> – Here we adapt the popular card-sorting research methodology to large information sets where the traditional approach is impractical and discuss how we've applied this technique.<br /><br /><span style="font-weight: bold;">No IM Please, We’re Testing</span> – During the Usability Evaluations: Challenges and Solutions session we’ll discuss the use of instant messaging tools like Google Talk in usability tests, and the benefits of this technique for enabling live collaboration between test moderators and observers.<br /><br /><span style="font-weight: bold;">Add a Dash of Interface: Taking Mash-Ups to the Next Level</span> – Here we contribute to the discussion of how extendable interfaces like Google Maps are enabling exciting new online innovation through the combining of data sources.<br /><br /><span style="font-weight: bold;">Why Do Tagging Systems Work?</span> – This panel will address the design challenges of scaling tagging systems to meet their recent surge in popularity. Gmail is an example of email tagging that offers more flexibility than traditional hierarchical systems.<br /><br />D<span style="font-weight: bold;">esign Communication: How Do You Get Your Point Across?</span> – A key challenge for UI designers is communicating solutions and challenges within product teams. This panel focuses on effective ways to do that.<br /><br /><span style="font-weight: bold;">“It’s About the Information, Stupid!” Why We Need a Separate Field of Human Information Interaction</span> – This interdisciplinary panel will discuss arguments for and against a distinct field focusing on information rather than computing technology. One for the theoreticians? (-;<br /><br /><span style="font-weight: bold;">Incorporating Eyetracking into User Studies at Google </span>– In this Eyetracking in Practice workshop, we’ll talk about some of the challenges we’ve encountered in studies of eyetracking in our labs.<br /><br />If you work in, or study, the area of human-computer interaction, the user experience team is hiring. Right now we’re looking for <a href="http://www.google.com/support/jobs/bin/answer.py?answer=32255">user experience researchers</a> (including those with specialized quantitative skills), <a href="http://www.google.com/support/jobs/bin/answer.py?answer=23690">UI designers</a>, and <a href="http://www.google.com/support/jobs/bin/topic.py?dep_id=1091&amp;loc_id=1100">more</a>.<img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582873" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/08/geek-conversations-about-love-final.html]]></link>
    <title><![CDATA[geek conversations about love (final part in a series)]]></title>
    <body><![CDATA[Walking out of a club, many moons ago.<br /><br />Eve: "You looked like you were having a good time talking to that girl."<br /><br />Anthony: "Yeah!  She seems really cool."<br /><br />Eve: "Did you get her number?"<br /><br />Anthony: "No.  I don't usually ask women for their phone number."<br /><br />Eve: "What?  Why not?"<br /><br />Anthony: "Instead I give them my business card, and I come up with a reason for them to write to me.  Like, 'Email me if you want travel tips for Shanghai.'  Or 'Email me about that stock portfolio strategy I mentioned.'"<br /><br />Eve: "Does that ever actually work?"<br /><br />Anthony: "Yeah, most of the time they'll email me."<br /><br />Eve: "Really?  Whenever a guy gives me his card, I immediately throw it into the trash as soon as I walk outside.  If he doesn't have the guts to ask for my number, it's not going to work."<br /><br />Anthony: "[sighing] Maybe this is why I never manage to date girls like you."]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://michaelzoehrer.blogspot.com/2007/03/apple-bloopers.html]]></link>
    <title><![CDATA[Apple Bloopers]]></title>
    <body><![CDATA[Auch Apple hat lustige Hoppalas bei den Präsentationen.<br /><div xmlns='http://www.w3.org/1999/xhtml'><p><object height='350' width='425'><param value='http://youtube.com/v/AnVUvW42CUA' name='movie'></param><embed height='350' width='425' type='application/x-shockwave-flash' src='http://youtube.com/v/AnVUvW42CUA'></embed></object></p></div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://armstrongonsoftware.blogspot.com/2006/09/why-i-often-implement-things-from.html]]></link>
    <title><![CDATA[Why I often implement things from scratch]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://blogs.sun.com/jag/entry/sunw_rarr_java]]></link>
    <title><![CDATA[SUNW&rArr;JAVA]]></title>
    <body><![CDATA[<a href=https://duke.dev.java.net/images/gutenberg/index.html><img src=https://duke.dev.java.net/images/gutenberg/CyberGutenbergSmall.png border=0 align=right></a> In his <a href=http://blogs.sun.com/jonathan/entry/java_is_everywhere>blog this morning</a>, Jonathan announced that Sun is changing its stock symbol from SUNW to JAVA.  Totally bizarre from a geek vantage point, but totally sensible in terms of marketing and brand awareness.  It's been quite a road from a <a href=https://duke.dev.java.net/green/>small group of malcontents</a> to todays mission-critical systems. Java has changed Sun, and Sun has changed Java (for example, we had a lot to learn from the Solaris crowd about testing and quality).  It keeps feeling like the fun has only just begun.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/3756951/]]></link>
    <title><![CDATA[Liberal]]></title>
    <body><![CDATA[Sehr traurig, wenn selbst <a href="http://futurezone.orf.at/it/stories/194569/">China</a>, <a href="http://info.twoday.net/stories/730940/">Österreich</a> in Bezug auf Meinungsfreiheit hinter sich lässt.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://a-nickels-worth.blogspot.com/2007/02/losing-big-is-easy.html]]></link>
    <title><![CDATA[Losing Big Is Easy]]></title>
    <body><![CDATA[What's the connection between soda and the failure of programming languages?  I would have thought "zero" had I not recently stumbled across a wikipedia article about a little-known predecessor of Coca-Cola.  As it turns out, in 1879, a scrappy Norwegian immigrant named Jan Kjarti (who, incidentally, also coined the term "artificial sweetener") started a soda company.  His company, Slug Cola (the motto was "you'll love to Slug it down!"), produced a soda that cost a little more than Coke but which actually tasted much better (note that it didn't actually use artificial sweetener, either).  It's hard to even find out what it tasted like anymore, as none of the small but loyal customer base of Slug Cola are still alive.  Fortunately, a noted Boston historian and Slug researcher has found a few scattered journal entries and newspaper clippings from the era.  By all accounts drinking Slug, relative to drinking Coke, was something akin to a transcendent experience.  Of course, since you've heard of Coke and haven't heard of Slug, you can probably guess what happened: Coke kicked their ass.  One of Jan's protégés (one Richard Angel) later wrote a newspaper editorial entitled "Coke is Better", about the failure of their company.  It was both heartfelt and poignant, and included a frank assessment of why Slug Cola failed.  He pointed to the fact that, just as Slug was making a few gains in the marketplace, the US entered what became known as the "Soda Winter", a period of about 10 years where the public became irrationally convinced that carbonated water was bad for your stomach.  Coke survived this period relatively unscathed, in part aided by the fact that people felt that some of Coke's ingredients actually offset the purported stomach-damaging properties of carbonation.  Aside from that, and perhaps more importantly, Coke was cheaper to produce, allowing Coke to expand more rapidly into new markets.  Try as they might, the proprietors of Slug Cola just couldn't convince members of the public (who had invariably tasted Coke already) of Slug's merits.<br /><br />Well, that's most of the story, at least.  At the very end of the wikipedia article, the author points out a fact that, once I read it, I could have kicked myself for not having figured out myself.  I mean, it was a long article and went into all this detail about how the company failed.  And not once did it dawn on me, and this is the part the author pointed out, that the <i>name</i> of the product might be the most significant factor in its downfall.  Slug!  Duh!  Of course nobody wants to drink something called Slug!  I mean, you can try to tell them that Slug refers to the concept of eagerly drinking (i.e., "SLUGging down") a transcendent carbonated beverage.  But I just don't think you can overcome first impressions.  And, let's face it, the first impression of Slug is of, well, a slimy, oozing insect.  Of course, I'm guessing all of you reading this were way ahead of me this whole time, so I bet you think I'm pretty dumb.  All I can say is, go read the article and you might get a sense for how I could have failed to notice the obvious.  The story just got so poignant, convoluted, and interesting, that I experienced a momentary lapse of common sense.<br /><br />Naturally I couldn't help, at this point, thinking about other poignant and convoluted stories that I've read about, and, like a flash, something that has probably been in my mind for years now hit me like a ton of proverbial bricks!  The reason why my 3 favorite programming languages failed is that their names sucked ass!  Just like Slug!  I don't know why this didn't hit me before, but it just seems glaringly obvious now.  What's more, I did a bit of research, and determined that there seems to be an almost inverse correlation between the coolness of a language's name and the coolness of the language itself.  This might explain why we're still writing code using the equivalent of blunt, hollowed-out turtle bones, bits of twigs and leaves and stuff, just like our primitive Neanderthal ancestors.<br /><br />If you don't believe me already, let's look at the all-time coolest programming language names:<br /><br />C.  Yup.  C.  C is cool.  It's mysterious.  It's cryptic.  It's one syllable.  It could even stand for Cool.  In my mind, there is no better name for a programming language, and never will be (any attempts to replicate its coolness by picking other, single letters of the alphabet, such as D, will come off as mere me-too-ism).  I remember in college, everyone wanted to know C.  People would ask questions in CS211 that they already knew the answer to, just so they could mention some feature of C that they'd learned.  I think the name has a lot to do with it.  The language itself was my favorite programming language for many years, until I finally started learning more about real programming languages.<br /><br />C++.  You can't improve upon the name C, but C++ was about as good as you can get.  I think C++ kicked the ass of its nearest competitor due to its name.  What would you rather use (if you didn't know anything about either language's technical merits): "C++" or "Objective-C".  Obj-jeck-tive-See.  Talk about clunky.  I write code in Ob-jeck-tive-See.  By the time you get to the third syllable you've just lost people's attention completely.  They'll be staring off in another direction asking questions like, "is there a breeze in here?"<br /><br />FORTRAN.  Yup.  You may hate it, but it sure is popular, even to this day.  FORTRAN always sounded cool to me, before I learned anything about it.  It sounds like "fortress", but with a cool sci-fi twist to it.<br /><br />Java.  Gotta hand it to Sun for picking a kick-ass name.  It's short, it's cryptic, it's friendly; it implies a connection with a caffeinated beverage, something near and dear to many programmers' hearts.  Its success tracked the explosive growth of upscale coffee shops, such as Starbucks.  Yep, Java's stratospheric success has much to do with its name.<br /><br />Now let's look at the all-time loser names.<br /><br />Coming in with the 3rd worst name for a computer language, of all time, is Erlang.  I write code in Ur-lang.  I am caveman.  I grunt and say Ur a lot.  After laughing at you for a while, anyone you're trying to convince of Erlang's merits next question is, "Why is it called ERlang?  Does it stand for Ericsson Language?"  You're pretty much sunk at this point.  It would be like if you were trying to get people to use MicrosoftLanguage instead of C#.  Wouldn't happen.  They'd just feel too silly.<br /><br />Coming in with the 2nd worst name of all time is...  Smalltalk.  This list just gets sadder as we get towards number one, doesn't it folks?   Because the languages just keep getting better.  Let me ask you this, folks: Smalltalk was designed by some of the best and brightest computer scientists of all time.  Numerous of them have won Turing awards and other accolades.  Why wasn't someone amongst them smart enough to point out this dead obvious fact: something called SMALLtalk is <i>never</i> going to be successful?  I remember when I took Intro to Programming Languages and we were supposed to use SMALLtalk at one point.  I just couldn't believe it.  This is America, folks.  Bigger is better.  I wasn't about to use a puny, wimpy language that went so far as to point out its diminutive nature in its own name!  I remember I just suffered through the SMALLtalk portion of the course and didn't pay the slightest attention to any of the language's merits.  I mean, even if you ignore the SMALL aspect, what does "small talk" actually mean?  It refers to trivial, banal conversation.  Who wants to engage in banal conversation?  Does that mean the messages you send between objects are trivial and banal?  Sigh.  It only gets worse.  Smalltalk's latest incarnation is called Squeak.  That's right, it's named after the sound a small rodent/pest makes.  Might as well call it Slug.<br /><br />Last but certainly not least, here is the worst programming language name of all time: Lisp.  OMFG this is a bad name.  Bad bad bad.  What does "lisp" mean?  Lisp means "speech impediment"!!  Do you want a speech impediment!?  I don't think so!  Back in college I had even less patience for Lisp than I did for Smalltalk.  I mean, when it came down to it, I'd rather at least be able to make small talk, at a party, without having a lisp.  Hint to John McCarthy: next time you come up with something brilliant, name it after something POSITIVE.  Geez.  And, as with Erlang, it just doesn't get any better when you try to explain why Lisp is called Lisp.  It's short for LISt Processing...  Get it?  Isn't that funny?  I don't hear you laughing.  Yeah, 'cuz it's one of the worst puns ever.  And not only is it not funny, guess what, most programmers don't actually think they're going to <i>do</i> much "list processing", so they're like, "maybe it IS good at List Processing, but I could give a flying monkey's posterior because that's just not what I want to be working on" (these programmers would much rather be working on their ORM layer, ironically).<br /><br />Phew.  So there it is folks.  One of the great tragedies of modern computer science turns out to have such a simple, prosaic explanation.  I would be more surprised that nobody else has ever mentioned this before, except that it took me 16 years and an obscure wikipedia article to see the light, so I guess I shouldn't expect anyone else to have done so, either.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/05/beliefs-intelligence-and-failure.html]]></link>
    <title><![CDATA[Beliefs, intelligence, and failure]]></title>
    <body><![CDATA[From the book "<a href="http://www.amazon.com/o/ASIN/1591398622/">Hard Facts, Dangerous Half-Truths, and Total Nonsense</a>" (via <a href="http://glinden.blogspot.com/2007/05/management-and-total-nonsense.html">this blog</a>, via an email from a friend):<br /><blockquote>A series of studies by Columbia University's <a href="http://psychology.stanford.edu/~dweck/">Carol Dweck</a> shows .... that when people believe they are born with natural and unchangeable smarts ... [they] learn less over time. They don't bother to keep learning new things.<br /><br />People who believe that intelligence is malleable keep getting smarter and more skilled ... and are willing to do new things.<br /></blockquote><br />That's a pretty important fact. It's also an excellent example of how your <a href="http://paulbuchheit.blogspot.com/2007/04/whose-reality-are-you-living-in-whose.html">success is determined by your beliefs/mindset/frame</a>. If you believe that you can't get smarter, you won't!<br /><br />I searched around a bit and found <a href="http://psychology.stanford.edu/%7Edweck/">another interesting quote</a>:<br /><blockquote>...beliefs about the nature of intelligence have a significant impact on the way they approach challenging intellectual tasks: Students who view their intelligence as an unchangeable internal characteristic tend to shy away from academic challenges, whereas students who believe that their intelligence can be increased through effort and persistence seek them out.<br /><br />Students who hold an "entity" theory of intelligence agree with statements such as "Your intelligence is something about you that you can't change very much." <span style="background:#ff0">Since they believe their intelligence is fixed, these students place high value on success. They worry that failure-or even having to work very hard at something-will be perceived as evidence of their low intelligence. Therefore, they make academic choices that maximize the possibility that they will perform well.</span> For example, a student may opt to take a lower-level course because it will be easier to earn an A. In contrast, <span style="background:#ff0">students who have an "incremental" theory of intelligence are not threatened by failure</span>. Because they believe that their intelligence can be increased through effort and persistence, these students set mastery goals and seek academic challenges that they believe will help them to grow intellectually.<br /></blockquote><br />Not only does a belief in fixed intelligence prevent learning, it also makes people more risk averse! It's easy to see how some cultures or micro-cultures make people successful, while others keep them mired in failure.<br /><br />I expect that this same basic principle applies to most things, whether it's skills with computers or skills with people. Obviously "nature" plays some role, but beliefs, knowledge, and determination are usually more important. Furthermore, I suspect that you can learn to enjoy these activities, and that finding the fun is the key to mastering the skill.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/02/comics.html]]></link>
    <title><![CDATA[Comics]]></title>
    <body><![CDATA[<p> I believe in coincidences, but this is a bit strange: </p> <ol> <li>A few months ago someone recommended I read <a href="http://en.wikipedia.org/wiki/Understanding_Comics">Understanding Comics</a> by Scott McCloud, not for the comics part of it, but for the ideas about storytelling. I read it a few weeks ago.</li> <li>I've been watching <a href="http://en.wikipedia.org/wiki/Heroes_(TV_series)">Heroes</a>, which is a TV show that works like a comic book story.</li> <li>For Christmas I received a <a href="http://www.amazon.com/gp/product/B000BBAL1G/ref=pd_cp_e_title/102-4717102-9595357">Wacom Drawing Tablet</a>, and I've started to learn how to draw.</li> <li>I've been playing the demo of <a href="http://www.gamespot.com/pc/rpg/silverfall/">Silverfall</a>, which is a game that has hand-drawn art with <a href="http://media.pc.ign.com/media/791/791205/img_3986018.html">black outlines around the characters</a> that reminds me a little of comic strips.</li> <li>I found out that my Mac comes with a program called <a href="http://plasq.com/comiclife">Comic Life</a>, which lets me assemble individual drawings into a comic strip with speech bubbles.</li> </ol> <p> Is the universe trying to tell me something?  Maybe I should try making some comic strips… </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://fsinf.at/node/479]]></link>
    <title><![CDATA[Inskriptionsberatung]]></title>
    <body><![CDATA[<p>Etwas zu spät, aber besser als nie: Diese Woche findet bereits eine Inskriptionsberatung für alle angehenden Informatikstudierenden bzw. für alle, die es sich noch überlegen, statt. Zu finden sind Leute aus der Fachschaft Informatik in der <a href="http://www.tuwien.ac.at/dienstleister/weitere/studien_und_pruefungsabteilung/">Studien- und Prüfungsabteilung</a> (Hauptgebäude Karlsplatz 13, Stiege 2, 1. Stock rechts; barrierefrei erreichbar über den 2. Hof, Stiege 7 Lift (Aufzugstation K2)) noch bis Freitag, den 20.07.2007, täglich von 10:00 bis 12:00 Uhr, wo sie euch gerne beraten.</p> <p><a href="http://fsinf.at/node/479">Weiterlesen</a></p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://arved.priv.at/weblog/archives/2007/07/donothingsaturd.html]]></link>
    <title><![CDATA[do-nothing-saturday]]></title>
    <body><![CDATA[<p>We went into the City and accidently bumped into the <a href="http://www.freeparade.at/">"Free Parade"</a>. Compared to the old days, when it was called "Free Republic Parade" this event was very sad sight. <br /> Although the weather was fine, there were less than 1000 people attending (a few more posters and a bit of press coverage would have helped a lot) and the music was worse too. For a random tourist it was difficult to find out what it was all about as one had to use a magnifier to spot the political statements (and stuff like "für leiwand gegen oarsch" does not count as a statement). </p>  <p>Or maybe i am just getting old and become a Stenzel-voter. We spent the rest of the Saturday hanging out a Kaffeehaus instead.</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://michaelzoehrer.blogspot.com/2007/06/toyota-human-touch.html]]></link>
    <title><![CDATA[Toyota human touch]]></title>
    <body><![CDATA[Die beste Werbung die ich bis jetzt gesehen habe.<br /><div xmlns='http://www.w3.org/1999/xhtml'><p><object height='350' width='425'><param value='http://youtube.com/v/cgOIvmM1-U0' name='movie'></param><embed height='350' width='425' type='application/x-shockwave-flash' src='http://youtube.com/v/cgOIvmM1-U0'></embed></object></p></div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://googlemac.blogspot.com/2007/04/taste-of-google-desktop.html]]></link>
    <title><![CDATA[A taste of Google Desktop]]></title>
    <body><![CDATA[Posted by Scott Knaster, Technical Writer<br /><br />In case you missed the announcement, we recently launched <a href="http://desktop.google.com/mac/">Google Desktop for the Mac</a>, a fast and versatile new tool that extends the Google search experience to your own files on your Mac, plus your Gmail and web history. Today we're releasing an updated version (1.0.1) that <a href="http://desktop.google.com/support/mac/bin/answer.py?answer=64429&topic=11286" title="fixes a lot of the issues">fixes a lot of the issues</a> you've told us about. Along with the new version, which you'll get automatically if you're already running Google Desktop, I'd like to help you get to know Google Desktop a bit better by taking you on a quick tour through some of the things it can do.<br /><br /><span style="font-weight: bold;">Fast acting</span><br /><br />Once installed, the fastest way to get to Google Desktop is by using the Quick Search Box (QSB), and the fastest way to make the QSB appear is by pressing the ? key twice quickly. You can also get the QSB by clicking the Google Desktop icon in the Dock. Once the QSB pops up, it's simple to use: type what you want to search for, and results start appearing. Just like Google search, each result comes with a couple of lines of text (which we call <span style="font-style: italic;">snippets</span>) that give you context about that result. Snippets help you quickly figure out which result is most relevant to your search. When you see the result you want, just click it, and it opens.<br /><br />Google Desktop is handy for finding the content of files, of course, but it has some other useful tricks as well. I use it as my application launcher: I just start typing the name of the application I want to run, and within a few keystrokes, the application appears at or near the top of the results list. Google Desktop also finds System Preference panes: type the name of the preference pane, and it bubbles to the top.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp1.blogger.com/_gUrsHLexmDg/Ri-VaT7PbII/AAAAAAAAA7U/jOTQZzBRgpU/s1600-h/appearance.jpg"><img style="cursor: pointer;" src="http://bp1.blogger.com/_gUrsHLexmDg/Ri-VaT7PbII/AAAAAAAAA7U/jOTQZzBRgpU/s320/appearance.jpg" alt="" id="BLOGGER_PHOTO_ID_5057425185818242178" border="0" /></a><br /><br /><br />Google Desktop isn't limited to your local files. If you have a Gmail account, you can tell it to search through your Gmail as well. When you do this, it caches your Gmail on your Mac, so you can actually find and read Gmail messages even when you're offline. Once you turn this feature on, Google Desktop keeps up by indexing and caching new Gmail messages as soon as you receive them.<br /><br />When you're searching Gmail (or email from Mail or Entourage), you can narrow your search by adding <span style="font-style: italic;">subject:</span> to the query. For example, searching for <span style="font-style: italic;">hockey</span> finds all results with the word "hockey" in them, but typing <span style="font-style: italic;">hockey subject:tickets</span> specifically searches for an email with "hockey" in the contents and "tickets" in the subject line. Similarly, you can use <span style="font-style: italic;">from:</span> to look for email from specific senders.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp1.blogger.com/_gUrsHLexmDg/Ri-VhT7PbJI/AAAAAAAAA7c/zH0pit-t6Q0/s1600-h/gmail.jpg"><img style="cursor: pointer;" src="http://bp1.blogger.com/_gUrsHLexmDg/Ri-VhT7PbJI/AAAAAAAAA7c/zH0pit-t6Q0/s320/gmail.jpg" alt="" id="BLOGGER_PHOTO_ID_5057425306077326482" border="0" /></a><br /><br />Possibly the coolest Google Desktop feature (and my personal favorite) is the ability to search your personal web history. Have you ever tried to find a web page you know you visited a few hours, days, or weeks ago? Google search helps, but it isn't quite the right tool for this job. With your permission, Google Desktop caches your web browsing history on your Mac so you can search it later. This is an incredible time saver if you surf the web a lot and you need to go back to something you've seen before.<br /><br /><span style="font-weight: bold;">Just browsing</span><br /><br />We've done a lot with the Quick Search Box so far, but that's not the only way to access Google Desktop: you can also use it without ever leaving your browser. When you do a Google search in your browser (Safari, Firefox, or Camino), Google Desktop searches your computer as well, and if it finds anything that matches your search terms, you'll see appropriate results right at the top of the Google search results page. This is a very handy way to let you know you have something on your computer (maybe a page from your web history) that matches what you're looking for.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp2.blogger.com/_gUrsHLexmDg/Ri-Vnj7PbKI/AAAAAAAAA7k/RfKBEJyUHHI/s1600-h/onebox.jpg"><img style="cursor: pointer;" src="http://bp2.blogger.com/_gUrsHLexmDg/Ri-Vnj7PbKI/AAAAAAAAA7k/RfKBEJyUHHI/s320/onebox.jpg" alt="" id="BLOGGER_PHOTO_ID_5057425413451508898" border="0" /></a><br /><br />Click on the "results on your computer" link to get a list of search results. This Desktop results page has some handy features. At the top, the results are listed in various categories: email, web history, files, and so on. Click one of those to restrict your results to just that one category. For web history results, Google Desktop creates a thumbnail image of the web page, handy for helping you pick out the result you want. And because Google Desktop keeps track of changes to your files, every result has a <span style="font-style: italic;">Show cached</span> link that lets you see older versions of the file.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp2.blogger.com/_gUrsHLexmDg/Ri-WXj7PbMI/AAAAAAAAA70/20dUZGVzsfw/s1600-h/desktop.jpg"><img style="cursor: pointer;" src="http://bp2.blogger.com/_gUrsHLexmDg/Ri-WXj7PbMI/AAAAAAAAA70/20dUZGVzsfw/s320/desktop.jpg" alt="" id="BLOGGER_PHOTO_ID_5057426238085229762" border="0" /></a><br /><br /><span style="font-weight: bold;">Fancier tricks</span><br /><br />I talked about using <span style="font-style: italic;">subject:</span> and <span style="font-style: italic;">from:</span> when searching email, and there are more ways to narrow your search. If you're searching for a particular kind of file, you can use <span style="font-style: italic;">filetype:</span> to limit your results; for example, <span style="font-style: italic;">filetype:oo3</span> shows you only OmniOutliner 3 files; to find a folder, use (you guessed it) <span style="font-style: italic;">filetype:folder</span>. If you're searching for a file by name, type <span style="font-style: italic;">filename:</span> in your search. This works in both the browser search and the Quick Search Box. To find out all about this feature, see our <a href="http://desktop.google.com/support/mac/bin/answer.py?answer=61637" title="Help Center article">Help Center article</a>.<br /><br />Finally, we've given Google Desktop a bunch of preferences so you can tailor its behavior. Want a menu bar icon to access it? You can have that. Hate that it has a Dock icon? You can turn it off. Don't want Desktop results when you do a web search? That's a preference, too. For more settings, check out System Preferences > Google Desktop. And have fun exploring everything it can do.<br /><span style="font-style: italic;"></span>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582866/and-awards-go-to.html]]></link>
    <title><![CDATA[And the Awards Go To ...]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Proud Googlers</span><br /><br />We're usually a modest bunch, but we we couldn't help but let you know about some honors and awards bestowed on Googlers recently:<br /><ul><br /><li> Ramakrishnan Srikant is the winner of the 2006 ACM <a href="http://www.acm.org/sigs/sigkdd/awards.php#2006i">SIGKDD Innovation Award</a> for his work on pruning techniques for the discovery of association rules, and for developing new data mining approaches that respect the privacy of people in the data base.<br /><br /><li> Henry Rowley and Shumeet Baluja, along with CMU professor Takeo Kanade, received the Longuet-Higgins prize for "a contribution which has stood the test of time," namely their 1996 paper <i><a href="http://www.ri.cmu.edu/pubs/pub_2678.html">Neural Network based face detection</a></i>.  The award was given at the 2006 Computer Vision and Pattern Recognition (<a href="http://www.cvpr.org/2006/">CVPR</a>) Conference.<br /><br /><li> <i>Team Smartass</i>, consisting of Christopher Hendrie, Derek Kisman, Ambrose Feinstein and Daniel Wright won first place in the ICFP (International Conference on Functional Programming) <a href="http://icfpcontest.org/scoreboard.shtml">programming contest</a>, using a combination of C++, Haskell and 2D. Third place went to <i>Can't Spell Awesome without ASM</i>, a team consisting of Google engineer Jon Dethridge, former Google interns Ralph Furmaniak and Tomasz Czajka, and Reid Barton of Harvard. They got the judges at the functional programming conference to admit "Assembler is not too shabby."<br /><br /><li> Peter Norvig was named a Berkeley <a href="http://www.eecs.berkeley.edu/alumni/distinguished.cs.shtml#outstanding">Distinguished Alumni</a> in Computer Science, and gave the keynote <a href="http://norvig.com/speech.html">commencement address</a>.  We'd also like to congratulate  Prabhakar Raghavan, Head of Yahoo Research, who was a co-recipient of this award.<br /><br /><li> Simon Quellen Field's book <i><a href="http://www.amazon.com/gp/product/1556526105">Return of Gonzo Gizmos</a></i> was a selection of the <a href="http://www.sciambookclub.com">Scientific American Book Club</a>.<br /><br /><li> Google summer intern Rion Snow (along with Stanford professors Dan Jurafsky and Andrew Ng) got the best paper award at the 2006 <a href="http://www.acl2006.mq.edu.au/">ACL/COLING</a> (computational linguistics) conference for his paper titled <i><a href="http://ai.stanford.edu/~rion/papers/semtax_acl06.pdf">Semantic taxonomy induction from heterogenous evidence</a></i>.<br /><br /><li> Google summer intern Lev Reyzin won the outstanding student paper award at <a href="http://www.icml2006.org/icml2006/16648.html">ICML</a> (International Conference on Machine Learning) for work with Rob Schapire of Princeton on <i><a href="http://www.icml2006.org/icml_documents/camera-ready/095_How_Boosting_the_Mar.pdf">How Boosting the Margin Can Also Boost Classifier Complexity</a></i>.<br /><br /><li> As we <a href="http://googleresearch.blogspot.com/2006/06/interactive-tv-conference-and-best.html">mentioned earlier</a>, Michael Fink, Michele Covell and Shumeet Baluja won a best paper award for <i>Social- and Interactive-Television Applications Based on Real-Time Ambient-Audio Identification</i>.<br /><br /><li> <b>Update 13 Oct 2006:</b> <a href="http://www.technologyreview.com/TR35/Profile.aspx?Cand=T&TRID=437">Paul Rademacher</a> has been named one of the top innovators under 35 by MIT's <a href="http://www.technologyreview.com/">Technology Review</a>. He was cited<br />for his mashup of Google Maps and Craig's List housing data at <a href="http://housingmaps.com">housingmaps.com</a>.<br /><br /><li> <b>Update 31 Oct 2006:</b> We forgot Alon Halevy, who won the <a href="http://www.informatik.uni-trier.de/~ley/db/conf/vldb/vldb2006.html">VLDB 10 Year Best Paper Award</a> for <i>Querying Heterogeneous Information Sources Using Source Descriptions</i> with Anand Rajaraman and Joann J. Ordille.<br /><br /></ul><img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582866" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/07/finding-jvm-compilation-strategy-for.html]]></link>
    <title><![CDATA[Finding a JVM compilation strategy for Ruby's dynamic nature]]></title>
    <body><![CDATA[In JRuby, we have a number of things we "decorate" the Java stack with for Ruby execution purposes. Put simply, we pass a bunch of extra context on the call stack for most method calls. At its most descriptive, making a method call passes the following along:<br /><ul><li>a ThreadContext object, for accessing JRuby call frames and variable scopes</li><li>the receiver object</li><li>the metaclass for the receiver object</li><li>the name of the method</li><li>a numeric index for the method, used for a fast dispatch mechanism</li><li>an array of arguments to the method</li><li>the type of call being performed (functional, normal, or variable)</li><li>any block/closure being passed to the method</li></ul>Additionally there are a few places where we also pass the calling object, to use for visibility checks.<br /><br />The problem arises when compiling Ruby code into Java bytecode. The case I'm looking at involves one of our benchmarks where a local variable is accessed and "to_i" is invoked on it a large number of times:<br /><pre>puts Benchmark.measure {<br />a = 5;<br />i = 0;<br />while i &lt; 1000000<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i; a.to_i;<br />  i += 1;<br />end<br />}</pre>(that's 100 accesses and calls in a 1 million loop)<br /><br />The block being passed to Benchmark.measure gets compiled into its own Java method on the resulting class, called something like closure0. This gets further bound into a CompiledBlock adapter which is what's eventually called when the block gets invoked.<br /><br />Unfortunately all the additional context and overhead required in the compiled Ruby code seems to be causing trouble for hotspot.<br /><br />In this case, the pieces causing the most trouble are obviously the "a.to_i" bits. I'll break that down.<br /><br />"a" is a local variable in the same lexical scope, so we go to a local variable in closure0 that holds an array of local variable values.<br /><pre> aload(SCOPE_INDEX)<br />ldc([index of a])<br />aaload</pre>But for Ruby purposes we must also make sure a Java null is replaced with "nil" so we have an actual Ruby object<br /><pre> dup<br />ifnonnull(ok)<br />pop<br />aload(NIL_INDEX) # immediately stored when method is invoked<br />label(ok)</pre>So every variable access is at least seven bytecodes, since we need to access them from an object that can be shared with contained closures.<br /><br />Then there's the to_i call. This is where it starts to get a little ugly. to_i is basically a "toInteger" method, and in this case, calling against a Ruby Fixnum, it doesn't do anything but return "self". So it's a no-arg noop for the most part.<br /><br />The resulting bytecode to do the call ends up being uncomfortably long:<br /><br />(assumes we already have the receiver, a Fixnum, on the stack)<br /><pre> dup # dup receiver<br />invokevirtual "getMetaClass"<br />invokevirtual "getDispatcher" # a fast switch-based dispatcher<br />swap # dispatcher under receiver<br />aload(THREADCONTEXT)<br />swap # threadcontext under receiver<br />dup # dup receiver again<br />invokevirtual "getMetaClass" # for call purposes<br />ldc(methodName)<br />ldc(methodIndex)<br />getstatic(IRubyObject.EMPTY_ARRAY) # no args<br />ldc(call type)<br />getstatic(Block.NULL_BLOCK) # no closure<br />invokevirtual "Dispatcher.callMethod..."</pre>So we're looking at roughly 15 operations to do a single no-arg call. If we were processing argument lists, it would obviously be more, especially since all argument lists eventually get stuffed into an IRubyObject[]. Summed up, this means:<br /><br />100 a.to_i calls * (7 + 15 ops) = 2200 ops<br /><br />That's 2200 operations to do 100 variable accesses and calls, where in Java code it would be more like 200 ops (aload + invokevirtual). An order of magnitude more work being done.<br /><br />The closure above when run through my current compiler generates a Java method of something like 4000 bytes. That may not sound like a lot, but it seems to be hitting a limit in HotSpot that prevents it being JITed quickly (or sometimes, at all). And the size and complexity of this closure are certainly reasonable, if not common in Ruby code.<br /><br />There's a few questions that come out of this, and I'm looking for more ideas too.<br /><ol><li>How bad is it to be generating large Java methods and how much impact does it have on HotSpot's ability to optimize?</li><li>This code obviously isn't optimal (two calls to getMetaClass, for example), but the size of the callMethod signature means even optimal code will still have a lot of argument loading to do. Any ideas on how to get around this in a general way? I'm thinking my only real chance is to find simpler signatures to invoke, such as arity-specific (so there's no requirement for an array of args), avoiding passing context that usually isn't needed (an object knows its metaclass already), and reverting back to a ThreadLocal to get the ThreadContext (though that was a big bottleneck for us before...).</li><li>Is the naive approach of breaking methods in two when possible "good enough"?</li></ol>It should be noted that HotSpot eventually does JIT this code, it's substantially faster than the current general release of Ruby 1.8. But I'm worried about the complexity of the bytecode and actively looking for ways to simplify.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://ponderer.org/text_messages]]></link>
    <title><![CDATA[text messages]]></title>
    <body><![CDATA[<p><img src="http://ponderer.org/images/texting" title="obligatory monthly post" /> </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/07/how-to-explain-data-mining-to-your.html]]></link>
    <title><![CDATA[How to explain data mining to your mother]]></title>
    <body><![CDATA[<!-- google_ad_section_start -->Like many subjects related to computer science, data mining is a complex area. More than that, it is interdisciplinary and applicable in many domains. Working in data mining (whether you come from computer science or not is of no importance) is one of these job that is difficult to explain to your friends and family. Perhaps your friends work with technology or at least they now it, but what about your mother or your grand mother?<span class="fullpost"><br /><br />After many unsuccessful attempts to explain what I'm doing to my mother, I have tried to find an example. Indeed, explaining what I'm really doing every day is certainly too technical for her (note that understanding how she cooks a specific meal is certainly too technical for me). Therefore, I've been looking for a good example of "what is data mining". To my opinion, a nice one is regarding the fidelity cards you can have in supermarkets.<br /><br />As you certainly know, fidelity cards work like this: the shop gives you a small (10%) reduction of price each month (or on certain items) in exchange of all the information of who your are and what you buy. They can thus mine this information to discover knowledge such as "people buying this and this have 80% of chance to buy that too" or "70% of people between 20 and 25 years old purchase on Saturday", etc. Therefore, with a smart use of this information they can increase their benefits and target their offers more precisely. <br /><br />Since a mother is usually used to supermarkets, I think this is quite a good example to explain very simple and basic concepts of data mining. If you have other examples, feel free to share them by commenting.</span><!-- google_ad_section_end --><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.dekorte.com/blog/blog.cgi?do=item&id=2886]]></link>
    <title><![CDATA[Headlines]]></title>
    <body><![CDATA[<i> As the European Central Bank continues to try to resuscitate the European banking system with daily injections of cash, the fate of German banks is worrying. On Tuesday the chief executive of WestLB warned that a reluctance of foreign banks to provide credit to their German peers could lead to a banking crisis in Germany. </i> <p> <a href=http://www.forbes.com/markets/2007/08/21/germany-landesbanks-subprime-markets-equity-cx_po_0821markets20.html>Forbes</a> <p> <i> Global junk bond issuance has been frozen for two months. Fresh sales of collateralized debt obligations - the CDOs of subprime notoriety: a $1 trillion sold last year - have all but stopped. Banks have yet to off-load $300bn of debt from leveraged buy-out deals, forcing them to keep the liabilities on their books. They are all snake-bitten now. </i> <p> <a href=http://blogs.telegraph.co.uk:80/business/ambrosevanspritchard/august07/marketmayhem.htm>The Telegraph</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/05/data-mining-with-kxen.html]]></link>
    <title><![CDATA[Data mining with KXEN]]></title>
    <body><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp3.blogger.com/_O2FaMEHM37g/RjtVhGReAKI/AAAAAAAAAGA/uCdpkGf0fmk/s1600-h/kxen.gif"><img style="float:left; margin:0 10px 10px 0;cursor:pointer; cursor:hand;" src="http://bp3.blogger.com/_O2FaMEHM37g/RjtVhGReAKI/AAAAAAAAAGA/uCdpkGf0fmk/s400/kxen.gif" border="0" alt=""id="BLOGGER_PHOTO_ID_5060732633388810402" /></a><a href="http://www.kxen.com/">KXEN</a> is a company proposing data mining solutions for their customers. They are selling the KXEN Analytic Framework™ which is a suite of predictive and descriptive modeling tools for any kind of data. Recently, Miss Soulie Fogelman, working in the Europe Management Team of KXEN came to our lab in Switzerland to present ideas behind their KXEN engine. The presentation was really interesting, especially due to the fact that they propose to automate the data mining process. This particular aspect made me curious. If you are curious as well, you can find a list of <a href="http://www.kxen.com/events/workshops/">workshops</a> on the KXEN website. In addition, you may be interested in a <a href="http://www.financevisor.com/market/news_detail.aspx?rid=54684">recent article</a> on FinanceVisor about the use of KXEN data mining engine by the Austria's largest bank.<div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://lambda-the-ultimate.org/node/2420]]></link>
    <title><![CDATA[Theory and Practice of Constraint Handling Rules]]></title>
    <body><![CDATA[<p ><a href="http://citeseer.ist.psu.edu/216100.html">Theory and Practice of Constraint Handling Rules</a>, Thom Fruewirth, Journal of Logic Programming, 1994. </p> <blockquote ><p > Constraint Handling Rules (CHR) are our proposal to allow more flexibility and application-oriented customization of constraint systems. CHR are a declarative language extension especially designed for writing user-defined constraints. CHR are essentially a committed-choice language consisting of multi-headed guarded rules that rewrite constraints into simpler ones until they are solved. </p> <p >In this broad survey we cover all aspects of CHR as they currently present themselves. Going from theory to practice, we will define the syntax and semantics of CHR, introduce an important decidable property, confluence, of CHR programs and define a tight integration of CHR with constraint logic programming languages. This survey then describes implementations of the language before we review several constraint solvers -- both traditional and non-standard ones -- written in the CHR language. Finally we introduce two innovative applications that benefited from being written in CHR. </p></blockquote> <p >In the last post, we had some requests for constraint programming, so here you go. Constraint solving programs are often essentially stateful algorithms, and I see CHR as a particularly nice way of handling all that state in a declarative way. (They have a very pretty semantics as proof search in linear logic, too.)</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://piaw.blogspot.com/2007/08/review-cyclists-training-bible.html]]></link>
    <title><![CDATA[Review: Cyclist's Training Bible]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://olabini.blogspot.com/2007/08/new-model-army-high.html]]></link>
    <title><![CDATA[New Model Army - High]]></title>
    <body><![CDATA[Wow! A new New Model Army album. In two weeks! I'm full of joy.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/06/svm-toolboxes.html]]></link>
    <title><![CDATA[SVM toolboxes]]></title>
    <body><![CDATA[Support Vector Machine (SVM) is a popular machine learning technique proposed by Vapnik and co-workers in 1992. I know that several existing tools are available for SVM such as:<br /><ul><li>MySVM<br /><li>SVMlight<br /><li>Torch<br /><li>LibSVM</ul><span class="fullpost">I'm curious to know which of these toolboxes you have used and liked (for those of you who have done SVM). If you think at another toolbox, feel free to comment as well.<br /><br />P.S. Since I have to go to the army, Data Mining Research will not be updated the following three weeks. I'm looking forward to see you in July.</span><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://blogs.sun.com/jag/entry/back_from_siggraph]]></link>
    <title><![CDATA[Back from Siggraph]]></title>
    <body><![CDATA[<a href=http://www.cs.princeton.edu/~tweyrich/projects/relief/relief.pdf><img align=right border=0 src=http://blogs.sun.com/jag/resource/bas-relief-dragon.jpg></a> Siggraph has been a lot more interesting the last couple of years.  For a while there it felt as though there was an algorithm for generating Siggraph papers: dig through 100 year old physics papers, then do the straight-forward brute force numerical evaluation.  Moore's law creates magic.  In Glenn Entis's keynote he did a lot of then/now comparisons of the progression of images in Siggraph papers.  Exponentials are powerful things.  But it's amazing how the complexity of the universe sucks up that performance gain: just turn on "radiosity" in your favorite renderer, and watch a decade of gains slip away.  But hey, it works!  A decade ago radiosity was a too-expensive curiosity. <p> I really liked the blend of beauty and cleverness that wove through a lot of the papers this year.  One of my favorites on that scale was <a href=http://www.cs.princeton.edu/~tweyrich/projects/relief/relief.pdf>Digital Bas-Relief from 3D Scenes</a> by Weyrich et.al.  It's all about the gradient field!  Throw away Z.  Cool... Some, like <a href=http://gl.ict.usc.edu/research/3DDisplay/>Rendering for an Interactive 360º Light Field Display</a> had a delightfully <a href=http://en.wikipedia.org/wiki/Rube_Goldberg_machine>Rube Goldberg</a>esque feel to them: what would you do with a strange spinning mirror and a 5000 (yes, five thousand) frame-per-second graphics card and projector?  ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/07/why-is-matlab-best-language-for-data.html]]></link>
    <title><![CDATA[Why is Matlab the best language for data mining?]]></title>
    <body><![CDATA[<!-- google_ad_section_start --><a href="http://bp2.blogger.com/_O2FaMEHM37g/RpfNYlzLEuI/AAAAAAAAAGo/7NlPkUhr6dI/s1600-h/matlab_logo.PNG"><img style="float:right; margin:0 0 10px 10px;cursor:pointer; cursor:hand;" src="http://bp2.blogger.com/_O2FaMEHM37g/RpfNYlzLEuI/AAAAAAAAAGo/7NlPkUhr6dI/s200/matlab_logo.PNG" border="0" alt=""id="BLOGGER_PHOTO_ID_5086760126485566178" /></a>While starting a new project a few days ago, I had to answer the recurrent question: What language do I choose? In research, we have the opportunity of choosing any language, free or not. This is usually not the case in industry where the language can be fixed for many reasons (price, customer choice, boss choice, same as existing system, etc.).<span class="fullpost"><br /><br />I basically had to choose between Java and Matlab (C++ was soon deleted from my list since I don't like to spend time on pointers and manually free up the memory, but this is very personal). Of course a lot of others are available, but I feel more confident with these two. As most of my work was done with Matlab, I decided to start with Java. Contradictory? Not at all, I just wanted to know how easy it was to use Java for raw data mining tasks (i.e. without using JDM framework or such).<br /><br />When doing data mining, a large part of the work is to manipulate data. Indeed, the part of coding the algorithm can be quite short since Matlab has a lot of toolboxes for data mining. And when manipulating data, Matlab is definitely better. It is normal since it is done to work with matrices (MATrix LABoratory). Thus, deleting a row, a column, transposing a matrix, calculating the determinant... all these can be done in one line of code. To my knowledge, this is not the case with Java, but if you know some way, feel free to comment. <br /><br />For more information about using Matlab for data mining, the best place is <a href="http://matlabdatamining.blogspot.com/">Will's blog</a>. In the next post, I will write about the other side of the coin and explain some of Matlab's drawbacks.</span><!-- google_ad_section_end --><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/4056672/]]></link>
    <title><![CDATA[zur zeit auf reise]]></title>
    <body><![CDATA[siehe rechts .... ->]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://lambda-the-ultimate.org/node/2412]]></link>
    <title><![CDATA[Commercial Users of Functional Programming 2007]]></title>
    <body><![CDATA[<p >The program for <a href="http://cufp.galois.com/">CUFP 2007</a> is now available. The goal of CUFP is to <i >build a community for users of functional programming languages and technology, be they using functional languages in their professional lives, in an open source project (other than implementation of functional languages), as a hobby, or any combination thereof</i>.<p > This year's offering includes presentations about projects that use Caml, Erlang, Haskell, Scheme, F# and more. Domain specific embedded languages are also mentioned in the abstracts. Some of the presentations deal with projects mentioned here before, such as the Intel IXP network processor but others are new to me and sound quite intriguing.<p > Some of  the people involved with the CUFP workshop are LtU regulars and contributors who may want to add more details and respond to questions or comments.</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://arved.priv.at/weblog/archives/2007/03/shimmy_shimmy_s.html]]></link>
    <title><![CDATA[shimmy, shimmy, ?ey]]></title>
    <body><![CDATA[<p>Ok, i tried the <a href="http://www.coreyarnold.org/ibook/">shimming</a>, and it seems to work in principle. <br /> So i am not spending 700 EUR on a new logic board and i will have a few months to think about a new Laptop. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://blog.alexandrow.org/stories/4144272/]]></link>
    <title><![CDATA[Tag the Bird 1.2 out]]></title>
    <body><![CDATA[Yet another release of <a href="http://tagthebird.alexandrow.org">Tag the Bird</a> is available. Version 1.2 should fix the long known problems on Unix systems.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~3/150128978/detail1908.html]]></link>
    <title><![CDATA[Dr. Tom Anderson - BioTech Nation]]></title>
    <body><![CDATA[<p><center><img src='http://assets.gigavox.com/showimages/1908.jpg' border='0'></center></p>On BioTech Nation, Dr. Moira Gunn looks at pediatric biotech. Dr. Tom Anderson from Pediatric Bioscience talks about progress with autism and Asberger's Syndrome, and David Ewing Duncan presents the new scientific findings on coffee - big news... if you're a woman.<div class="feedflare"> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=VwZYVXhj"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=VwZYVXhj" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=uNPlfMpC"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=uNPlfMpC" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=WYdIaprj"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=WYdIaprj" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=NiFiSzIy"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=NiFiSzIy" border="0"></img></a> </div><img src="http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~4/150128978" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://googlemac.blogspot.com/2007/02/visit-to-apple.html]]></link>
    <title><![CDATA[A visit to Apple]]></title>
    <body><![CDATA[Posted by Scott Knaster, Mac Team Technical Writer<br /><br />When you start work at Google, you get to choose whether you want a Mac, Windows, or Linux computer. For many new employees who have never used a Mac (or who haven't used one for a long time), this choice represents a chance to try living in Mac OS X. Google provides a supportive environment for users of various operating systems, so newbie Mac users can count on something of a comfort zone. And, just as elsewhere in the world, new Mac users at Google are often won over by Apple's excellent combination of hardware and software.<br /><br />I spend part of my time at Google writing documentation for <a href="http://checkout.google.com/">Google Checkout</a>, and in that group I work with several of these recent Mac converts. Some of the folks in the group became intrigued with the idea of visiting Apple's headquarters, located just a brief <a href="http://maps.google.com/maps?f=d&hl=en&amp;saddr=1600+Amphitheatre+Pky,+Mountain+View,+CA+94043&daddr=1+Infinite+Loop,+Cupertino,+CA&amp;sll=37.0625,-95.677068&sspn=74.527493,86.835938&amp;amp;amp;amp;amp;amp;amp;layer=&ie=UTF8&amp;z=12&amp;om=1">drive down the road</a>, and I mentioned that I could probably convince a couple of Apple friends to host us for lunch in Apple's cafeteria. The Mac newbies thought that was a fine idea, and lunch was arranged.<br /><br />When the date arrived, my gang and I piled into our cars for the quick trip to Cupertino. We met up with my friends and spent the first part of our visit at Apple's legendary <a href="http://www.apple.com/companystore/">Company Store</a>, where we admired all the new Macs and iPods, and wandered through the selection of Apple-logoed clothing, pens, notebooks, and other chotchkas. Strong willpower kept us from buying too much stuff.<br /><br />After the store visit, our Google gang entered the main Apple building at 1 Infinite Loop and walked to <a href="http://writersblocklive.com/part-94">Caffé Macs</a>. We chose our food from among the sushi, burritos, soups, and other fare that was somewhat Google-like, paused to pay for our lunches (<a href="http://googleblog.blogspot.com/2005/08/keyword-chefs.html">which was not Google-like at all</a>), then took our seats.<br /><br />A few minutes later, as we were enjoying our lunch and chatting with Apple friends, we noticed a slight disturbance in the room, as if all the air had rushed to a single place, over by the salad bar. As you have probably guessed, it was Apple CEO Steve Jobs, grabbing some lunch with <a href="http://en.wikipedia.org/wiki/Jonathan_Ive">Jonathan Ive</a>, Apple's industrial design guru. As the two moved across the room, there was no great commotion -- after all, this probably happens just about every day at Apple -- but our Google group and many other folks stopped eating long enough to follow the two rock stars around the room for awhile.<br /><br />Later, as we drove back to Mountain View, we reflected on our visit. My coworkers enjoyed the entire trip, but were most impressed with the impromptu Steve Jobs flyby. They even accused me of timing our visit to correspond with Steve's lunch (as if!). And so, a gang of new Mac fans at Google visited Apple and became full on converts.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/08/intern-antics-2007-and-1997.html]]></link>
    <title><![CDATA[intern antics 2007 (and 1997)]]></title>
    <body><![CDATA[Tonight I attended the Google Intern Talent Show.  It was held in the main cafe, with an audience of 200.  Ten performances ranged from singing to piano to rapping to short films.<br /><br />I sat on one of the benches along the middle of the dining area, behind a table, and bopped along to the music while typing code into a ssh window.  If only I could work along to this live entertainment every evening!<br /><br />The judges gave one of the awards to a performer for "clearly having passion".<br /><br />"What the hell?"  I said to my friend next to me.  "This is Google.  It's about the results.  What does passion matter without results?  This is a <i>talent</i> show."<br /><br />His response is too snarky to print.<br /><br />...<br /><br />"Look at these interns, living their carefree lives," I said.  <br /><br />Then I suddenly remembered a mortifying story from my own intern days.  I'd forgotten this for years.<br /><br />When I was 17, I interned at Microsoft in the Bill Payment group.  At the company picnic, I stood in line behind a fellow engineering intern from my building, Redwest-A.  We chatted while waiting to get admittance to the picnic.  He was nice, and cute, though I had no designs on him since I was in a relationship at the time.<br /><br />After that, occasionally we would run into each other in the cafeteria, or he would come chat with me at intern events.<br /><br />A month later, this young man came to my office one night at 9pm.  I was playing Age of Empires over the network with a friend in a different Microsoft building.  I glanced quickly to see who it was, said hello, and turned back to my game.<br /><br />He looked pretty nervous.<br /><br />"My internship ended today," he said, standing in the doorway.  "I'm flying out tomorrow.  I came to find you to say goodbye, since we might never see each other again."<br /><br />In hindsight, I realize this probably took some guts.  <br /><br />At that moment, my Age of Empires opponent sent a rush of archers, so I wordlessly ignored the boy in my doorway, to focus on repelling the attack.<br /><br />Now you know why I identify with all the jokes about <a href = "http://niniane.blogspot.com/2007/08/geek-conversations-about-love-part-3-in.html#comment-6034509112553428528">geeky engineers</a> <a href = "http://niniane.blogspot.com/2007/08/geek-conversations-about-love-part-2-in.html">being completely oblivious</a> to other people's feelings.<br /><br />He waited for fifteen minutes, in silence, for me to finish my game.  Eventually he left without getting a proper goodbye.<br /><br />:(<br /><br />I don't remember his name, or any identifying facts.  For all I know, he could work at Google now.  But perhaps into the mists of time, I can still apologize for acting like such a dork.  Sorry.<br /><br />...<br /><br />Speaking of this generation of young'uns and their internet patterns, last week I was talking to a longtime friend about the fad nature of social networks.<br /><br />Me: ""Facebook is getting a lot more use than Friendster ever did.  That's certainly true for me."<br /><br />Friend: "We're the last to know anything, right?  So by the time you and I think something is exciting, it's probably already over."]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/184]]></link>
    <title><![CDATA[What is the Analogue for the Semantic Web? If the Web is like a Page+Links, the SW is like a...]]></title>
    <body><![CDATA[<p class="Apple-style-span">This is the first entry for the breadcrumbs blog from what may be called the Interaction perspective on things Semantic Webbish. To that end, i've been mulling over what is the paradigm for the Semantic Web - more particularly what is the physical world analogue for this concept?<br />
In order to design an interface to support a technology, to expose its potential for what it can do, it helps to know what it is - or failing that - to have a model around which we can conceptualize what it is, what it does, and somewhat how it works. It's not unusual for a new technology or concept to be introduced via an analogue of a previous, familiar technology "it's like this thing - but for this new bit." This "like this, but for this new bit" is what i've been looking for, for the SW.<br />
What i'll propose (eventually) below is that one paradigm may be a notebook in the traditional sense of the term of the notebook as a place to capture work in progress. taken one step (a big step) further, i'll argue that if the Web paradigm is a Page + Links, the paradigm for the Semantic Web may be a notebook + the memex.<br />
<strong>The Web PAGE - it's a Page. With Links.</strong><br />
We have a great model for the Web. It's the page: text with images. We're all familiar with concepts of the page. It's clear, easy to grasp. I'd postulate we need a similar construct or paradigm or analogue for the Semantic Web.  We have a long history with read-only text, whether as <a href="http://www.loc.gov/exhibits/treasures/trm015.html">official public communication,</a> or as <a href="http://www.artofthestate.co.uk/Banksy/banksy_another_crap_advert.htm">unofficial comment</a>.<br />
<img src="http://www.loc.gov/exhibits/treasures/images/tlc0090.jpg" alt="" height="350" /> <img src="http://www.artofthestate.co.uk/photos/banksy_another_crap_advert.jpg" alt="" /><br />
We also have a long experience (400+ years) of experience of a particular technology's deployment of words and images in a page - whether as an <a href="http://www.metmuseum.org/toah/hd/prnt/ho_1981.1178.29.htm">illuminated manuscript</a>, or an early printed <a href="http://www.metmuseum.org/toah/hd/prnt/ho_1981.1178.29.htm">text with woodcuts.</a><br />
<img src="http://www.bodley.ox.ac.uk/dept/scwmss/wmss/medieval/jpegs/ashmole/500/00001416.jpg" alt="" height="320" /> <img src="http://www.metmuseum.org/toah/images/h2/h2_1981.1178.29.jpg" alt="" width="400" /><br />
The one new thing added in the Web to the notion of the page - the thing that makes it a Web page - is the hypertext link.  The link is really the only core new concept introduced to the page - and more times than not, that link's job is to links to another page.  The translation from one mode of non web-page to the Web page is not a terribly huge leap. The link as a concept is almost what we'd call "intuitive" in its use.<br />
This is not to say that there are not a myriad of design considerations for making that new page+link approach useful, usable and accessible. We have developed whole suites of conventions on how to deliver pages effectively and have gone through now several generations of "web design" to ensure that text, image and link work.  Yet despite over a decade of technological evolutions in the Web technology, the paradigm for describing what we create with the Web is the same: it's a page. With Links.  The Page as paradigm informs how we design the page, the way we design the page. It's not a spreadsheet; it's not a network diagram. It's a page.<br />
Even with Web 2.0, with RSS feeds, blogs, mash ups, we still have pages. The only model variant in Web 2 with location based mash ups is that the main image on the page is now a map.    åAnd again, Maps are familiar technology that have been around for millennia, and are a technology most of us had some training in our education on how to use. It's amazing how much we use familiar technologies to model the representations for new ones, perhaps especially in computing. Bottom line, the web page as page is a clear model that rapidly communicates what the Web is largely about: enabling people to publish content, communicate ideas, and link into the myriad of other ideas available. The page is a powerful analogue for communicating this model, and it is, i would argue, because there is such a clear model, that there has been such rapid adoption of the concepts, and interests across disciplines in the technology.<br />
<strong>Analogue for the Semantic Web?</strong><br />
So, if the analogue for the Web is the page, what is the analogue for the Semantic Web?  And why is finding this analogue  important? Part of the answer to that question may stem from whom do people in the Semantic Web community wish to attract to be involved as practitioners, innovators, creators, discoverers in this space? If it's the same range of passions and expertise that have brought so much to the Web from the arts, humanities, sciences, business and so on, then this question of model becomes critical.<br />
Consider for a moment how the Semantic Web is described in the new First Stop Shop for What is It, Wikipedia.<br />
<a href="http://en.wikipedia.org/wiki/Semantic_web">The Wikipedia entry for the semantic web begins</a>:    <em>The Semantic Web is an evolution of the World Wide Web in which information is machine processable (rather than being only human oriented), thus permitting browsers or other software agents to find, share and combine information more easily.  It is a manifestation of W3C director Tim Berners-Lee's vision of the Web as a universal medium for data, information, and knowledge exchange.  At its core the Semantic Web consists of a data model called Resource Description Framework (RDF), a variety of data interchange formats (e.g RDF/XML, N3, Turtle, N-Triples), and notations such as RDF Schema (RDFS) and the Web Ontology Language (OWL) that facilitate formal description of concepts, terms, and relationships within a given domain.  The burgeoning Semantic Web comprises newly created and/or transformed web data sources endowed with computer-processable meaning (semantics).<br />
</em>Now, all that description tells anyone about the semantic Web is that it's for Machines. And i'm not sure i believe that the the end game imagined for the Semantic Web is to make data easier for machines to process. It would seem that that machine-processable stuff is a means to an end, but not the end itself. The end is still about people, and PEOPLE being able to build knowledge by moving through linked information.<br />
We might ask, then, if the Semantic Web has the same human-oriented goals as the Web, why not just use the same model for describing it: pages with links.  I'd suggest that the page is not robust enough to support what more we get from the Semantic Web's far greater emphasis on the Link as opposed to the Page.<br />
Because of how it's structured, content in the Semantic Web can be richly associated. We can have the potential with the Semantic Web to explore things in new ways via these associations. For example Beethoven as a composer can be associated with Genres in Music, and to specific Recordings as instances, which associate with various artists, and recording companies or even with the politics of certain works being recorded or not. Beethoven is also associated with a particular period in History; with the interaction of styles in that period, and hence there are correlations between music and architecture and scientific thought at the time. All these associations branch out from Beethoven directly.  One might even say that such branches constitute a graph, and the page cannot reflect these possibilities. <a href="http://eprints.ecs.soton.ac.uk/12911/">But neither, David Karger and i have argued, does a raw graph, express that richness</a>.<br />
For one thing, besides being illegible on a number of levels, these graphs present only things which are directly connected on the graph. The Semantic Web has a technical facility to support inferring connections between points according to the expression of rules. For instance, one might see a connection between a Beethoven work and the structure of a poem or an equation, and be able to express that connection such that a new connection among these points becomes available. Seeing, finding and drawing those kinds of connections is a primary attribute which the Semantic Web can enable. The page cannot readily contain that possibility.<br />
Beyond the Wikipedia definition for the Semantic Web, then, the Semantic Web's promise is to enable people to explore, associate, and connect information to build new knowledge. This sounds a lot like what <a href="http://en.wikipedia.org/wiki/Vannevar_Bush">V. Bush</a> described in <a href="http://www.theatlantic.com/doc/194507/bush">As We May Think</a> as the Memex (see Chapter 2: Vannevar Bush and Memex, by Ronald D. Houston and Glynn Harmon in <a href="http://infotoday.stores.yahoo.net/arist41.html">ARIST 41</a> for a fab overview of the perceptions of this paper since its publication).<br />
<img src="http://www.kerryr.net/images/pioneers/gallery/memex_lg.jpg" alt="" /> Drawing of Bush's theoretical Memex machine (Life Magazine, November 19, 1945)<br />
The key part of the Memex is making and sharing associations among divergent sources. Bush imagined professions of "trail blazers" (section 8 of As We May Think) emerging who would go about creating these inferences, and publishing them in new kinds of encyclopedias.<br />
<strong><em>il n’y a pas de hors-memex</em></strong><br />
Bush's view assumes that there are encylopedias and then trails built with the memex through these encyclopedias.<br />
But what if there was only the memex? In a sense that's what the Semantic Web suggests with its emphasis on links and everything having its own unique id (uri). But does this idea of the Semantic Web as a vehicle that supports making associations - as a memex - get us closer to a readily translatable concept of the Semantic Web?<br />
I'd like to tease out a few more parts of the memex idea as a way to addressing that point. First is that bush imagined the Memex very much as a tool for scientists - as a way to help researchers to make sense of all the work not only they themselves, but their colleagues as well, would be doing. This focus on the researcher is particularly appropriate for this current exploration of possible paradigms because, because it focuses on the artefact of interest - the logbook - as an object supporting <em> work in progress.</em><br />
Second, the memex took in not only textual notes but images of observations the scientist would literally take with a camera while working. The memex is very much a multimedia repository of not only others' extant work but of the scientists own work-in-progress.<br />
I  think this notion of work in progress, of personal work log, is critical. This is distinct from the read-only model of the Web, and moves towards a writerly as well as a readerly medium (to use Barthe's terms). But more particularly, it adds a new dimension to linking from elements presented as finished pages to elements which are in the rough, personal. Which may or may not be (yet) meant for publication. There is something of this middle or transitional ground happening on the Web.  This entry is an example of it.<br />
We see this writerly side in Blogs, rss feeds, tags, comments, ratings - all the places where Web 2 approaches are helping with more rapid publication and inter-commentary of content on the Web.   But even  this new writerly approach is not quite what the memex is also getting at with its model of something almost as familiar to us as the technology of the printed page in a printed book: and that is the scientist's notebook.<br />
<strong>Scientist's Notebook as first pass at Semantic Web Analogue.</strong><br />
Notebooks can be the complete filling of pages; or of scaps of information. They can be used for the capture of formal studies like experiments, observations in field work, or notes for future reference. But they are all unlike what we think of as the Web in a particular way: the web is public; we use its protocols to publish work for others. Lab/note books are personal, idiosyncratic, and in particular, <em>they represent works in progress</em>. We may find that we use the semantic web technologies both locally/personally as well as distributed/publically. This *for the researcher* or for the researcher's work in progress as a model of part of the Semantic Web is very memex'y. It's also very different from what the web has become.   I think this blending of personal use with the semantic web's potential for  automatic association of external, associated resources is a significant shift in how most of us have been thinking about the semantic web.<br />
Let me frame that last statement. There have been projects thinking about the<a href="http://www.semanticdesktop.org/xwiki/bin/view/Main/"> semantic web desktop</a> - using the semantic web as a personal or local server layer for data. There have also been projects like <a href="http://mytea.org.uk/">myTea</a> which have imagined using the semantic web technologies to maintain <a href="http://eprints.ecs.soton.ac.uk/10693/">transparent context histories</a> as a great enabler for a bioinformatics lab book that can automatically track and record bioinformatics experiments as they develop.<br />
i don't think however that anyone has previously proposed a paradigm, model, analogue for the semantic web as a researcher's notebook. with links. or, more properly, with memex, where the memex itself is an extension of the researcher's notes, observations, raw data, work in progress.  I've already said that the page can't reflect the rich associative possibilities of what the semantic web promises so one may ask, how could the analogue of a researcher's notebook which is so idiosnycratic.<br />
One way is that it is possible in a notebook (or on a huge sheet of paper or on a whiteboard - other spaces of work in progress) to draw lines easily across notes to make connections. David Wang and i this past fall at UMD's MindLab were looking at a way t<a href="http://eprints.ecs.soton.ac.uk/13398/">o draw these kinds of lines between known points in an ontology</a> to help create rules/inferences to make new connections in the knowledge base.<br />
<img src="http://imagecache2.allposters.com/images/14573-POD/1099827.jpg" alt="" align="left" /> Indeed, there may be a great deal more we can take from the qualities of a researcher's notebook to see as a design prompt to capture more of the semantic web. But one of the important components of this notion of the semantic web as notebook + memex is that it situates the Semantic Web conceptually within the realm of the human. It also situates the semantic web as something that can be part of a process that is engaged with the user. Right now, very few semantic web tools, whether mspace, haystack or tabulator to name a few, support direct authoring.<br />
The idea of seeing the semantic web be pull inable into a researcher's context, where the notebook is constantly seeking associations to support the researcher's process, seems to me a compelling kind of inversion of the usual models - instead of putting stuff out there, we are bringing stuff in here, working it. potentially sharing it. but first and foremost using it, munging it, creating with it to develop new knowledge. Process rather than end.</p>
<p class="Apple-style-span"></p>
<p><strong>Heterogeneous, Implicitly Structured, Implicitly Associated Data Capture<br />
</strong>Another notion of the notebook which seems interesting is that it also breaks the page as read-only, well structured, well presented information space. In the physical pages of the notebook, we see various forms of data entry where long exegesis is rare compared to short bursts of information, what Michael Bernstein calls "<a href="http://eprints.ecs.soton.ac.uk/13319/">information scraps</a>".<br />
These various uses of the page-as-surface, for a variety of forms of content , also demonstrates the personal, though frequently work-related, work-in-progress attributes of this popular form of content capture.        Again, we do see examples
of a kind of information scrap on the Web - these can be one-liner blog entries pointing to news or other ideas, to tags, to recommendations, to comments. Indeed, entire modes of communication have been built up around short messages like texts, or widgets that communicate only the weather.  But these info bytes, if you will, unlike the info scrap, are again meant for publication - for someone else to be able to consume. Tags may be an interesting boundary object as they can be both personal markers - highly idiosyncratic - as well as group or public markers. But for the most part, the short bytes we find on the web are there for public consumption. Notebooks are workspaces, pre-publication resources, the working out of ideas.<br />
This is why for now, in any case, i'm focussing on the idea of the note book rather than the personal journal or log. The note book or lab book is a place for taking notes on ideas; it is not the final forum for the ideas, but it is the gathering place for them. Another similar kind of physical world analogue for this kind of working out process is the notecard stack. Indeed, one of the earliest hypertext systems, <a href="http://portal.acm.org/citation.cfm?id=30859&amp;coll=portal&amp;dl=ACM">NoteCards</a>, attempted to emulate this system of idea capture and reordering. <a href="http://www.cs.brown.edu/memex/ACM_HypertextTestbed/papers/37.html">Spatial hypertext </a>systems like Tinderbox have also capitlized on the the affordances of moveable cards or small objects to capture ideas where these ideas can be spaced out, clustered, where space in the organization communicates a kind of meaning - at least to the author of the structures.</p>
<p style="text-align:right;"><img src="http://www.fotosearch.com/comp/corbis/DGT089/42-17091970.jpg" alt="" align="right" /></p>
<p>The attributes of the notecard stack that i find particularly relevant are the usual purpose of the stack and the kinds of data the cards hold. When i was in highschool, we were taught a particular methodology for notecards as the way to prepare a research paper. There were idea cards, quotation/paraphrase cards, and bibliography cards. These cards could be created in any order as material was discovered or ideas occured "only one idea to a card; only one quotation per card,"  "only one reference per card" - the idea being of course that individual cards could be organized and reorganized spatially for getting a picture of the developing paper. Not all cards would be used. Gaps could be detected. The organized cards could then be put into one pile, and the paper written effectively from the turning over or laying out of a set of cards at a time (one exercise required us to generate an outline of the paper from the cards before proceeding to the paper-writeing).<br />
The relevance of the notecard model to the concept of the semantic web as personal work space with associated public data is the integration of personal ideas with external sources: the idea cards backed up with the quotations from external sources. In the case of notecards, these associations are either manually created by the researcher/author, or are presented by (and thus attributed to) another author.<br />
The goals are the same: building new knowledge by capturing ones own ideas, and working with others - whether these are ideas that come up in a conversation with others and are hastily jotted down, or are captured from a published source.  there is an interplay here, a making of meaning. I mentioned spatial hypertext: Mark Bernstein's <a href="http://www.eastgate.com/Tinderbox/">Tinderbox </a>software as said very much follows the notecard paradigm to support just this kind of intermix activity: it enables links to be copied from the web into cards, and of course enables other kinds of data to be written into the cards. It blends capture of the external with capture of the personal. So do many digital notebook ideas, like the <a href="http://www.circusponies.com">Circus Ponies</a> one i'm using for drafting this entry - they don'thave the nice spatial affordances of Tinderbox, however - they are more locked to the paper metaphor.   Something neither of these fine programs have that i think the notebook or notecard + memex could bring is the automatic discovery of association from both the personal and the external into the personal work space.<br />
This is an idea that <a href="http://mit.edu/max/www/">Max Van Kleek</a>, Michael Bernstein, <a href="http://theory.lcs.mit.edu/~karger/">David Karger </a>(at MIT) and myself are pushing on right now from one angle in something called "doing" (pronounced "doyng"), and that the <a href="htt://mspace.fm/projects/richtags/">Rich Tags project</a> is pushing on in an associated other space. We're interested in finding ways/metaphors/paradigms to support the capture of personal structured data (like Michael's information scrap of a number jotted down that is a phone number) so that it can be first associated with what Max has started grabbing - the local context - and from there look at drawing in appropriate associated external contexts.<br />
In a way the <a href="http://haystack.lcs.mit.edu/">Haystack project </a>modeled this eb and flow of personal information like calendar events with external information such as flight bookings. It created an integrated view of these information resources so that they would be concurrently available. No one knew they were working with semantic web data, and the opportunity to explore across contexts (like the bethoven example way at the start of this entry) was not there. I think this time we're asking the question what would this new thing look like from the moment the computer is engaged. How might input mechanisms change? how might representations across applications-as-contexts differ if there was this collective "data soup" from which these contexts could draw/share?<br />
For the moment, i'm imagining this context-rich interaction as the Semantic Web, and the way i'm thinking of it is as a researcher's Note Book (we are all knowledge workers at some point) of work in progress. A notebook. With the Memex.<br />
The reason that vision of note book + memex appeals to me particularly is that it foregrounds an active engagement with the data - both reading it, writing it, potentially sharing it for reuse.  And i think that kind of in-process engagement with information - to have in work data and external data blending for the development of new knowledge is what the Semantic Web is about.</p>
<script src="http://digg.com/tools/diggthis.js" type="text/javascript"></script><p> (dig count added May Day, 2007).</p>
<p> <hr><br />
<em>© </em><em><a href="http://www.ecs.soton.ac.uk/~mc">m.c. schraefel,</a></em><em> 2007,</em> <a href="/#people">visiting fellow, DIG</a>. The ideas in this exegesis were initially stimulated from various conversations at January's DIG face to face meeting, then explored later in Jan, 2007 as part of an talk on work in progress while i was visiting the <a href="http://www.ischool.utexas.edu/">iSchool, University of Texas at Austin</a>.</p>
]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://lambda-the-ultimate.org/node/2426]]></link>
    <title><![CDATA[Establishing Object Invariants with Delayed Types]]></title>
    <body><![CDATA[<p ><a href="http://research.microsoft.com/research/pubs/view.aspx?0rc=p&amp;type=inproceedings&amp;id=2073">Establishing Object Invariants with Delayed Types</a>. Manuel Fähndrich, Songtao Xia.<br > <blockquote ><p > Mainstream object-oriented languages such as C# and Java provide an initializationmodel for objects that does not guarantee programmer controlled initialization of fields. Instead, all fields are initialized to default values (0 for scalars and null for non-scalars) on allocation. This is in stark contrast to functional languages, where all parts of an allocation are initialized to programmer-provided values. These choices have a direct impact on two main issues: 1) the prevalence of null in object oriented languages (and its general absence in functional languages), and 2) the ability to initialize circular data structures. This paper explores connections between these differing approaches and proposes a fresh look at initialization. Delayed types are introduced to express and formalize prevalent initialization patterns in object-oriented languages.</blockquote> <p > It's interesting to note that in Ada type definitions <i >can</i> contain initializers (i.e., initialization expressions), partly because constructors were introduced into the language only in the second revision of the language (Ada95). </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/02/jet-engines.html]]></link>
    <title><![CDATA[Jet Engines]]></title>
    <body><![CDATA[<p>Creating high-performance technology in a competitive field? Managing your developers' weaknesses and ignoring their strengths may cost you. </p><p>Let me illustrate. </p><p>Iron accounts for 35% of the Earth's mass. And from iron comes carbon steel (iron and carbon) which accounts for 90% of steel production. As metals go, steel is cheap, abundant and easy to work with. Steel is versatile and <em>good</em> at most everything metals do. If steel was your employee, it would be a damn fine one. You might want all your employees to be <em>just like steel</em>. After all, compared to other materials, it has few weaknesses - but also few extraordinary strengths. </p><p>Steel can't do everything. It distorts at extreme temperatures. Steel is not brittle like ceramics but it's also not nearly as hard. It is much cheaper than titanium but weighs almost twice as much. It is a poorer electrical conductor than gold. And of course, steel's strength and hardness in extreme conditions doesn't hold a candle to the single crystal nickel-titanium superalloys* from which they carve jet turbine blades - albeit at enormous cost. </p><p>Every one of these other materials demonstrates incredibly high performance in a narrow space and is either prohibitively expensive or ineffective in other arenas. </p><p>Even so, it is <em>impossible</em> to build a modern, efficient jet engine with just typical carbon steel. </p><p>The bottom line?</p><p>Profound strength and profound weakness often come together. Yet without a spectrum of those profound strengths at your disposal, it won't be possible to develop cutting-edge technology at a competitive level. </p><p>I don't mean to say that a well-rounded developer can't also have profound strengths - I know several of these people. It's a no-brainer that you need to do what it takes to keep these gems. Reward reliable and well-rounded developers for their lack of weaknesses and, <em>if you need their contributions</em>, reward brittle, unorganized, high-maintenance, socially-inept (insert favorite weakness here) developers for their strengths. Or someone else will.</p><p><strong>Notes</strong></p><p><span style="font-size:85%;">* Some of single crystal superalloys are nickel-iron alloys. If iron is the dominant metal in the alloy, these superalloys might be considered steel.</span></p><p><strong>For More Information</strong></p><p><a href="http://www.amazon.com/Discover-Your-Strengths-Marcus-Buckingham/dp/0743201140/sr=8-1/qid=1172763449/ref=pd_bbs_sr_1/102-1799995-3382565?ie=UTF8&amp;s=books"><span style="font-size:85%;">Now, Discover Your Strengths</span></a></p><p><span style="font-size:85%;">Rolls Royce Trent Aeroengine</span></p><p><a href="http://www.msm.cam.ac.uk/phase-trans/mphil/Trent1/"><span style="font-size:85%;">Excellent PowerPoint of the Rolls Royce Trent Aeroengine series commercial jet engines</span></a><span style="font-size:85%;"><br /></span><a href="http://www.msm.cam.ac.uk/phase-trans/mphil/Trent1/sld024.htm"><span style="font-size:85%;">Rolls Royce Trent Aeroengine engine materials</span></a></p><p><span style="font-size:85%;">Wikipedia: </span><a href="http://en.wikipedia.org/wiki/Iron"><span style="font-size:85%;">Iron</span></a><span style="font-size:85%;"> </span><a href="http://en.wikipedia.org/wiki/Steel"><span style="font-size:85%;">Steel</span></a><span style="font-size:85%;"> </span><a href="http://en.wikipedia.org/wiki/Ceramic"><span style="font-size:85%;">Ceramic</span></a><span style="font-size:85%;"> </span><a href="http://en.wikipedia.org/wiki/Cermet"><span style="font-size:85%;">Cermet</span></a><span style="font-size:85%;"> </span><a href="http://en.wikipedia.org/wiki/Silicon_carbide"><span style="font-size:85%;">Silicon Carbide</span></a><span style="font-size:85%;"> </span><a href="http://en.wikipedia.org/wiki/Superalloy"><span style="font-size:85%;">Superalloys</span></a><span style="font-size:85%;"> </span><a href="http://en.wikipedia.org/wiki/Amorphous_metal"><span style="font-size:85%;">Complex Metal Alloy</span></a><span style="font-size:85%;"> </span><a href="http://en.wikipedia.org/wiki/Composites"><span style="font-size:85%;">Composites</span></a></p><p><a href="http://doc.tms.org/ezMerchant/prodtms.nsf/ProductLookupItemID/04-576X-35/$FILE/04-576X-35F.pdf?OpenElement"><span style="font-size:85%;">Development of Single Crystal Superalloys</span></a><span style="font-size:85%;"><br /></span></p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/05/jvm-languages-future.html]]></link>
    <title><![CDATA[JVM Languages: The Future]]></title>
    <body><![CDATA[I've started a Google Group for all those interested in the future of alternative languages (i.e. not Java) on the JVM. A number of you knew this was coming, and I've already invited folks that expressed an interest in my RedMonk Unconference session at JavaOne. The rest of you are also invited.<br /><br />Please plan to talk shop about language implementation strategies, pain points on the JVM, and what we can do to build a common set of libraries, frameworks, and patterns to ease and improve the Java platform's support for many languages. The time for action is now, my friends, and we have a wealth of information across all our language projects to draw from. We must come together to build a stronger base for everyone to stand upon.<br /><br /><a href="http://groups.google.com/group/jvm-languages">I welcome you to the future.</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[/info/1xjgg/comments#c1xnkf]]></link>
    <title><![CDATA[mjakl on  Ecmascript 4: try it now! (reference implementation, specs and a brand new site)]]></title>
    <body><![CDATA[<p>The new design looks like any domain-grabber site...</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/02/heroes-claire-bennet.html]]></link>
    <title><![CDATA[Heroes: Claire Bennet]]></title>
    <body><![CDATA[<p> In Heroes episodes 15 and 16 (<a href="http://en.wikipedia.org/wiki/Run%21_%28Heroes%29">Run</a> and <a href="http://en.wikipedia.org/wiki/Unexpected_%28Heroes%29">Unexpected</a>), Claire starts to believe her father and the Haitian are behind her mother's memory loss. I think <strong>Claire's going to leave Texas and head to New York</strong>. </p> <p> What's keeping her in Texas? </p> <ol> <li><strong>Her father</strong>. However, she's starting to hate her father for what he's done to her mother. She wants to get away from him. (I wonder what he'll do to the Haitian now that he knows Claire's memory wasn't wiped.)</li> <li><strong>Her mother</strong>. Claire is really worried about her mother.</li> <li><strong>Her brother Lyle</strong>. His memory was wiped, and he's not making much of an appearance in the show anymore.</li> <li><strong>Her friend Zach</strong>. His memory was wiped as well, and he's also not making much of an appearance in the show.</li> <li><strong>Her biological mother, Meredith</strong>. She's gotten some money from Nathan, and she's heading to Mexico, so she won't be in Texas for much longer.</li> </ol> <p> Only her mother is keeping Claire in Texas. I think her mother will die very soon, and Claire will no longer have any need to stay in Texas. She'll head to New York to find Peter, and eventually meet her father Nathan. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/08/first-thing-that-you-need-to-understand.html]]></link>
    <title><![CDATA[The first thing that you need to understand about humans]]></title>
    <body><![CDATA[Humans aren't rational -- they rationalize. And I don't just mean "some of them" or "other people". I'm talking about everyone. We have a "logic engine" in our brains, but for the most part, it's not the one in the driver's seat -- instead it operates after the fact, generating rationalizations and excuses for our behavior.<br /><br />I first realized this fact several years ago when I read something about "split brain" people. These people have had their corpus collosum, the structure which connects the left and right brain hemispheres, cut or damaged, leaving the two halves of the brain largely unable to communicate with each other. I don't recall where I read that, but a quick Google turned up this <a href="http://www.ebonmusings.org/atheism/ghost.html#callosaldisconnection">similar article</a>:<br /><blockquote>"A split-brain patient shown a photograph of Hitler only in the right hemisphere, for example, might exhibit facial expressions indicating anger or disgust. But when asked to explain those emotions, the patient will often invent an answer, such as 'I was thinking about a time when someone made me angry.'" (Newberg and D'Aquili 2001, p. 23) <br /><br />Kenneth Heilman offers another, more concrete example, writing about the research of Dr. Michael Gazzaniga and his colleagues. In one experiment, they showed sexually suggestive pictures to a woman with callosal disconnection, flashing them only on the left half of a screen so only her right hemisphere could perceive them. The woman giggled and blushed, but when asked why she was doing so, she replied that she was thinking of something embarrassing (Heilman 2002, p. 129).<br /><br />Are these people lying? In one sense of the word, perhaps; but it seems clear that there is no conscious intent to deceive. Rather, researchers have concluded, what is happening is that the right hemisphere, upon seeing an image with strong emotional connotations, generates the appropriate response. However, due to the callosal disconnection, it cannot transmit the associated sensory data to the left hemisphere and its language centers. The left hemisphere perceives a change in the body's state, but does not know why - and so it "fills in" the missing details, fabricating a logical reason for the emotional reaction. This happens at a subconscious level, so that the person genuinely believes the verbal explanation they provide. In the language of psychology, this filling-in process of unconscious invention is called confabulation.</blockquote> <br /><br />The important realization is that this process of "confabulation" is not limited to people with brain damage -- everyone does it -- people with "split brain" are just a little more obvious.<br /><br />It's tempting to think that "most people" have this problem, but that you or I are different, to think that our actions are all logical. That is a mistake -- denying the truth is irrational and dangerous. By accepting that people are fundamentally irrational, we can deal with ourselves and others in a more rational and effective manner. We can learn to manage our irrational selves (somewhat). If, however, we insist that all of our actions and feelings are rational, then we will never be able to deal with them honestly, and are more likely to cling to irrational beliefs and limitations. If we are going to be honest, then we must admit the possibility that everything we know and believe is, in fact, incorrect. <br /><br />The fascinating (and easy to read) book "<a href="http://www.amazon.com/Influence-Practice-Robert-B-Cialdini/dp/0321011473/">Influence: Science and Practice</a>" has some great examples and explanations of how people actually work. Here's a great quote about the effect of attractiveness, and how unaware people are of their true decision making process:<br /><blockquote>A study of the 1974 Canadian federal elections found that attractive candidates received more than two and a half times as many votes as unattractive candidates (Efran & Patterson, 1976). Despite such evidence of favoritism toward handsome politicians, follow-up research demonstrated that voters did not realize their bias. In fact, 73 percent of Canadian voters surveyed denied in the strongest possible terms that their votes had been influenced by physical appearance; only 14 percent even allowed for the possibility of such influence (Efran & Patterson, 1976). Voters can deny the impact of attractiveness on electability all they want, but evidence has continued to confirm its troubling presence (Budesheim & DePaola, 1994). <br /><br />A similar effect has been found in hiring situations. In one study, good grooming of applicants in a simulated employment interview accounted for more favorable hiring decisions than did job qualifications—this, even though the interviewers claimed that appearance played a small role in their choices (Mack & Rainey, 1990). The advantage given to attractive workers extends past hiring day to payday. Economists examining U.S. and Canadian samples have found that attractive individuals get paid an average of 12-14 percent more than their unattractive coworkers (Hammermesh & Biddle, 1994). <br /><br />Equally unsettling research indicates that our judicial process is similarly susceptible to the influences of body dimensions and bone structure. It now appears that good looking people are likely to receive highly favorable treatment in the legal system (see Castellow, Wuensch, & Moore, 1991; and Downs & Lyons, 1990, for reviews). For example, in a Pennsylvania study (Stewart, 1980), researchers rated the physical attractiveness of 74 separate male defendants at the start of their criminal trials. When, much later, the researchers checked court records for the results of these cases, they found that the handsome men had received significantly lighter sentences. In fact, attractive defendants were twice as likely to avoid jail as unattractive defendants. In another study —- this one on the damages awarded in a staged negligence trial -- a defendant who was better looking than his victim was assessed an average amount of $5,623; but when the victim was more attractive of the two, the average compensation was $10,051. What's more, both male and female jurors exhibited the attractiveness-based favoritism (Kulka & Kessler, 1978).<br /><br />Other experiments have demonstrated that attractive people are more likely to obtain help when in need (Benson, Karabenic, & Lerner, 1976) and are more persuasive in changing the opinions of an audience (Chaiken, 1979).</blockquote><br /><br />Understanding our irrational nature is also critical to product design. How can you expect to make something for humans if you don't understand how they think or make decisions?<br /><br />Another book, "<a href="http://www.amazon.com/Culture-Code-Ingenious-Understand-People/dp/0767920570/">The Culture Code</a>", has some great examples based on the author's experience helping companies improve the design and marketing of their products.<br /><blockquote>The people at Chrysler had indeed asked hundreds of questions; they just hadn't asked the right ones. They kept listening to what people <i>said</i>. This is always a mistake. As a result, they had theories about moving the Wrangler in multiple directions (more luxurious, more like a traditional car, without removable doors, enclosed rather than convertible, and so on) with no clear path to follow.<br />...<br />When I put groups of consumers together, I asked them different questions. I didn't ask them what they wanted in a Jeep; I asked them to tell me about their earliest memories of Jeeps.<br />...<br />I returned to those wary Chrysler executives and told them that the Code for Jeep in America is HORSE. Their notion of turning the Wrangler into just another SUV was ill advised.<br />...<br />The executives weren't particularly moved. After all, they had vast research that told them consumers said they wanted something else. ... I asked them to test my theory by making a relatively minor adjustment to the car's design: replacing the square headlights with round ones. Why? Because horses have round eyes, not square ones.<br />...<br />They tested the new design and the response was instantly positive. Wrangler sales rose and the new "face" of the Wrangler became its most prominent and marketable feature. In fact, the car's logo has incorporated its grille and round headlights ever since.</blockquote><br /><br />Using surveys and focus groups to design your product is a great way to produce boring and mediocre products that are the same as everything else.<br /><br />Another great quote from "The Culture Code" connects us back to the "split brain" example that I started with:<br /><blockquote>What do Americans look for in a car? I've heard many answers when I've asked this question. The answers include excellent safety ratings, great gas mileage, handling, and cornering ability, among others. I don't believe any of these. That's because the first principle of the Culture Code is that the only effective way to understand what people truly mean is to ignore what they say. This is not to suggest that people intentionally lie or misrepresent themselves. What it means is that, when asked direct questions about their interests and preferences, people tend to give answers they believe the questioner wants to hear. Again, this is not because they intend to mislead. It is because people respond to these questions with their cortexes, the parts of their brains that control intelligence rather than emotion or instinct. They ponder a question, they process a question, and when they deliver an answer, it is the product of deliberation. They believe they are telling the truth. A lie detector would confirm this. In most cases, however, they aren't saying what they mean.<br /><br /><b>The reason for this is simple: most people don't know why they do the things they do.</b> In a classic study, the nineteenth-century scientist Jean-Martin Charcot hypnotized a female patient, handed her an umbrella, and asked her to open it. After this, he slowly brought the woman out of her hypnotic state. When she came to, she was surprised by the object she held in her hand. Charcot then asked her why she was carrying an open umbrella indoors. The woman was utterly confused by the question. She of course had no idea of what she had been through and no memories of Charcot's instructions. Baffled, she looked at the ceiling. Then she looked back at Charcot and said, "It was raining."<br />...<br />Even the most self-examining of us are rarely in close contact with our subconscious. ... Therefore, we give answers to questions that sound logical and are even what the questioner expected, but which don't reveal the unconscious forced that precondition our feelings. This is why polls and surveys are so often misleading and useless.</blockquote><br /><br />Of course this understanding is important to more than just product design. It's critical to anything involving humans, which is everything involving us. How does it apply to your life and work? Are you still making decisions with the assumption that we are rational?]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://lambda-the-ultimate.org/node/2417]]></link>
    <title><![CDATA[An Accidental Simula User, Luca Cardelli]]></title>
    <body><![CDATA[<p ><a href="http://lucacardelli.name/Slides/2007-08-02%20An%20Accidental%20Simula%20User%20(ECOOP%20Prize).pdf">An Accidental Simula User</a> (pdf slides) (<a href="http://2007.ecoop.org/mainconf/cardelli.html">abstract</a>)<br ><br > How o-o snuck behind a functional programmer and hit him in the head.</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/08/10-years-of-data-mining.html]]></link>
    <title><![CDATA[10 years of data mining]]></title>
    <body><![CDATA[<!-- google_ad_section_start -->In a recent paper in the <a href="http://www.springerlink.com/content/100254/">Data Mining and Knowledge Discovery Journal</a>, Gregory Piatetsky-Shapiro has an interesting paper about recent tendency in data mining. He wrote a survey based on the point of view of <a href="http://www.kdnuggets.com/">KDnuggets</a>, a must-known company sharing news and more for the data mining community. Below is the abstract of his paper:<br /><span class="fullpost"><br /><span style="font-style:italic;">I survey the transformation of the data mining and knowledge discovery field over the last 10 years from the unique vantage point of KDnuggets as a leading chronicler of the field. Analysis of the most frequent words in KDnuggets News leads to revealing observations.</span><br /><br />In this paper, Gregory points out the main transformations that have affected the domain. He provides several application domains where data mining has succeeded, as well as successful methods such as Support Vector Machines (SVM). After some text mining on KDnuggets news, Gregory draws a few conclusions. The main one is a move of data mining from <span style="font-style:italic;">university</span> to <span style="font-style:italic;">business</span>. The greatest demand for data miners is from business analytics, according to his study.<br /><br />I think that the paper is only <a href="http://www.springerlink.com/content/q873066ju88vq780/?p=851925813008476caba2d614fae4614f&pi=0">accessible</a> if you have access to the journal content.<br /></span><!-- google_ad_section_end --><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://pogue.blogs.nytimes.com/2007/08/21/onstar-for-lost-cellphones/]]></link>
    <title><![CDATA[OnStar for Lost Cellphones]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/05/final-bugs.html]]></link>
    <title><![CDATA[The Final Bugs]]></title>
    <body><![CDATA[We're within weeks of a final JRuby 1.0. We've pared down the <a href="http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&mode=hide&amp;sorter/order=DESC&sorter/field=priority&amp;resolution=-1&pid=11295&amp;fixfor=13502">bugs that we  think we can or must fix for 1.0</a> and this email is a summary of the ones  we need help with. So whatever time you can spare, please have a look  and help resolve these.<br /><br />In order of decreasing priority in JIRA:<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-820">JRUBY-820</a>: Net::HTTP.get behaves differently form MRI, failing to get  UTF8 properly<br />-and-<br /><a href="http://jira.codehaus.org/browse/JRUBY-828">JRUBY-828</a>: UTF-8 regular expressions aren't working<br /><br />I believe these are both largely the same problem, and it's probably the  most visible remaining bug we need to fix. Regular expressions in JRuby  currently do not work well with unicode strings, both as incoming match  strings and as the regular expression strings themselves. REXML uses /u  regular expressions, which is why I believe these issues are closely  related. Wes Nakamura has commented that he's looking into 828, but more  eyes will help ensure this is fixed.<br /><span style="font-weight: bold;">I believe these are true blocking bugs for 1.0, and I'm not comfortable  doing a release if they are not resolved.</span><br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-971">JRUBY-971</a>: Make it clear which Java method maps to each equality method<br /><br />I think we have subtle equality bugs remaining largely because we don't  use a consistent naming convention for the Java implementations of Ruby  methods like ==, ===, eql? and so on. We should make a quick sweep  through the system and make sure all core JRuby code is using the same  Java method names for all of these, and binding them in the same way.  Note: This is actually the cause of some set_trace_func bugs, since the  default === impl should actually invoke ==, causing trace events for both.<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-969">JRUBY-969</a>: Add rake and rspec to standard JRuby distribution for 1.0<br /><br />We have decided to ship both Rake and RSpec with JRuby 1.0, since they  are both well-accepted and widely used (moreso for Rake, but RSpec has  gained a lot of acceptance the past year). But the mechanism of  including them is unclear. I do not want to commit installed gems to  SVN; I would prefer to just install them as needed for testing and when  building the JRuby distribution. Thoughts?<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-672">JRUBY-672</a>: java.lang.Class representation of Ruby class not retrievable<br /><br />This bug is basically just looking for a way to get at the actual  java.lang.Class representing a Ruby-based extension of a Java class.  There may have been an API added with Bill's work, or this could be  simple to add.<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-914">JRUBY-914</a>: JRuby's BigDecimal needs to round<br /><br />Stu submitted a patch for this, but it unfortunately depends on behavior  only present in Java 5 and higher. Since most of us are pretty  unfamiliar with BigDecimal, we don't know of a good workaround to  support it correctly in Java 1.4.<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-822">JRUBY-822</a>: jruby fails to report process exit status correctly<br /><br />I think Nick may have a grip on this one, but if anyone can offer  suggestions as to why the exit codes are apparently shifted in this way,  please let us know.<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-966">JRUBY-966</a>: Various issues with LocalJumpError not being created early enough<br />-and-<br /><a href="http://jira.codehaus.org/browse/JRUBY-767">JRUBY-767</a>: next in an eval should produce a local jump error<br /><br />These are likely going to be up to Tom and I since they involve pretty  deep runtime/interpreter work. But we're also looking for any remaining  known issues with LocalJumpError/JumpException that are still out there.  I believe we've fixed all such externally-reported issues at the moment.<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-888">JRUBY-888</a>: Make regular distro/build create the all-in-one jar by default<br /><br />We waffle back and forth on this. What's the answer? An all-in-one jar  by default, or on request?<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-873">JRUBY-873</a>: ant test thread tests sometimes run forever<br /><br />I managed to get a trace on this one. It appears that some of the tests  cause a deadlock between stopping a thread and other operations. But I  don't believe anyone's seen it in normal execution yet (or at least  nobody's reported it). I'm probably the only one familiar enough with  the threading subsystem to fix it, but I'd like to know if anyone's seen  other issues.<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-98">JRUBY-98</a>: allow "/" as absolute path in Windows<br />-and-<br /><a href="http://jira.codehaus.org/browse/JRUBY-36">JRUBY-36</a>: Dir['...'] incompatibilities between Ruby and accross platforms<br />-and-<br /><a href="http://jira.codehaus.org/browse/JRUBY-61">JRUBY-61</a>: IO CRLF compatibility with cruby on Windows<br />-and-<br /><a href="http://jira.codehaus.org/browse/JRUBY-644">JRUBY-644</a>: Windows line delimiter (\r\n) cause position errors<br /><br />These blasted Windows pathing and newline bugs just seem to hang on  forever. Nobody wants to fix them. There must be someone out there that  can help resolve these, yes?<br /><br /><a href="http://jira.codehaus.org/browse/JRUBY-884">JRUBY-884</a>: Create and consolidate extension and non-standard options<br /><br />There are a number of configuration options for JRuby. Some have their  own flags, like -O to disable ObjectSpace and -C to force compilation of  a target script. But many others are only configurable via Java system  properties. What we really could use from the community is some idea  which settings are worth adding special flags for. We can handle the  rest. My personal opinion is that the new -J flag that allows passing  flags to the JVM is actually enough.<br /><br />By my estimation, the rest of the bugs are either almost done or are  trivial enough they could be punted to a post 1.0 release. But if we can  get these issues knocked down soon (starting with those top couple), 1.0  is going to be an extremely solid release.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/185]]></link>
    <title><![CDATA[US Congress Telecommuncations and the Internet Subcommittee Hearing on the Future of the Web]]></title>
    <body><![CDATA[<p><em>The <a href="http://people.w3.org/~djweitzner/blog/?p=86">original appearance</a> of this entry was in <a href="http://people.w3.org/~djweitzner/blog">Danny Weitzner - Open Internet Policy</a></em></p>  <p>Last week, the US Congress House of Representatives <a href="http://energycommerce.house.gov/Subcommittees/telint.shtml">Subcommittee on the Telecommunications and the Internet</a> had it’s first hearing of the year, the subject of which was the Future of the World Wide Web. Tim Berners-Lee was the sole witness at this hearing. The topic and witness choice were notable for a couple of reasons. This is the first meeting of the committee in the new session of Congress and the Chair of the committee, Rep. Ed Markey (D-MA), announced his intention to take a long range look at the larger issues facing communications policy in the United States. This, by itself, is a wonderful idea. The fact that he decided to start this series of hearings with the World Wide Web, as opposed to so many other topics he might have chosen, really speaks to the central importance that the Web has in our society. The fact that he chose Tim to testify was great, too, IMHO. <img class="wp-smiley" src="http://people.w3.org/%7Edjweitzner/blog/wp-includes/images/smilies/icon_smile.gif" alt=":-)" /> </p> <p>The Committee covered a wide range of questions, including:</p> <ul> <li>how will the Semantic Web change science and health care?</li> <li>what are the key lessons to learn from the first phase of the Web about how to promote continued innovation?</li> <li>what should be done, technically or legally, about spam, pornography available to kids, identity theft?</li> <li>why did Tim decide to make Web technology available royalty-free?</li> <li>does support for royalty-free standards imply that content and services on the Web also have to be free?</li> <li>and even, a slighty sheepish question about whether teleportation might be possible in the future?</li> </ul> <p>I’ve been to a lot of congressional hearings, especially in my earlier professional life as lawyer and advocate for Internet civil liberties organizations <a href="http://www.eff.org/">EFF</a> and <a href="http://www.cdt.org/">CDT</a>. This was one of the most positive, thoughtful and forward looking hearings that I’ve ever been to. Here you could see the Committee actually looking out into the future about the potential of the Web and trying to figure out what they could do (or not do) to help assure that it continues to grow and be available to <em>all</em> for commercial, political, cultural and personal use. Too often, Congress gets bogged down in its somewhat inevitable but short-sighted role as mediator amongst special interests. This was Congress at its best. It was great to be there.</p> <p>You can read <a href="/2007/03/01-ushouse-future-of-the-web.html">Tim’s testimony</a> on the Web.</p> <p>Ironically enough, though it’s easy to read the testimony, it’s not so easy to get an archived copy of the video feed from the hearing. Though most Congressional activity is recorded on video and much of it is streamed live by CSPAN or others, there’s <a href="http://www.nytimes.com/2007/02/26/technology/26cspan.html?_r=1&amp;oref=slogin">no organized way</a> to get achived copies of the video. Carl Malamud is engaged in a serious effort to try to remedy this situation, including trying to <a href="http://public.resource.org/dear_brian.html">encourage</a> CSPAN to make it’s archive of congressonal video public.</p> <p>In the meantime, Carl has kindly ripped the feeds from the hearing and put them up in 2 places (<a href="http://video.google.com/videoplay?docid=-2403173232594560736&amp;hl=en">Google Video</a> and <a href="http://www.archive.org/details/gov.house.energycommerce.030107.ti.hrgwww">archive.org</a>)</p> <p>I’m certainly going to be following Carl’s efforts and looking to help out where I can.</p> <p><em>Update: </em>C-SPAN has <a href="http://people.w3.org/~djweitzner/blog/?p=88">changed its policy</a> and now provides public access with a Creative Commons license.</p> ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/05/jruby-t-shirt.html]]></link>
    <title><![CDATA[JRuby: The T-Shirt!]]></title>
    <body><![CDATA[Yes, I've managed to secure a small order of JRuby t-shirts for giveaway at JavaOne and RailsConf. And they're pretty sweet, have a look at the logo on the front:<br /><br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp3.blogger.com/_HWobMsJuRHc/RjjZTcIYvBI/AAAAAAAAAAc/Psh4sfzvIPI/s1600-h/duke-ruby.gif"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp3.blogger.com/_HWobMsJuRHc/RjjZTcIYvBI/AAAAAAAAAAc/Psh4sfzvIPI/s400/duke-ruby.gif" alt="" id="BLOGGER_PHOTO_ID_5060033109342862354" border="0" /></a><br /><br />And the back will have in white the words:<br /><br /><span style="font-size:180%;"><span style="font-family:courier new;">include Java</span></span><br /><br />How cool is that? The logo was designed and contributed by "Liz" (Liz, let me know if you want me to post contact info or anything...great work) and arranged by Damian Steer, longtime JRuby contributor. I handled the legwork of arranging the shirts, and managed to secure a little funding to get them paid for.<br /><br />So! How does one get one of these slicko t-shirts? Well, the first round of giveaways goes to folks who've made contributions in the past year. And by contributions I mean either patches or some serious research and legwork on a bug. Obviously there's a core group of folks that should automatically get shirts, so contact me about it if you think you qualify and I'll try to set one aside.<br /><br />Otherwise...You've got the next week or two to fix a bug, post a patch, and otherwise make yourself useful to the JRuby project. I'm gonna be pretty strict on this...if you want the goods, you've got to help out. May is 1.0 cleanup time, with an RC coming out soon and hopefully a final not too long after. So if you'd been considering helping out, now's the time!<br /><br />Visit the JRuby homepage, check out the JRuby bug tracker, and grab JRuby source. The details of contributing are linked from the front page of the <a href="http://www.headius.com/jrubywiki">JRuby wiki</a>.<br /><br /><span style="font-style: italic;"><span style="font-weight: bold;">Update:</span></span> Oh yeah...how will you get the shirts. The easiest way will be to hunt down Tom and I at the JRuby booth (in Sun's section) between 1PM and 3PM every day. We'll verify that you're not a slacker and make the arrangements. We're looking forward to meeting contributors in person. Otherwise, email me and we'll try to make other arrangements.<br /><br />For RailsConf, I'll just have the shirts at the hotel, and we'll figure something out. Maybe I'll just bring the box to our training and session there.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://piaw.blogspot.com/2007/08/review-privilege-of-sword.html]]></link>
    <title><![CDATA[Review: The Privilege of the Sword]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/07/video-highlights.html]]></link>
    <title><![CDATA[NCAA 08's Video Highlights]]></title>
    <body><![CDATA[I'm pretty proud of this one. ;)<br /><br /><a href="http://www.easportsworld.com/#canvas_TopVideos">http://www.easportsworld.com/#canvas_TopVideos</a><br /><br /><strong>Thousands</strong> of user-created videos from <a href="http://en.wikipedia.org/wiki/NCAA_Football_08"><strong>NCAA Football 08</strong></a>!<br /><br />I posted this on 4/12/07:<br /><br /><em>I've been working on a little something special in NCAA Football 08. An </em><a href="http://www.gamespot.com/xbox360/sports/ncaafootball08/news.html?sid=6168928&tag=topslot;title;2&om_act=convert&amp;om_clk=topslot"><em>NCAA Football 08 First Look</em></a><em> article by </em><a href="http://www.gamespot.com/"><em>GameSpot</em></a><em> details the surprise. So now that it's public..</em><br /><em></em><br /><em>".. Once you've found a highlight you're particularly fond of, you can then choose to create a highlight of that play. This lets you choose from multiple camera angles to take a snapshot or <strong>segment of game-generated video</strong>. From there, you can either save these photos or <strong>videos on your hard drive or upload them</strong> to share with friends. .."</em><br /><br />About the middle of last year, I was asked to do some R&D for this technology. Not long after that we were building it. Still, it came <em>really</em> close to being cut on a number of occasions. There were times when it seemed impossible to satisfy all of the below constraints and still produce a video of acceptable (or any) quality. I had taken some time off for a bit of surgery as NCAA was finalling and came back to find some bugs in my .flv encoder. So, I was a little paranoid that some random, unforseen issue might render the whole feature unusable in the shipped game.<br /><br /><strong>Constraints</strong><br /><br />There were some wicked constraints putting this one together including -<br /><br /><ul><li>Encoding <em>while rendering the game</em> at 60fps/X360 and 30fps/PS3 without dropping frames.</li><li>Keeping final file size small enough to not overwhelm the servers and to keep our bandwidth costs down.</li><li>Final visual quality given the other constraints.</li><li>Memory during encoding. Early in the cycle, I gave a rough estimate of 25MB free memory in-game to encode to .flv. It turns out we had to do it in under 500K in-game, and we did that by offloading some tasks until later and some other tricks I won't <em>- and shouldn't -</em> go into ;).</li></ul><strong>Compromises</strong><br /><br /><ul><li>No sound. This one's hard to take but we just didn't have time. Remarkably, on the web, I haven't seen anyone complain about this. For next year.</li><li>15 frames per second. Yes, we wanted thirty, but we could only do that with a smaller frame size. Believe me, the trade off was well worth it. Also for next year.</li><li>Video dimensions. We would have liked a larger frame size but we just didn't have the machine resources or network bandwidth to spare.</li></ul><br />All in all, I think we struck a reasonable balance and it works. <a href="http://www.pastapadre.com/1121/ncaa-football-08-highlight-clip-contest">It's exciting to see people this jazzed about it!</a> This technology is now quite the buzz around EA and next year we'll be seeing it in a lot more titles.<br /><br /><em>Will this technology and its descendants usher in the Web 2.0 era in console sports gaming?</em><br /><br />I hope so!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/04/emacs-buffer-tabs.html]]></link>
    <title><![CDATA[Emacs: buffer tabs]]></title>
    <body><![CDATA[<p> Tabs to show overlapping windows are becoming more common these days, especially in terminals, browsers, and chat programs. The idea is that a single window can contain several … buffers.  Emacs already has this, and has had this for a long time.  It's just that by default Emacs doesn't have visible tabs to show the buffers.  XEmacs and SXEmacs can show tabs with “buffer tabs”; for GNU Emacs 21 you need to install <a href="http://www.emacswiki.org/cgi-bin/wiki/TabBarMode">TabBar mode</a> (thanks to <a href="http://www.ficml.org/jemimap/wordpress/2004/10/11/tabbar/">Jemima</a> for finding this), which gives you tabs like this: </p> <p> <a href="http://bp2.blogger.com/_kV9ZnGnZL7M/RjY7lvCgMeI/AAAAAAAAABI/Uqr3dJEYPH8/s1600-h/Picture+1.png"><img src="http://bp2.blogger.com/_kV9ZnGnZL7M/RjY7lvCgMeI/AAAAAAAAABI/Uqr3dJEYPH8/s400/Picture+1.png" border="1" alt="screenshot of tabbar-mode" id="BLOGGER_PHOTO_ID_5059296750865494498" /></a> </p> <p> Well, it doesn't look like that by default. The standard settings give each tab a 3d button appearance. I wanted something simpler, so I changed the settings: </p> <pre class="snippet">   <span style="color: #8080b0;">(</span>set-face-attribute    <span style="color: #0000ee;">'</span>tabbar-default-face nil    <span style="color: #008b00;">:background</span> <span style="color: #666666; background-color: #e8e8e8;">"gray60"</span><span style="color: #8080b0;">)</span>   <span style="color: #8080b0;">(</span>set-face-attribute    <span style="color: #0000ee;">'</span>tabbar-unselected-face nil    <span style="color: #008b00;">:background</span> <span style="color: #666666; background-color: #e8e8e8;">"gray85"</span>    <span style="color: #008b00;">:foreground</span> <span style="color: #666666; background-color: #e8e8e8;">"gray30"</span>    <span style="color: #008b00;">:box</span> nil</span><span style="color: #8080b0;">)</span>   <span style="color: #8080b0;">(</span>set-face-attribute    <span style="color: #0000ee;">'</span>tabbar-selected-face nil    <span style="color: #008b00;">:background</span> <span style="color: #666666; background-color: #e8e8e8;">"#f2f2f6"</span>    <span style="color: #008b00;">:foreground</span> <span style="color: #666666; background-color: #e8e8e8;">"black"</span>    <span style="color: #008b00;">:box</span> nil</span><span style="color: #8080b0;">)</span>   <span style="color: #8080b0;">(</span>set-face-attribute    <span style="color: #0000ee;">'</span>tabbar-button-face nil    <span style="color: #008b00;">:box</span> <span style="color: #0000ee;">'</span><span style="color: #8080b0;">(</span><span style="color: #008b00;">:line-width</span> 1 <span style="color: #008b00;">:color</span> <span style="color: #666666; background-color: #e8e8e8;">"gray72"</span> <span style="color: #008b00;">:style</span> released-button<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>   <span style="color: #8080b0;">(</span>set-face-attribute    <span style="color: #0000ee;">'</span>tabbar-separator-face nil    <span style="color: #008b00;">:height</span> 0.7<span style="color: #8080b0;">)</span>    <span style="color: #8080b0;">(</span>tabbar-mode 1<span style="color: #8080b0;">)</span>   <span style="color: #8080b0;">(</span>define-key global-map <span style="color: #8080b0;">[</span><span style="color: #8080b0;">(</span>alt j<span style="color: #8080b0;">)</span><span style="color: #8080b0;">]</span> <span style="color: #0000ee;">'</span>tabbar-backward<span style="color: #8080b0;">)</span>   <span style="color: #8080b0;">(</span>define-key global-map <span style="color: #8080b0;">[</span><span style="color: #8080b0;">(</span>alt k<span style="color: #8080b0;">)</span><span style="color: #8080b0;">]</span> <span style="color: #0000ee;">'</span>tabbar-forward<span style="color: #8080b0;">)</span> </pre> <p> This makes the currently selected tab match my default background (<code>#f2f2f6</code>), removes the 3d borders, and adds a bit of space between the tabs. I also define <kbd>Alt-j</kbd> and <kbd>Alt-k</kbd> to switch tabs; I use the same keys in other tabbed apps, because they're easier to type than moving my hands to the arrow keys. </p> <p> TabBar-mode looks neat, but I'm not sure how useful it will be.  In Emacs I have lots of buffers—more than will fit as tabs. The main thing I like so far are the keys for cycling between related buffers, but as the number of buffers grows it becomes faster to switch directly to the buffer I want. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/05/impossible-dream-3.html]]></link>
    <title><![CDATA[Impossible Dream #3]]></title>
    <body><![CDATA[This is, of course, going incredibly slowly and that's just alright.<br /><br /><strong>Script</strong><br /><br />I'm exploring an interesting architecture. I'm starting to use my script language <em>Pair</em> to script core parts of the game. <em>Pair</em> is Lisp/Scheme-like and very compact (the VM executable [compressed] is 28k without many external functions!). I designed <em>Pair</em> a few years ago with gaming in mind. The original intent was to use it to script many (hundreds or thousands) simultaneous events without having to make everything a state machine. <em>Pair</em> is multithreaded at the virtual machine level and not at the OS level, yielding very lightweight threads. To accomplish this, an explicit frame stack is maintained for function calls, and they are not implemented as C++ function calls underneath. Like <a href="http://en.wikipedia.org/wiki/Stackless_Python">Stackless Python</a> which takes a similar approach (and is also used in gaming for its facility in concurrency), it means that <em>Pair</em> can (and does) support <a href="http://en.wikipedia.org/wiki/Continuation">continuations</a> because the call stack can be directly manipulated. One of these days I'll put up <em>Pair</em> and source.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582875/hiring-lake-wobegon-strategy.html]]></link>
    <title><![CDATA[Hiring: The Lake Wobegon Strategy]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Peter Norvig, Director, Google Research</span><br /><br />You know the Google story: small start-up of highly-skilled programmers in a garage grows into a large international company. But how do you maintain the skill level while roughly doubling in size each year? We rely on the Lake Wobegon Strategy, which says <i>only hire candidates who are above the mean of your current employees.</i> An alternative strategy (popular in the dot-com boom period) is to justify a hire by saying "this candidate is clearly better than at least one of our current employees."  The following graph compares the mean employee skill level of two strategies: hire-above-the-mean (or Lake Wobegon) in blue and hire-above-the-min in red.  I ran a simulation of 1000 candidates with skill level sampled uniformly from the 0 to 100th percentile (but evaluated by the interview process with noise of &plusmn;15%) starting from a core team of 10 employees with mean 75 and min 65.  You can see how hire-above-the-min leads to a precipitous drop in skill level; one we've been able to avoid.<br /><br /><a href="http://googleresearch.blogspot.com/uploaded_images/chart-728362.gif"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;" src="http://googleresearch.blogspot.com/uploaded_images/chart-727755.gif" border="0" alt="" /></a><br /><br />Another hiring strategy we use is <i>no hiring manager</i>.  Whenever you give project managers responsibility for hiring for their own projects they'll take the best candidate in the pool, even if that candidate is sub-standard for the company, because every manager wants some help for their project rather than no help.  That's why we do all hiring at the company level, not the project level.  First we decide which candidates are above the hiring threshold, and then we decide what projects they can best contribute to. The orange line in the graph above is a simulation of the hiring-manager strategy, with the same candidates and the same number of hires as the no-hiring-manager strategy in blue. Employees are grouped into pools of random size from 2 to 14 and the hiring manager chooses the best one. We're pleased that these little simulations show our hiring strategy is on top. You can learn more about our <a href="http://www.google.com/jobs/working.html">hiring and working philosophy</a>.<img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582875" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://piaw.blogspot.com/2007/07/its-captain-switzerland-er.html]]></link>
    <title><![CDATA[It's Captain Switzerland... er... SwitzerAmerica... er..]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2007/01/definition-of-closures.html]]></link>
    <title><![CDATA[A Definition of Closures]]></title>
    <body><![CDATA[<p>There has been some confusion over our proposal to add closures to the Java Programming Language. After all, doesn't Java already have closures in the form of anonymous inner classes? What is the point of adding something to the language that it already has? To some there appears to be a lot in the proposal that has nothing to do with closures, including the control invocation syntax, <tt>null</tt> as a type, <tt>Unreachable</tt>, <tt>throws</tt> type parameters, function interface types, and &quot;nonlocal&quot; returns. In my Javapolis talk I tried to give an explanation for why these features are in the proposal from the practical point of view of what kinds of things would be possible that were not formerly possible. But that begs the question: why do we call it &quot;Closures&quot; for Java? In this blog post I'll try to show how the definition of closures relates to the features of the proposal, and identify which features of the proposal do (and which do not) result from the definition. </p>
<p>Before discussing the definition of closures, it helps to understand the historical context in which the term was introduced. </p>
<p><a href="http://www-formal.stanford.edu/jmc/history/lisp/lisp.html">Lisp was created</a> in the late 1950's by John McCarthy and others at M.I.T. One feature of the language was function-valued expressions, signified by <em>lambda</em>. The name &quot;lambda&quot; was borrowed from a mathematical formalism known as the lambda calculus. Although Lisp was not based on an effort to model that formalism, lambda  plays approximately the same role in Lisp as it does in the lambda calculus:  lambda  is the syntax for a function-valued expression. McCarthy's intent was that Lisp should be designed to be implemented very efficiently, ideally compiled. That desire for efficiency influenced the design of the language. </p>
<p>Lisp used something called <em>dynamic scoping</em>. Logically, in a dynamically scoped language, when a variable  reference is evaluated the runtime looks up the call stack until it finds a scope in which a variable of that name is defined. But as a practical matter variable references in a dynamically scoped language can be resolved in constant time simply by maintaining a value cell for each variable name; that value cell  caches the variable's current definition. Dynamic scoping is   easy to implement in an interpreter or compiler. Some very clever people had found ways to not only take advantage of dynamic scoping, but had developed what would now be thought of as programming patterns that depended deeply on it. But it was soon discovered that dynamic scoping suffered subtle  problems, something the Lisp community called the <a href="http://portal.acm.org/citation.cfm?id=1093411"><em>FUNARG problem</em></a>.</p>
<p>Now we fast-forward to the mid 1970's. On the radio you would hear<sup>1</sup> <a href="http://www.amazon.com/gp/product/B00006RAKP?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00006RAKP">Elton John</a>, <a href="http://www.amazon.com/gp/product/B00004YR27?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00004YR27">Emerson Lake &amp; Palmer</a>, <a href="http://www.amazon.com/gp/product/B000002N9Z?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000002N9Z">Joni Mitchell</a>, <a href="http://www.amazon.com/gp/product/B00005J73Z?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00005J73Z">The Captain and Tennille</a>, <a href="http://www.amazon.com/gp/product/B0002WZT4S?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B0002WZT4S">John Denver</a>, <a href="http://www.amazon.com/gp/product/B00006LI2R?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00006LI2R">Paul Simon</a>, <a href="http://www.amazon.com/gp/product/B00000721P?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00000721P">Paul McCartney and Wings</a>, <a href="http://www.amazon.com/gp/product/B00005QJFL?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00005QJFL">ABBA</a>, <a href="http://www.amazon.com/gp/product/B00006JYI7?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00006JYI7">David Bowie</a>, <a href="http://www.amazon.com/gp/product/B0002QPRSM?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B0002QPRSM">Janis Ian</a>, <a href="http://www.amazon.com/gp/product/B000068QZI?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000068QZI">Aerosmith,</a> <a href="http://www.amazon.com/gp/product/B00009RAJI?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00009RAJI">Fleetwood Mac</a>, <a href="http://www.amazon.com/gp/product/B00000ADGH?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00000ADGH">Heart</a>, and <a href="http://www.amazon.com/gp/product/B000000OF6?ie=UTF8&amp;tag=wwwgaftercom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000000OF6">Queen</a>. A number of popular Lisp dialects were in use including InterLisp, MacLisp, UCI-Lisp, Stanford Lisp 1.6, and U. Utah's Standard Lisp. All of them were dynamically scoped. It was in this context that <a href="https://dspace.mit.edu/bitstream/1721.1/6913/2/AITR-474.pdf">Guy Steele and Gerald Jay Sussman developed</a> <em><a href="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=4566527396222999701">Scheme</a></em>,  a very simple Lisp dialect.</p>
<p>One thing about Scheme was different<sup>2</sup>. Scheme was <em>lexically scoped</em>, like the lambda calculus and most mathematical notations, which means that  a variable reference <em>binds</em> to the <em>lexically</em> enclosing definition for that name that was active at the time the enclosing lambda form was evaluated. To explain the semantics in terms of the implementation, evaluating a lambda expression was said to produce a <strong><em>closure</em></strong>. This is a function value represented as   an object that contains references to the  current bindings for all the variables used inside the lambda expression but defined outside it. These are called the <em>free variables</em>.  When this closure object, or <em>function</em>, is applied to arguments later, the variable bindings that had been captured in the closure  are used to give meaning to the free variables appearing in the code. The term closure describes more than just the abstract language construct, it also describes its implementation. </p>
<p>To many in the Lisp community at the time, it didn't make sense to adopt a Lisp dialect with closures. Not only would it undermine common programming techniques but it would obviously be much less efficient. For a short time these issues were debated, and Guy Steele wrote a <a href="http://library.readscheme.org/page1.html">series of papers</a> entitled <em>Lambda the Ultimate _____</em> (where _____ is <a href="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=6756466485684414379"><em>Imperative</em></a>, <a href="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=14654998121301205850"><em>Declarative</em></a>, <a href="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=4529162033070730978"><em>GOTO</em></a>, or <a href="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=10861623814207912570"><em>Opcode</em></a>) to   help explain the power of lexically scoped lambda (closures). Fast forward only a few years and the debate was largely settled: lexical scoping is Right and dynamic scoping is Wrong and we've all learned our lesson. Since that time the word <em>closure</em> is used to mean lexically scoped anonymous function, but the connotation is that it is possible to get the semantics wrong for any number of reasons, including  bugs and concerns about implementation efficiency. It also hints that we should let the language design drive the implementation, not the other way around. Virtually every programming language, whether or not it has something like lambda and anonymous function values, uses lexical rather than dynamic scoping. The basic definition of a closure, however, shows its Lisp roots:</p>
<blockquote>
  <p>A <em>closure</em> is a <em>function</em> that captures the <em>bindings</em> of <em>free variables</em> in its <em>lexical context</em>.</p>
</blockquote>
<p>Around this time,  <a href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html">Smalltalk was introduced</a>. Smalltalk is the most pure and simple of the object-oriented languages: everything is an object. Object-oriented languages add a  twist to lexical scoping. Rather than binding all names in the lexical scope,  free variables appearing in <em>methods</em> are bound in the scope of the object that the method is a member of. In other words,  names  in a method are bound to members of the &quot;current&quot; object. The current object is accessible by the name &quot;self&quot;. Another small but interesting detail is that you can return early from a method in Smalltalk using the syntax &quot;^<em>expression</em>&quot;. We'll return (no pun intended) to the significance of this fact later.   </p>
<p>Methods aren't the only kind of code abstraction in Smalltalk. There is also an expression form for writing a <em>block</em> expression, which is essentially a lambda. Early dialects had limitations on them, but  most modern Smalltalks do not. They are a true analog to Scheme's lambda. Free variables in a Smalltalk block are bound in the enclosing scope, which is typically the scope of some enclosing method. The result of evaluating a block expression is a closure, and like everything else it is an object. In this case the object has a method that you use to invoke the code of the block.</p>
<p>Anonymous functions  (closures) were not blindly introduced into Smalltalk just because it seemed like a neat idea, or because they had worked out well in another language. Rather they were integrated fully and carefully into the  language. Anonymous functions can properly be integrated into even an existing language, but there is an advantage when adding them early. As Guy Steele's papers demonstrated, they are so powerful that they subsume other language features. If you add them early, you might save yourself the trouble of adding language features that can instead be added as libraries. Smalltalk provides few control constructs directly in the language. Even the conditional &quot;if&quot; is provided as a library method and invoked using blocks. </p>
<p>Two things distinguish blocks in Smalltalk from Scheme's lambda. First, the meaning of &quot;self&quot; within a block refers to whatever meaning it had in the enclosing context. Specifically, it doesn't refer to the closure object itself. Second, the syntax for returning from a method, &quot;^<em>expression</em>&quot;, returns from the enclosing method; it doesn't return from the method representing the closure invocation. These two details are a natural consequence of the fact that, while Scheme has only one lexically scoped language construct (variable bindings), Smalltalk has three lexically scoped language constructs: name bindings (like Scheme), the referent of the return syntax, and the meaning of &quot;self&quot;. The definition of closures above mentioned only &quot;the bindings of free variables&quot;, but that is because the definition was written for the language Scheme, and name (variable) binding is the only lexically scoped construct in Scheme.  Common Lisp also has &quot;return&quot; and &quot;goto&quot;, and these too are captured lexically in a closure. In order to realize the full power of closures, described in Guy Steele's lambda papers, they must capture all lexically scoped language constructs. Generalizing the definition of closure to cover other languages would require using more language-neutral terminology: instead of &quot;bindings of free variables&quot; we would have something like &quot;lexically scoped semantic language constructs.&quot; However, that obscures the origins of the term. </p>
<p>Fast forward more than 25 years, and we're once again listening to some of the same music we listened to in the late 1970's. We are now considering adding closures to Java, a significantly more complex language than either Scheme or Smalltalk. We're not considering them because they seem like a neat idea, or because they worked out well in other languages, or because we're bored. Rather we're considering them: because of the power and flexibility they will add to the programmer's arsenal; because of the improved readability we expect from programs that use closures instead of the existing alternatives; and because of a number of other recently proposed language extensions that will be unnecessary if closures are added.  In order to get the full power of closures, they should capture all lexically scoped semantic language constructs.  What are the lexically scoped language constructs in Java?</p>
<ul>
  <li>The meaning of <em>variable names</em>.  </li>
  <li>The meaning of <em>method names</em>.</li>
  <li>The meaning of <em>type names</em>.</li>
  <li>The meaning of <tt>this</tt>. </li>
  <li>The meaning of names defined as  statement labels.</li>
  <li>The referent of an unlabelled <tt>break</tt> statement. </li>
  <li>The referent of an unlabelled <tt>continue</tt> statement. </li>
  <li>The set of <em>checked exceptions</em> declared or caught.   </li>
  <li>The referent of a <tt>return</tt> statement. </li>
  <li>The <em>definite assignment</em> state of variables. </li>
  <li>The <em>definite </em><em>unassignment</em> state of variables. </li>
  <li>The <em>reachability state</em> of the code<sup>3</sup>. </li>
</ul>
<p>In addition, Java has one other significant difference from either Scheme or Smalltalk: Java is statically typed. That means that each expression has a type at compile-time. So if we add closures, we need to have some appropriate type for a closure. Since a closure is an anonymous function, it is natural to consider adding function types to the language. But this  is not a mandate. As you can see by the two variations of our closures proposal (the nominal and the functional versions) we believe it is possible to add closures without adding function types with a limited loss of functionality (higher-order programming becomes  impractical). <a href="http://www.javac.info/">Our proposal for closures</a> addresses every item on this checklist. There are additional features of our proposal (the control invocation syntax and  the closure conversion) that don't relate directly to the definition of closures, but which make them integrate very nicely with existing language features. And there are additional features not  mentioned in the  spec (such as proper tail recursion) that would be helpful to realize the full potential of closures. </p>
<p>What about  anonymous inner classes? It turns out that they don't pass muster on any item on this checklist. Let's set aside the fact that  local variables from enclosing scopes must be <tt>final</tt> to be used inside an anonymous class. The problem is that variable names are simply not resolved in the correct scope. They are resolved in the scope of the anonymous class that you're creating, not the enclosing scope. If you're creating an instance of an interface then it's probably not too much of a problem because most interfaces don't have any (constant) variable definitions. But anonymous inner classes fail every other item on this checklist  as well, most of them fatally. Most <a href="http://crazybob.org/2006/10/java-closure-spectrum.html">alternative proposals</a> don't actually address any of the items on this list, and so fail to provide the power of closures any more than  existing language constructs. </p>
<p>Setting aside all the programming language  theory, don't anonymous inner classes provide, in practic
, all of the advantages of closures? <a href="http://www.bejug.org/confluenceBeJUG/display/PARLEYS/Closures+for+Java">I believe I've already shown</a> that the answer is no. It is certainly true that for any program you can write using closures, you can write a roughly equivalent program using anonymous inner classes. That's because the Java programming language is <a href="http://en.wikipedia.org/wiki/Turing_completeness">Turing-complete</a>. But you will probably find yourself resorting to a significant and awkward refactoring of the code that has nothing to do with the purpose of the code. In fact, you can write a roughly equivalent program using assembly language if you have the stomach for such an effort. On the other hand, true closures increase the power of a language by adding to the kinds of abstractions you can express. </p>
<blockquote>
  <p>Acknowledgments: my thanks to Gilad Bracha,  John Rose, and Guy Steele for filling me in on and fact-checking the terminology and relevant history. Any remaining historical fantasies are my own. </p>
</blockquote>
<p><sup>1</sup> This is Guy Steele's impression of the late 1970's music era [personal communication]. </p>
<p><sup>2</sup> Scheme was the first lexically scoped Lisp, but certainly not the first lexically scoped programming language. Algol60, for example, was lexically scoped. See also Landin's <a href="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=2856797924573721037"><em>The Next 700 Programming Languages</em></a>. </p>
<p><sup>3</sup> Arguably part of the lexical semantics or not, reachability state is valuable to capture in practice. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~3/144158497/detail1892.html]]></link>
    <title><![CDATA[Scott Lemon, Ben Galbraith - Technometria]]></title>
    <body><![CDATA[<p><center><img src='http://assets.gigavox.com/showimages/1892.jpg' border='0'></center></p>This week, Phil, Scott, and Ben discuss a number of current tech events, including Apple's recent iMac, iLife, and iWork announcements. The group talks about how the &quot;Wow Factor&quot; has become more important in development, leading to a review of which features of the iPhone most enhance the user experience. The group also assesses the new Apple software updates and whether the features of the suites will draw more users from the Microsoft Office products.  They also talk about Microsoft as a company, reviewing how they gained dominance with a number of their products.<div class="feedflare"> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=LK5T7ZRd"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=LK5T7ZRd" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=w3NEik0x"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=w3NEik0x" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=wSGMktbT"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=wSGMktbT" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=J38macS2"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=J38macS2" border="0"></img></a> </div><img src="http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~4/144158497" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://hackr.de/2007/09/01/nuss-pt-2]]></link>
    <title><![CDATA[Nuss pt. 2]]></title>
    <body><![CDATA[<p>heute vor einem Jahr: <a href="http://hackr.de/2006/09/01/nuss">Nuss</a></p>   <blockquote>   <p></p>  </blockquote>   <p>Quiz: Was ist Web 2.0? – oder besser gefragt: welche (terminologischen, konzeptionellen, ...) Unterscheidungen bringen uns weiter?<br /> <br /> (Auflösung am 1.9.2009)</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/07/understanding-jvm-jit-and-helping-it.html]]></link>
    <title><![CDATA[Understanding the JVM JIT and helping it along]]></title>
    <body><![CDATA[I must apologize to my readers. I have been remiss in my blogging duties. I will be posting updates on the various events of the past month or so along with updates on JRuby progress and future events very soon. But for now, a technical divergence after a night of hacking.<br /><br />--<br /><br />I finally understand what we should be going for in our compiled code, and how we can really kick JRuby into the next level of performance.<br /><br />The JVM, at least in HotSpot, gets a lot of its performance from its ability to inline code at runtime, and ultimately compile a method plus its inlined calls as a whole down to machine code. The benefit in doing this is the ability to do compiler optimizations across a much larger call path, essentially compiling all the logic for a method and its calls (and possibly their calls, ad infinatum) into a single optimized segment of machine code.<br /><br />HotSpot is able to do this in a two main ways:<br /><ol><li>If it's obvious there's only ever one implementation of a given signature on a given type hierarchy</li><li>If it can determine at runtime that one (or a few) implementations are the only ones ever being called</li></ol>The first one allows code to be optimized fairly quickly, because HotSpot can discover early on that there's only one implementation. In general, if there's a single implementation of a given signature, it will get inlined pretty quickly.<br /><br />The second one is trickier. HotSpot tracks the actual types being called against for the various calls, and eventually can come up with a best guess at the method or methods to inline. It also can include a slow path for the rare future cases where the receiver does not match the target types, and it can deoptimize later to back down optimizations when situations change, such as when a new class is loaded into the system.<br /><br />So in the end, inlining is one of the most powerful optimizations. Unfortunately in JRuby (and most other dynamic language implementations on the JVM), we're making inlining difficult or impossible in the most performance-sensitive areas. I believe this is a large part of our performance woes.<br /><br />Consider that all method calls against any object must pass through an implementation of IRubyObject.callMethod. There's not too many callMethod implementations, and actually now there's only one implementation of each specific signature. So callMethod gets inlined pretty fast.<br /><br />Consider also that almost all method calls within callMethod are to very specific methods and will also be inlined quickly. So callMethod is looking pretty good so far.<br /><br />Now we look at the last step in callMethod...DynamicMethod.call. DynamicMethod is the top-level type for all our method objects in the system. The call method has numerous implementations, all of them different. And no one implementation stands out as the most frequently called. So we're already complicating matters for HotSpot, even though we know (based on the incoming method name) exactly the piece of code we *want* to call.<br /><br />Let's continue on, assuming HotSpot is smart enough to work around our half-dozen or so DynamicMethod.call implementations.<br /><br />DefaultMethod is the DynamicMethod implementation for interpreted Ruby code, so it calls directly into the evaluator. So at that point, DefaultMethod.call will inline the evaluator code and that looks pretty good. But there's also the JIT located in DefaultMethod. It generates a JVM bytecode version of the Ruby code and from then on DefaultMethod calls that. Now that's certainly a good thing on one hand, since we've eliminate the interpreter, but on the other hand we've essentially made it impossible for HotSpot to inline that generated code. Why? Because we generate a Java method for every JITable Ruby method. Hundreds, and eventually thousands of possible implementations. Making a decision to inline any of them into DefaultMethod.call is basically impossible. We've broken the chain.<br /><br />To make matters worse, we also have the set of Java-wrapping DynamicMethod implementations, *CallbackMethod (used for binding Java code to Ruby method names) and CompiledMethod (used in AOT-compiled code).<br /><br />The CallbackMethods all wrap another piece of generated code that implements Callback and calls the Java method in question. So we generate nice little wrappers for all the pre-existing methods we want to call, but we also make it impossible for the *CallbackMethod.call implementations to inline any of those calls. Broken chain again.<br /><br />CompiledMethod is slightly better in this regard, since there's a new CompiledMethod subclass for every AOT-compiled Ruby method, but we still have a single implementaiton of DynamicMethod.call that all of those subclasses share in common. To make matters worse, even if we had separate DynamicMethod.call implementations, that may actually *hurt* our ability to inline code way back in IRubyObject.callMethod, since we've now added N possible DynamicMethod.call implementations to the system. And the chain gets broken even earlier.<br /><br />So the bottom line here is that in order to continue improving performance, we need to do everything possible to move the call site and the call target closer together. There are a couple standard ways to do it:<br /><ol><li>Hard-coded special-case code for specific situations, much like YARV does for simple ops (+, -, &lt;, &gt;, etc). In these cases, the compiler would check that the target implements an appropriate type to do a direct call to the operation in question. In Fixnum's case, we'd first confirm it's a RubyFixnum, and then invoke e.g. RubyFixnum.plus directly. That skips all the chain breakage, and allows the compiled code to inline RubyFixnum.plus straight into the call site.</li><li>Dynamic generated method adapters that can be swapped out and that learn from previous calls to make direct invocations earlier in the chain. Basically, this would involve preparing call site caches that point at call adapters. Initially, the call adapters would be of some generic type that can use the slow path. But as more and more calls come in, more and more of the call sites would be replaced with specialized implementations that invoke the appropriate target code directly, allowing HotSpot a direct line from call site to call target.</li></ol>The second version is obviously the ultimate goal, and essentially would mimic what the state-of-the-art JITs do (i.e. this is how HotSpot works under the covers). The first version is easily testable with some simple hackery.<br /><br />I created a small patch that includes a trivial, unsafe change to the compiler to make Fixnum#+, Fixnum#-, and Fixnum#&lt; direct calls when<br />possible. They're unsafe because they don't check to see if any of those<br />operations have been overridden...but of course you'd have to be a mad<br />fool to override them anyway.<br /><br />To demonstrate a bit of the potential performance gains, here are some<br />numbers for JRuby trunk and trunk + patch. Note that Fixnum#+, Fixnum#-, and Fixnum#&lt; are all already STI methods, which does a lot to speed up their invocation (STI uses a table of switch values to bypass dynamic method lookup). But this simple change of compiling direct calls completely blows the STI performance out of the water, and that's without similar direct calls to the fib_ruby method itself.<br /><br /><pre>test/bench/bench_fib_recursive.rb<br /><br />JRuby trunk without patch:<br />1.675000   0.000000   1.675000 (  1.675000)<br />1.244000   0.000000   1.244000 (  1.244000)<br />1.183000   0.000000   1.183000 (  1.183000)<br />1.173000   0.000000   1.173000 (  1.173000)<br />1.171000   0.000000   1.171000 (  1.170000)<br />1.178000   0.000000   1.178000 (  1.178000)<br />1.170000   0.000000   1.170000 (  1.170000)<br />1.169000   0.000000   1.169000 (  1.169000)<br /><br />JRuby trunk with patch:<br />1.133000   0.000000   1.133000 (  1.133000)<br />0.922000   0.000000   0.922000 (  0.922000)<br />0.865000   0.000000   0.865000 (  0.865000)<br />0.862000   0.000000   0.862000 (  0.863000)<br />0.859000   0.000000   0.859000 (  0.859000)<br />0.859000   0.000000   0.859000 (  0.859000)<br />0.864000   0.000000   0.864000 (  0.863000)<br />0.859000   0.000000   0.859000 (  0.860000)<br /><br />Ruby 1.8.6:<br />1.750000   0.010000   1.760000 (  1.760206)<br />1.760000   0.000000   1.760000 (  1.764561)<br />1.760000   0.000000   1.760000 (  1.762009)<br />1.750000   0.010000   1.760000 (  1.760286)<br />1.760000   0.000000   1.760000 (  1.759367)<br />1.750000   0.000000   1.750000 (  1.761763)<br />1.760000   0.010000   1.770000 (  1.798113)<br />1.760000   0.000000   1.760000 (  1.760355)</pre><br />That's an improvement of over 25%, with about 20 lines of code. It would be even higher with a dynamic adapter for the fib_ruby call. And we can take this further...modify our Java integration code to do direct calls to Java types, modify compiled code to adapt to methods as they are redefined or added to the system, and so on and so forth. There's a ton of potential here.<br /><br />I will continue working along this path.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://arved.priv.at/weblog/archives/2007/03/mt_stylecatcher.html]]></link>
    <title><![CDATA[MT StyleCatcher broken with Konqueror]]></title>
    <body><![CDATA[<p>It has been a while (several version updates) since i have been tinkering with the MT templates, my current stylesheet for this blog still fits well enough.<br /> Today i created a new blog for testing, and noticed that the default stylesheet does not work with Konqueror anymore (It works okay in Safari). <br /> Anyone got an idea why? I currently don't have the time for stylesheet debugging, so for now i will stick with bloaty Firefox on FreeBSD. Hopefully KDE4 will fix this...</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://olabini.blogspot.com/2007/05/something-or-other.html]]></link>
    <title><![CDATA[Something or other]]></title>
    <body><![CDATA[First of all, this won't be one of my regular posts. In fact, I don't even know where to file it. It is surely not technical. It doesn't fit in with the kind of personal updates I post to LJ. And it's not related to books ore music or anything like that I've posted to this place before. I guess it's a post about me. And I'm not even sure it's something I'm interested in people reading or not.<br /><br />I'm sitting in a car, outside Florence, OR. We are on our third day of traveling from San Francisco to Portland. It's going well. I've seen some beautiful sights, but I'm getting to be tired. Right now I'm sitting with headphones, hiding within myself. Prolonged exposure to people tend to create that reaction in me; I need to get away for a little while. I'm listening to lovely music, things that touch me, and looking at images I like, words I enjoy. And what I come back to is this: I still don't know what I'm doing with my life. I'm very happy about moving to London and then SF. The job at TW seems like a dream job for me. I couldn't possibly imagine anything better. And Stella will come with me when I move out from Sweden which is something I couldn't have expected but am very happy about. She is a part of me.<br /><br />But still, is the work I do all that I am nowadays? In earlier times I could always find time to write and sing, let the music handle the yearning and removing some of those feelings. But right now I don't have the time. Of course, that's a matter of prioritization and the things I'm doing right now is to important for my future. But I don't want the music to die. I long for being able to sit down with my guitar, let new music flow, and record something that feels like it's a part of me captured in external media.<br /><br />But I guess that's what all I'm doing is about. In a very real sense, I'm diluting my essence, putting parts of myself into programming environments that I believe will be extremely important for the next era of computing. I know that it isn't the end piece, but it's something to use until we finally see the next step on the ladder.<br /><br />Can time really run out for me? I hope not - I would see what's beyond today, tomorrow, this year and next decennium.<br /><br />Overfire - Lucky - Timglas - Until - Vortex]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Up</vote>
    </votes>
    <link><![CDATA[http://steve-yegge.blogspot.com/2006/05/not-managing-software-developers.html]]></link>
    <title><![CDATA[(Not) Managing Software Developers]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/3910997/]]></link>
    <title><![CDATA[Polylog gewinnt Grimme Award]]></title>
    <body><![CDATA[Gratulation <a href="http://www.knallgrau.at/company/weblog/stories/3750290/">dem Knallgrau Team hinter Polylog.tv</a> die, wie soeben gerade erfahren, für <a href="http://www.grimme-institut.de/html/index.php?id=613#c3442">Konzept und Gestaltung einen Grimme Award</a> gewonnen haben. Und natürlich Gratulation an Kobalt Productions und Tita von Hardenberg für den mutigen Lead.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/07/way-freakin-hilarious-iphone-review.html]]></link>
    <title><![CDATA[way freakin' hilarious iPhone review]]></title>
    <body><![CDATA[This <a href = "http://www.thebestpageintheuniverse.net/c.cgi?u=iphone">iPhone writeup</a> is so funny that I bow down to it.  Yes, this single HTML page is more worthy than my entire existence.<br /><br />For example, this excerpt:<br /><blockquote><br />It's not three devices in one any more than my laptop is you morons. Using Jobs' loose definition of what constitutes a separate device, technically my laptop can be considered 8 devices in one:<br /><br />  # A clock<br />  # A calculator<br />  # An "Internet communications device"<br />  # A phone (I can make voice calls with my modem)<br />  # A pornographic media storage device<br />  # A video player<br />  # A word processor<br />  # And an "iPod" (see below) <br /></blockquote><br /><br />Also note that it utilizes the speech mechanism which <a href = "http://niniane.blogspot.com/2007/07/code-as-seen-by-hollywood.html">makes everything funnier</a>:<br /><blockquote><br />"Can't do fundamental tasks like copy & paste text: No.  Double negative, bitches!"<br /></blockquote><br /><br />For those of you too lazy to scroll two paragraphs up to find the link from earlier in this post, <a href = "http://www.thebestpageintheuniverse.net/c.cgi?u=iphone">here it is again</a>.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi_title'>Down</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/07/noob-monster-one-noob-two-noobs.html]]></link>
    <title><![CDATA[noob monster: one noob, two noobs, ...]]></title>
    <body><![CDATA[Corey: The best name we've come up with so far is Cookie Camp.<br /><br />Me: Because we're going to bake cookies and hand them out to visitors?<br /><br />Corey: No.  It's because at some point during the week, I'll try to make at least one batch of cookies.  <br /><br />Me: I see.  [resetting expectations]  ...  Okay, so how many times have each of you been to Burning Man?<br /><br />Dan: I'm the only one who has ever been.<br /><br />Me: [looking around at others] So we're all noobs?  Why don't we call ourselves Noob Camp?<br /><br />...<br /><br />Dan: We'll buy water in Reno.<br /><br />Me: Why don't we load it up before we leave?  It's more risky to leave that to Reno.<br /><br />Dan: We need to buy almost a ton of water.  It's hard to drive the RV over the hills with that much weight.<br /><br />Me: What?  A ton?<br /><br />Corey: Yes.  According to the computations, we need 800 pounds of water.<br /><br />Me: [going over calculations with Corey to determine water needs for five people] ... Oh my God, you're right.  What if they run out of water in Reno?<br /><br />Dan: This may be hard to believe for first-timers, but there are stores set up in Reno just to sell water for Burning Man.  Plus if you go into any Safeway, there are literally palettes of water stacked all the way to the ceiling, with big signs: "We gots your water here, Burners!"]]></body>
  </item>
  <item>
    <votes>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
      <vote sample='ben'>Down</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/4044894/]]></link>
    <title><![CDATA[Javascript for Java Guys]]></title>
    <body><![CDATA[<a href="http://manichord.com/blog/2007/07/simplicity-aka-makss-guide-to.html">Maksim Lint has a nice guide to Javascript for Java Developers</a><br /> <br /> you can use JS very nicely on the <a href="http://helma.org/">server-side</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/06/quick-job-culture.html]]></link>
    <title><![CDATA[Quick: Job culture]]></title>
    <body><![CDATA[Here's a good link about the "<a href="http://www.loompanics.com/Articles/insanityjobculture.html">Job culture</a>":<br /><blockquote>The cultural assumption of a true free enterprise system would be: “Individuals are responsible for their own lives and labors. They trade as equals, but are beholdin' to nobody.”<br /><br />Free enterprise isn't anything like big-corporate capitalism. We've been told the two are equivalent, but that's just another bit of cultural brainwashing.<br /><br />Think about it. Job holders by definition aren't capitalists. Job holders, no matter how well paid they might be, function merely as the servants of capitalists, just as medieval serfs functioned as the servants of lords. They are beholdin'. They function in a climate of diminished responsibility, diminished risk, and diminished reward. A climate of institutional dependency.<br /><br />...<br /><br />The daily act of surrendering individual sovereignty – the act of becoming a mere interchangeable cog in a machine – an act we have been conditioned to accept and to call a part of “capitalism” and “free enterprise” when it is not – is the key reason why the present Job Culture is a disaster for freedom.<br /><br />James Madison, the father of the Bill of Rights, wrote:<br />“The class of citizens who provide at once their own food and their own raiment, may be viewed as the most truly independent and happy. They are more: They are the best basis of public liberty, and the strongest bulwark of public safety. It follows, that the greater the proportion of this class to the whole society, the more free, the more independent, and the more happy must be the society itself.”<br /><br />Madison was speaking specifically about independent farmers, but he was also a believer in the independent entrepreneur – and for the same reasons.<br /><br />Madison (and his like-minded friend Jefferson) knew that people who are self-sufficient in life's basics, who make their own decisions, whose livelihood relies on their own choices rather than someone else's, are less likely to march in lockstep. Independent enterprisers are far more likely to think for themselves, and far more capable of independent action than those whose first aim is to appease institutional gods.<br /><br />Living in the Job Culture, on the other hand, has conditioned us to take a “someone else will deal with it” mentality. “I'm just doing my job.” “The boss makes the decisions.” “I'm just following orders.” But if someone else is responsible for all the important choices in life, then we by definition, are not.<br /></blockquote><br /><br /><br />I reminds me of my favorite part of Paul Graham's essay on "<a href="http://www.paulgraham.com/notnot.html">Why to not not start a startup</a>":<br /><blockquote>16. A job is the default<br /><br />This leads us to the last and probably most powerful reason people get regular jobs: it's the default thing to do. Defaults are enormously powerful, precisely because they operate without any conscious choice.<br /><br />To almost everyone except criminals, it seems an axiom that if you need money, you should get a job. Actually this tradition is not much more than a hundred years old. Before that, the default way to make a living was by farming. It's a bad plan to treat something only a hundred years old as an axiom. By historical standards, that's something that's changing pretty rapidly.<br /><br />...<br /><br />Now we look back on medieval peasants and wonder how they stood it. How grim it must have been to till the same fields your whole life with no hope of anything better, under the thumb of lords and priests you had to give all your surplus to and acknowledge as your masters. I wouldn't be surprised if one day people look back on what we consider a normal job in the same way. How grim it would be to commute every day to a cubicle in some soulless office complex, and be told what to do by someone you had to acknowledge as a boss—someone who could call you into their office and say "take a seat," and you'd sit! Imagine having to ask permission to release software to users. Imagine being sad on Sunday afternoons because the weekend was almost over, and tomorrow you'd have to get up and go to work. How did they stand it?<br /></blockquote><br /><br /><br />I have a plan to fix this, but it's a little difficult to describe because people have a hard time thinking outside of the surf <a href="http://paulbuchheit.blogspot.com/2007/04/whose-reality-are-you-living-in-whose.html">mindset</a>, the assumptions that underlie the "job culture". It will take some time.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/04/senzees-developer-interview-test-q-1.html]]></link>
    <title><![CDATA[Senzee's Developer Interview Test, Q. 1]]></title>
    <body><![CDATA[You have two hours to complete this exam.<br /><br />1.) Without looking at the following questions, quickly estimate how long it will take <em>you</em> to finish this test correctly.  Please do not let your estimate exceed the time limit given for this test.<br /><br />..<br /><br /><em>..argh..</em>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/05/one-jruby-on-rails-talk-already-full.html]]></link>
    <title><![CDATA[One JRuby on Rails Talk Already Full!]]></title>
    <body><![CDATA[Tom and I are giving our JRuby on Rails talk twice at JavaOne next week, and while wrestling with <a href="http://www.cplan.com/javaone2007/schedulebuilder">ScheduleBuilder</a> I discovered something surprising: the thursday session is already FULL! Perhaps I underestimated how many people would be interested in seeing us prattle on about the future of Java web development with Rails. I expected that two sessions was extremely optimistic of the scheduling committee. It appears I was quite wrong!<br /><br />If you haven't signed up for the JRoR session yet, you better do it quick. I'd hate for any of my regular readers to miss out on attending the session. It's gonna be a great show!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://michaelzoehrer.blogspot.com/2007/02/family-guy-brokeback-horses.html]]></link>
    <title><![CDATA[Family Guy - Brokeback Horses]]></title>
    <body><![CDATA[Family Guy ist sooo genial. Leider sehe ich es nur hin und wieder auf MTV. Sollte es öfter spielen!!!<br /><br /><div xmlns='http://www.w3.org/1999/xhtml'><p><object height='350' width='425'><param value='http://youtube.com/v/BuNsbLh9I8w' name='movie'></param><embed height='350' width='425' type='application/x-shockwave-flash' src='http://youtube.com/v/BuNsbLh9I8w'></embed></object></p></div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/06/not-having-health-insurance-is-really.html]]></link>
    <title><![CDATA[Not getting health insurance is a really bad idea]]></title>
    <body><![CDATA[Seriously. If you can possibly afford insurance, then there's no excuse for not having it. I'm especially thinking of young people doing a startup and not buying insurance in order to "save money". That's a really dumb optimization, and suggests that you aren't very good at making trade-offs. A quick search shows that in California you can get a decent plan for <a href="http://tonik.com/ca/">$77/month</a>. If you can't find $77/month, then maybe you aren't ready to do a startup.<br /><br />I'm reminded of this issue right now because I just passed someone in SF laying face down on the pavement, not moving. His bicycle was nearby and I'm guessing that he had just been hit by a car. I hope that he does ok, but it didn't look good. (people were already helping him, and the police were just a few cars back, so I didn't stop)<br /><br />Even if you are young and healthy, bad things can still happen. My brother was perfectly healthy until he got cancer at age 33. When my daughter was in the hospital, it cost $12,000/day -- she was there for almost 3 months.<br /><br />The simple fact is that the health care system in the US isn't setup for people who don't have insurance. If something bad happens, you don't want to be one of those people. I'm not looking to debate our system, so please don't bother. Right now, the system is the way it is.<br /><br />My point is simple: <span style="font-weight:bold;">Do what you can to get insurance. Now.</span>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/06/optimizing-everything-some-details.html]]></link>
    <title><![CDATA[Optimizing everything: some details matter a lot, most don't]]></title>
    <body><![CDATA[Optimization is something that all engineers and product designers (all people, really) should understand. However, their words and behavior suggest that most either don't understand it, or haven't really internalized the lessons of optimization. (and by the way, I'm talking about CS-style "make it better" <a href="http://en.wikipedia.org/wiki/Optimization_%28computer_science%29">optimization</a>, not "make it optimal" optimization)<br /><br />Like everything, optimization is a complex topic, so I'm going to simplify it into three easy steps:<br /><ol><li>Find the problems ("<a href="http://en.wikipedia.org/wiki/Performance_analysis">profiling</a>")<br /><li>Sort the problems according to benefit-of-fixing/cost-of-fixing ("ROI")<br /><li>Fix them, in the order of highest benefit/cost to lowest<br /></ol><br />Most programmers probably think of optimization primarily in terms of CPU profiling, but it really applies to <span style="font-style:italic;">everything</span>. (and in fact, this post is about the general process of optimizing, especially for things other than code -- for specific cases of hardcore game engine optimization or whatever it might be totally wrong)<br /><br />For example, people who continually "pinch pennies" (perhaps driving around town to save a few cents on gas) but then waste thousands of dollars on something stupid like a fancy car or credit card interest are probably not optimizing their spending very well. They are putting most of their effort into low reward activities (saving a few cents on gas) while losing much more money in other places. Big, dumb, Dilbertesque companies are also notorious for this kind of thing, cutting back on pencils while running super-bowl commercials, or something.<br /><br />This is also the kind of activity that I was talking about in my post titled "<a href="http://paulbuchheit.blogspot.com/2007/06/wasting-time-on-things-that-really-dont.html">Wasting time on things that really don't matter</a>". It's not that there is zero difference between two slightly different ways of testing for the empty string, it's just that your product probably has 100,000 more serious problems, and so time spent worrying about the empty string style is time NOT spent fixing those more important problems. Put another way, fix all of the other problems first, then debate the empty string.<br /><br />Of course you may enjoy debating the empty string (and in fact there are some interesting arguments), and that's fine. The zeroth step in optimization is to decide what you are optimizing for. If you're looking to maximize the amount of time spent on endless debates, or perhaps code "beauty", then maybe the empty string debate really is the highest benefit/cost activity (because the benefit is so high). If, on the other hand, you are trying to maximize the success of your product, then the empty string debate probably has negative value and should be strongly avoided.<br /><br />The empty string comparison is obviously a small detail, and it's tempting to think that we should not bother with such small details, but that too is a huge mistake. <span style="font-weight:bold;">Another important lesson of optimization is that some small fraction of the details will determine the majority of the outcome.</span> This is commonly referred to as the 80/20 or 90/10 rule, stating for example that "90% of the time is spent in 10% of the code", but it could just as easily be 99/1 or something like that (and for code that has already been well optimized, this 80/20 rule may not hold -- it's just a heuristic). In code it may be just a few lines in the "inner loop", or perhaps it's the interest rate on your mortgage ("what's a few percent?"). I once profiled a server at Google and discovered that something like 90% of the time was being spent on a single line of code: a call to sscanf (repeated millions of times) that someone had snuck into the scoring code (that's the 99999/1 rule).<br /><br />Determining which details matter a lot (and which don't) is also the key to designing successful products. In the classic <a href="http://apple.slashdot.org/article.pl?sid=01/10/23/1816257&tid=107">slashdot iPod post</a> from 2001, they summarized the newly released iPod thusly: "<span style="font-style:italic;">No wireless. Less space than a nomad. Lame.</span>" <br /><br />History suggests that those weren't the important details, since it's 2007 and there still isn't an iPod with wireless (not until the 29th, at least), and most iPods have less than the original 5GB of storage. Apple did, however, get a few very important details right: it's easy to get your music onto an iPod, it holds "enough" music (unlike the early flash players), and it fits easily into your pocket (unlike the early disk-based players). <br /><br />So how do we determine which details are important? <span style="font-weight:bold;">Observation</span>. (and some judgment, but I think that's mostly formed via observation) If you're optimizing an application, observe which resources are being exhausted or causing the delay (it's not always CPU -- it's often disk seeks), and then observe where they are being consumed. If you're trying to optimize money, first observe where most of the money goes to and comes from. To optimize a product design, observe which things are most "useful", and which are most painful or annoying (waiting or thinking, usually).<br /><br />If you get all of the important details right, you'll be so far ahead of everyone else that the other details probably won't matter. But remember, <span style="font-weight:bold;">your time is finite, so time spent on unimportant details is time not spent on important details!</span> Most engineers are very detail oriented people, and this is good because they can really focus on the important details, and it is bad because they can really focus on the unimportant details! I suspect that learning to tell the difference will be worth your time.<br /><br />By the way, to get even more details right, decrease the cost side of the benefit/cost equation so that you can do more things in less time (by <a href="http://paulbuchheit.blogspot.com/2007/04/secret-to-making-things-easy-avoid-hard.html">finding easier solutions</a>, avoiding endless debates, etc).]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://www.anobii.com/anobi/person_view_mode.php?s=019d8910f5cb2e5a38&v=00a676693563533b2c]]></link>
    <title><![CDATA[Ruby for Rails]]></title>
    <body><![CDATA[~ [Bosie Kern added to shelf]    -Benjamin S. Gorlick, Software Engineer and Developer  "Closes the gap between Ruby as a language and Rails as a framework. The breadth of knowledge is astounding!"  -Bob Hutchison, CTO, Recursive Design Inc.  "A comprehensive tutorial on Ruby and on Rails"  The word is out: with Ruby on Rails you can build powerful Web applications easily and quickly! And just like the Rails framework itself, Ra ...]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/196]]></link>
    <title><![CDATA[More on privacy issues with Apple's DRM-less iTunes Plus]]></title>
    <body><![CDATA[<p><em>The <a href="http://people.w3.org/~djweitzner/blog/?p=92">original appearance</a> of this entry was in <a href="http://people.w3.org/~djweitzner/blog">Danny Weitzner - Open Internet Policy</a></em></p>  <p>There’s been more discussion of Apple iTunes Plus DRM-less music and its practice of embedded personal account information into the tracks that are sold without copy protection. I’ve <a href="http://people.w3.org/~djweitzner/blog/?p=91">earlier</a> expressed my support for this accountability approach to copyright protection, as opposed to burdensome DRM systems. However, privacy complaints (BBC, <a href="http://news.bbc.co.uk/1/hi/technology/6711215.stm">Anger over DRM-free iTunes tracks</a>) are appearing over the use of personal information in this way.</p> <p>Looking through Apple’s <a href="http://www.apple.com/legal/privacy/">privacy policy</a> (updated 23 December 2004) and iTunes <a href="http://www.apple.com/legal/itunes/us/service.html">terms of service</a> (updated 30 May 2007 I found no mention of this otherwise hidden use personal information. The terms of service does say:</p> <blockquote><p> (xii) iTunes Plus Products do not contain security technology that limits y our usage of such Products, and Usage Rules (iii) – (vi) do not apply to iTunes Plus Products. You may copy, store and burn iTunes Plus Products as reasonably necessary for personal, noncommercial use.</p></blockquote> <p>Seems that this would have been a good place to indicate the new use of users information. A simple notice here that passing tracks, which appears to be permitted as long as it is for “personal, non-commercial use,” also results in having your personal information passed around. Perhaps I missed this or perhaps Apple plans to add it. I’m going to ask around to get clarification.</p> <p><em>Update:</em> <a href="http://www.eff.org/deeplinks/archives/005282.php">EFF</a> and <a href="http://www.oreillynet.com/mac/blog/2007/06/is_that_steganography_more_adv.html">O’Reilly</a> also report that the iTunes files may have individual differences (that could allegedly be used for individual tracking) even beyond the personal information that is visible.</p> ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/06/using-google-to-mine-sensitive-data.html]]></link>
    <title><![CDATA[Using Google to mine sensitive data]]></title>
    <body><![CDATA[<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp3.blogger.com/_O2FaMEHM37g/RmblCbJS58I/AAAAAAAAAGg/fs1i_BJc-NQ/s1600-h/hack.png"><img style="float:right; margin:0 0 10px 10px;cursor:pointer; cursor:hand;" src="http://bp3.blogger.com/_O2FaMEHM37g/RmblCbJS58I/AAAAAAAAAGg/fs1i_BJc-NQ/s400/hack.png" border="0" alt=""id="BLOGGER_PHOTO_ID_5072993860088686530" /></a>The time when hackers where trying to directly attack companies may be over. Nowadays, sensitive information about a company can be found using Google and associated tools. A recent article on <a href="http://searchsecurity.techtarget.com/originalContent/0,289142,sid14_gci1247907,00.html">SearchSecurity.com</a> explains how hacker techniques may benefit from Google search engine. The author, Bill Brenner, explains the tools used these days by hackers to find useful information about a given company (your competitors could even pay hackers to find such information). He gives many examples of possible tools (e.g. Google Patent Search, Google Blog Search, etc.).<span class="fullpost"> <br /><br />Brenner also warns against the use of blogs inside a company. Intellectual property may be shared involuntarily. I think one of the first (and more simple) example of such information you can find on the web, was regarding the ability of search engine such as Google to mine .doc or .pdf files. Before Google, people could put their sensitive documents on the web and they where somehow hidden since nobody knew the exact URL. Now techniques are more complex as you will see if you read Brenner's article.</span><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://channel9.msdn.com/ShowPost.aspx?PostID=276286#276286]]></link>
    <title><![CDATA[Jon Udell: Chris Wilson on IE7, Ajax, and web standards]]></title>
    <body><![CDATA[?<span style="font-size:11pt;font-family:'Calibri','sans-serif'">Hi, this is Jon Udell. In this first installment of my new <a href="/shows/Microsoft_Conversations_with_Jon_Udell">Microsoft Conversations</a> series I got together with Chris Wilson. He's been involved with Internet Explorer and with web standards for over a decade. We talked about the history and evolution of IE, about Ajax, about ways of extending the browser -- ranging from bookmarklets to Firefox extensions to plug-ins -- and about the W3C's invitation to Chris to chair its new HTML working group.</span><br/><a href="http://channel9.msdn.com/podcasts/MSConversations_wilson_ch9.mp3">Listen to the podcast(MP3)</a><br/><a href="http://channel9.msdn.com/podcasts/MSConversations_wilson_ch9.wma">Listen to the podcast(WMA)</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://www.flog.in/stories/3949452/]]></link>
    <title><![CDATA[Keine Daten]]></title>
    <body><![CDATA[<a href="http://www.tagesanzeiger.ch/dyn2/wetter/index.html"><img title="keine Daten für Samstag" height="119" alt="keine Daten für Samstag" width="430" src="http://static.twoday.net/flog/images/wettervorhersage_chur.jpg" /></a><br /> <br /> In genau 24 Stunden beginnt die Grillparty, zumindest gemäss <a href="http://www.flog.in/stories/3899306/">meiner Einladung</a>. Wenn ich aus dem Fenster schaue, bin ich leicht verunsichert, die Prognose für morgen Samstag hilt mir auch nicht weiter, die Meldung lautet lapidar "keine Daten" (siehe screenshot <strike>unten</strike> oben).]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/08/data-mining-jobs-in-europe.html]]></link>
    <title><![CDATA[Data mining jobs in Europe]]></title>
    <body><![CDATA[<!-- google_ad_section_start --><a href="http://www.kdnuggets.com/">KDnuggets</a> is certainly the best place to find a data mining job in US. Several opportunities are often updated. In addition, external links are given to find data mining jobs using other websites. But what about jobs in Europe? To my knowledge, there is no website specialized on data mining jobs in Europe. Of course, websites such as <a href="http://datashaping.com/data_mining_jobs.shtml">DataShaping</a> can be used, since they contain such offers. However, it seems US is better covered than Europe through, for example, KDnuggets. <br /><span class="fullpost"><br />Thus, I have an open question to Gregory Piatetsky-Shapiro: <span style="font-style:italic;">Why is there no job offers covering Europe on KDnuggets?</span> It would be interesting to know the percentage of European vs. US readers of KDnuggets. If this percentage is not too small, it may be meaningful to propose job offers in Europe. However, the problem is perhaps that no companies send email to KDnuggets concerning job offers in Europe. This post is an open discussion to the above mentioned issue, and you are all invited to give your opinion.<br /></span><!-- google_ad_section_end --><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://blogs.sun.com/jag/entry/danger_the_fire_marshal]]></link>
    <title><![CDATA[Danger & the fire marshal]]></title>
    <body><![CDATA[Tom Andrews asked "<i>:-( I always really liked the T-shirt hurling. If real software people make their own hardware, really serious software people make their own potentially dangerous hardware. Tell us Jim - did the fire regs finally get too strict? Have they banned indoor rockets?</i>". <p> The fire regs have been pretty constant.  They've squashed some really good entries.  Last year we had an entrant using a chain saw which got squashed at the last moment because the fire marshal wouldn't accept the engine exhaust, so an electric chain saw had to be substituted: just not the same.  In a previous year one proposal that I fought ahrd for was for a traditional Indonesian cannon used at festivals to shoot confetti into crowds.  It was made of bamboo and fueled with kerosene.  Totally wonderful, but it freaked the fire marshal. <p> The issue really was just timing.  I was out for too long.  I guarantee that there will be no shortage of <i>potentially dangerous hardware :-)</i> at JavaOne this year.  The schedule is jammed.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[/info/1shbq/comments#c1skgg]]></link>
    <title><![CDATA[mjakl on  Unix editors: a parable]]></title>
    <body><![CDATA[<p>Sometimes I feel like the old wizard, not because I'm super smart or something, but because I have to learn "yet another programming-language"(TM).</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://arved.priv.at/weblog/archives/2007/08/mt4_available.html]]></link>
    <title><![CDATA[MT4 available]]></title>
    <body><![CDATA[<p>MovableType 4 was released. Unfortunately i am a bit busy at the Moment. So i will most likely not have time to play with it before next week. Since this is a major update i would not expect a portupdate in less than two weeks. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/06/quick-big-screen-development.html]]></link>
    <title><![CDATA[Quick: Big screen development]]></title>
    <body><![CDATA[This is a good setup for working together, and the <a href="http://www.google.com/products?q=1080p+lcd+42&scoring=p&price1=1000&price2=&btnP=Go&show=dd&lnk=showlist">price of 1080p</a> televisions is dropping.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp0.blogger.com/_4sbxCBha3lY/RnJTKGNYLWI/AAAAAAAACg8/rnskehYqKmY/s1600-h/IMG_0075s.jpg"><img style="cursor:pointer; cursor:hand;" src="http://bp0.blogger.com/_4sbxCBha3lY/RnJTKGNYLWI/AAAAAAAACg8/rnskehYqKmY/s400/IMG_0075s.jpg" border="0" alt=""id="BLOGGER_PHOTO_ID_5076211162930490722" /></a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/08/data-mining-research-updated.html]]></link>
    <title><![CDATA[Data Mining Research updated]]></title>
    <body><![CDATA[<!-- google_ad_section_start -->As you have probably noticed, DMR has been updated recently. On the top of the blog, you can find the three most read topics. Between parentheses, you can find the number of times the corresponding articles have been accessed. On the sidebar (right), you can find recent news related to data mining. I hope you find this blog convenient to read. Feel free to comment or suggest any improvement.<br /><br />Kind regards.<br />Sandro.<br /><!-- google_ad_section_end --><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/08/and-he-also-thinks-iphone-is-too-skinny.html]]></link>
    <title><![CDATA[he also thinks the iPhone is too skinny]]></title>
    <body><![CDATA[I spent most of the past week in Seattle.  On Monday, at dinner with a dozen friends from my Microsoft days:<br /><br />Evan: "Having an iPhone is like dating a supermodel.  It's sexy, beautiful.  When you bring it out, your friends are impressed.  But it's kind of dumb, can't do anything very well.  It has expensive tastes.  If you gave it to your friend, they would give it back to you after a week."<br /><br />Andy: [chuckling] <br /><br />Me: [to Andy] "You're nodding like you've heard Evan use this analogy before."<br /><br />Andy: "Usually it's the other way around.  Evan finds that dating supermodels is like having an iPhone."]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://www.dekorte.com/blog/blog.cgi?do=item&id=2879]]></link>
    <title><![CDATA[Headed to Burning Man on Wednesday]]></title>
    <body><![CDATA[If you're going and would like to meet, feel free to   <a href=mailto:steve@dekorte.com>email me</a>. ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://channel9.msdn.com/ShowPost.aspx?PostID=335996#335996]]></link>
    <title><![CDATA[Marc Mercuri on platform incubation and Tafiti]]></title>
    <body><![CDATA[?<p> Today on Channel 10, Larry Larsen interviews <a href="http://www.marcmercuri.com/">Marc Mercuri</a> who <a href="http://www.on10.net/Blogs/larry/first-look-microsoft-tafiti/">announces and demonstrates</a> an experimental Silverlight-based interface to Live Search called <a href="http://www.tafiti.com">Tafiti</a>.  </p> <p> Marc works on the platform incubation team. In this podcast we discuss what platform incubuation means, how the Tafiti project exemplifies it, and what the future may hold not only for Tafiti but for a platform that's evolving to encompass both software and services. </p><br/><a href="http://channel9.msdn.com/media/ju_mercuri.mp3">Listen to the podcast(MP3)</a><br/><a href="http://channel9.msdn.com/media/ju_mercuri.wma">Listen to the podcast(WMA)</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/07/alioth-numbers-for-jruby-10.html]]></link>
    <title><![CDATA[Alioth Numbers for JRuby 1.0]]></title>
    <body><![CDATA[Someone pointed out to me the other day that the Alioth "Compuer Language Benchmarks Game" (as they call it now) had started to include <a href="http://shootout.alioth.debian.org/gp4sandbox/benchmark.php?test=all&lang=jruby">JRuby 1.0</a> in the results. And how do we fare? We're slower than Ruby 1.8.6! Hooray!<br /><br />But not by much. Depending on your definition of "on par", I'd say we're safely in the range of being on par with Ruby 1.8.6 performance, at least for these too-short, too-small measurements.<br /><br />Alioth benchmarks are regularly panned by language enthusiasts...or at least enthusiasts on the "slow" end of the benchmarks. In the case of JVM-based language implementations, the problem is the same old excuse: not enough time for the JVM JIT to work its magic. This case isn't all that different, but it's fair to say that Alioth isn't testing straight-line performance in a hot application, but getting from point A to point B without a running start. And in that domain, it provides a reasonable window into implementation performance.<br /><br />So then, the JRuby 1.0 numbers. You can click the link to see them, but they break down about like this:<br /><br /><span style="font-weight: bold;">Performance:</span><br /><ul><li>Four tests are equal or faster in JRuby--usually not more than 2x faster, but "4.8x" faster in one case. That fastest one involves "concurrency", and I haven't studied it enough to know whether it's meaningful or not.</li><li>Eight tests are less than 2x slower in JRuby.</li><li>The remaining four tests are greater than 2x slower in JRuby.<br /></li><li>Startup time is considerably worse; it's listed as 305x slower for JRuby (!!!) but it's not a particularly useful ratio. We take a couple seconds to get going compared to Ruby's hundredths. That's life.</li></ul><span style="font-weight: bold;">Memory:</span><br /><ul><li>All except one worse in JRuby</li><li>Most more than 2x worse in JRuby</li><li>Several more then 10x worse in JRuby</li><li>Does anyone care?</li></ul>(<span style="font-style: italic;"><span style="font-weight: bold;">Update:</span></span> Commenters have made it clear that they do care...but of course I was being a little bit glib here :) We continue every release to do what we can to improve performance AND memory usage, and other than some additional overhead from the JVM itself our memory usage is pretty reasonable.)<br /><br />So I guess that's all I've got to point out. We've been working on performance since 1.0, and there's a number of major improvements planned for the 1.1 release. And considering that "beating Ruby performance" wasn't a primary goal for JRuby 1.0, I think our "roughly on par" numbers here are pretty damn good. Granted, Ruby 1.8.x isn't the fastest implementation in the world, but we're pretty happy to have improved performance by an order of magnitude in the past year.<br /><br />Now, onward to the future!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/06/jruby-100rc3-released-and-this-is-it.html]]></link>
    <title><![CDATA[JRuby 1.0.0RC3 Released - And This Is It!]]></title>
    <body><![CDATA[Tom posted the announcements already, but <a href="http://www.bloglines.com/blog/ThomasEEnebo?id=28">JRuby 1.0.0RC3</a> is out in the wild! This release is our most important yet, because we intend for this release to become JRuby 1.0. The only things that will change from now until a 1.0 final release later this week would be any showstopping bugs that are extremely low-impact to fix. In general, RC3 should be nearly identical to 1.0 final.<br /><br />So what does this mean for <a href="http://jruby.codehaus.org">JRuby</a>? We've taken the approach of calling the JRuby 1.0 release the "Ruby compatible" release. Basically, all known application bugs caused by JRuby incompatibilities with Matz's Ruby (MRI) have been resolved. This doesn't mean there aren't more compatibility bugs; there probably always will be, and we have probably <a href="http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&&amp;pid=11295&status=1&amp;sorter/field=issuekey&sorter/order=DESC">50-80</a> in the bug repository right now (and another 80 bugs or enhancements that are JRuby-specific). But it does mean that most applications should "just work" out of the box, and any application failures we knew of have been resolved. In general, the remaining post 1.0 bugs are edge cases and minor correctness issues, like obscure forms of core methods or missing error conditions.<br /><br />We've tried very hard to make this both a solid release and a stepping stone to JRuby's future. With this release, we can confidently say that we're Ruby 1.8.5 compatible. Any additional fixes we need to make (like the known issues) are in the last 1% of Ruby features we can potentially support. We also recognize that this is a big moment for JRuby. People can start counting on JRuby to run their Ruby applications correctly. Of course many in the JRuby community have already been doing this for many months, but the 1.0 moniker says to the world we feel like we're ready for prime time.<br /><br />So what comes after 1.0? That breaks down into a few areas:<br /><ol><li>Performance. JRuby's performance has come a long way in the past year. We've increased speed by at least an order of magnitude, and have enabled the JIT compiler for the 1.0 release. This means that for many cases where JRuby can compile Ruby code, it will perform faster than Ruby 1.8.5. The general case is still a little muddy, though. We've had anecdotal reports that JRuby on Rails in a Java application server performance extremely well, and other reports that general Ruby applications perform somewhat poorly. The general performance situation is not well-understood, but we all agree there's a lot more work to be done. And the good news is that we have a big list of optimizations remaining to continue improving JRuby's specific and general performance.</li><li>Java Integration. JRuby does an excellent job of fitting into the Java platform. In almost all cases, you can call libraries, implement interfaces, and extend classes with no difficulty. But there are edge cases--usually nonstandard or antipattern Java--that JRuby doesn't behave as nicely. The code to enable calling Java is also far more complicated than we'd like. To solve both issues, we'll be taking the existing Java integration syntax and API and backing it with a redesigned library. Expect to see something of this work in a 1.1 release later this year. Our goal is to achieve excellent integration with Java, on par with the most tightly-integrated JVM languages available today. And we're not far off.</li><li>Ruby 2.0 and Rubinius. We intend to start supporting Ruby 2.0 and Rubinius bytecode execution soon, though the Ruby 2.0 work is much farther along. We intend to catch up the Rubinius work as well as to try adopting some of Rubinius's pure Ruby implementations of core class functionality. We also plan to enable the use of Ruby 2.0 features through configuration and command-line switches to JRuby. Specify something like -J-Djruby.string.version=2 and all strings in the system will be treated as Ruby 2.0 strings, with full character semantics. Or optionally turn on experimental Ruby 2.0 syntax for lambdas and named parameters. Basically we want to bring JRuby up to the bleeding edge of Ruby features, to provide another platform where people can get a feel for what Ruby 2.0 might look like. More exposure for these features will help Matz and Co. decide the best way to move forward. And that's good for everyone.</li></ol>And of course we'll continue fixing compatibility bugs, Java integration bugs, and expanding JRuby's reach on the Java platforms with more DSLs and API wrappers around all your favorite Java APIs.<br /><br />But there's one more area I should talk about: how you can get involved.<br /><br />JRuby is a community project. The core committers play traffic cops as much as developers, routing patches, examining bugs, documenting features. The only way a project like JRuby succeeds is through mass community involvement. We've been extremely lucky to have a constant flow of interested developers into our community, even when OSS community attrition has been very high. The community may look completely different from month to month, but the flow of patches and bugs has steadily increased.<br /><br />For folks just getting started, I've written a few articles on the <a href="http://www.headius.com/jrubywiki">JRuby wiki</a> that should help you understand the development process. They're linked from the front page under "Getting Involved".<br /><br />For easy bugs, I'd recommend looking in the <a href="http://jira.codehaus.org/browse/JRUBY">JRuby JIRA</a> for bugs with "<a href="http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&amp;&query=rubinius&amp;summary=true&description=true&amp;pid=11295&status=1">rubinius</a>" or <a href="http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&amp;&reporterSelect=specificuser&amp;reporter=djberg96&pid=11295&amp;status=1&sorter/field=issuekey&amp;sorter/order=DESC">bugs reported by Daniel Berger</a>. The Rubinius bugs are almost all problems we've had running Rubinius's excellent specs, and usually represent minor incompatibilities with C Ruby. Daniel's tests are a lot of those edge cases I mentioned...he's running through his own test suite and reporting any incorrect behavior that's come up. Another option would be to just pick your favorite Ruby app and start running its test cases with JRuby. You're sure to find something interesting to report, and it may be an easy fix.<br /><br />For non-Java-coders (or folks afraid of hacking on JRuby), stop by the <a href="http://www.headius.com/rubyspec">RubySpec Wiki</a> and update or author an article. RubySpec is an effort to build a community-driven specification of Ruby that all users and implementers can freely reference. It is linked from the RubyDoc site and is fast becoming a standard way for the community to record language and library behaviors. I believe this is the best and fastest way for us to form a complete specification of Ruby's behavior...and I believe such a specification is becoming extremely important, what with there now being 5-10 different implementations of Ruby, all guessing at what "correct" is. <a href="http://www.headius.com/rubyspec">Have you written RubySpec today</a>?<br /><br />Well that's about it for this release report. If all goes as well as I think it will, JRuby 1.0 final should be released some time this week. Give it a try, I think you'll be pleasantly surprised!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2006/10/closures-for-java-v03.html]]></link>
    <title><![CDATA[Closures for Java (v0.3)]]></title>
    <body><![CDATA[<p>We've just completed a major revision and simplification of the Closures for Java specification. Rather than post the specification on this blog, it is <a href="http://www.javac.info/closures-v03.html">on its own web page, here</a>. There are two versions of the specification: one with function types and one without. There is a pulldown menu at the top of the specification that makes it display only the text relevant to the version of the specification you want to see. Keeping the specification in this form will allow us to more easily maintain the two parallel specifications so we can compare  them and delay a decision on this issue until later. These specifications are the starting point for our prototype. </p> <p>There are two significant changes in this revision. First, there is a completely new syntax for closures and function types. Using the new syntax, with functon types, you can write</p> <blockquote>   <pre>{int,int =&gt; int} plus = {int x, int y =&gt; x+y};</pre> </blockquote> <p>As you can see, we're proposing to add the new &quot;arrow&quot; token =&gt; to the syntax. Just to be perfectly clear, this code declares a variable of function type </p> <blockquote>   <pre>{int,int =&gt; int}</pre> </blockquote> <p>which is a function that takes two ints and yields an int. The variable is named &quot;plus&quot; and it is assigned the closure value </p> <blockquote>   <pre>{int x, int y =&gt; x+y}</pre> </blockquote> <p>which is a closure that receives two ints (named x and y) and yields their sum.  </p> <p>The second major change has to do with the treatment of &quot;restricted&quot; closures. We've done away with the &quot;synchronized&quot; parameters from the previous revision of the specification. Instead, you can inherit from a marker interface to restrict the closure conversion. If you don't use the marker interface, then closures are not restricted when converted to that type. </p> <p>Another important change is to the meaning of a function type. It is now defined to be a system-provided interface type, and it is provided in a way that  gives the required subtype relations among function types. That means that in order to invoke a value of function type, instead of simply placing arguments in parens after the function value, you use its &quot;invoke&quot; method. This significantly simplifies the name lookup rules for variables of function type. In fact, now there are no special rules at all. </p> <p>As always, your feedback and ideas are welcome. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://www.davids-world.com/archives/2007/08/an_island_in_th.html]]></link>
    <title><![CDATA[An island in the Tennessee heat: Opryland's biosphere hotel in Nashville]]></title>
    <body><![CDATA[       <a href="http://www.davids-world.com/archives/2007/08/14/IMG_4888.jpg"><img alt="IMG_4888.jpg"   hspace=5 src="http://www.davids-world.com/archives/2007/08/14/IMG_4888-thumb.jpg" width="450" height="299" /></a> <p> I spent a couple of days in the surreal biosphere called "Gaylord Opryland", a gigantic hotel on the outskirts of Nashville, Tennessee, which seems to be the largest non-gaming hotel complex in the world. Built in times when energy didn't cost much (and built by Americans!), the Opryland has a number of glass domes spanning the buildings that host almost 3,000 guest rooms. Of course the glasshouses are all cooled down, trees and bushes and everything you'd expect in botanic gardens have been planted. You can spend money on a boat ride on the artificial river around "Delta Island", and of course you'll get everything from first-class steak dinners with excellent wine and cheese to American fast food in the restaurants there. <p> The whole complex is truly post-apocalyptic. Don't leave the hotel - the nuclear war is raging outside, the sun is burning down (it was!) and there is little to see amidst freeways anyways except the newly moved Grand Ole' Opry (Nashville's big music theater) and a mall. Piggybacking on Nashville's legendary music scene, the hotel creates its own entertainment. No need to leave the complex. Downtown Nashville's music bars are a long cab ride away anyways.           ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://arved.priv.at/weblog/archives/2007/06/linuxwochen_07.html]]></link>
    <title><![CDATA[Linuxwochen 07]]></title>
    <body><![CDATA[<p>I am just online via the Wireless Network at Linuxwochen Wien, the local Linux promotion event.<br /> Unfortunately it looks like a lot less people are attending than the years before, maybe 50 are attending the talks.<br /> I am attending the last two talks, the nagios one was very basic and short, and now a talk about linux embedded systems. The talk suffered from a crashing Mac OS X but the speaker managed to get it back working without stopping to talk.</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://www.davids-world.com/archives/2007/04/psycholinguisti.html]]></link>
    <title><![CDATA[Psycholinguistics and mexican food in San Diego]]></title>
    <body><![CDATA[       Just returned from a 5-day trip to San Diego, California.  San Diego is a fun place - it's sunny, there's a beach with seals at La Jolla, and plenty of restaurants in Oldtown and in the Gaslamp District. They've got a park with a zoo and lots of jets zooming along over the park. And, after driving some 50,000 miles on the German Autobahn and other fast roads, I now had the first-time misfortune to see <a href="http://www.signonsandiego.com/news/metro/20070401-9999-7m1pubsafe.html">this boy's</a> body in a bag on Interstate 5 while passing by.    <a href="http://picasaweb.google.co.uk/david.reitter/SanDiegoCUNY2007">A photo album with snapshots is here. </a> It was a work trip though - at CUNY, I heard interesting talks and presented some of my own work in computational psycho-linguistics. In lay-man's terms: we used a large collection of recorded dialogues between people to show that <i>the more people adapt to each other in terms of linguistic structure, the more are they successful at communicating and jointly carrying out a task.</i> (With J. D. Moore, <a href="http://crl.ucsd.edu/cuny2007/program/65_Abstract.pdf"><i>  Successful dialogue requires syntactic alignment</i></a>, CUNY 2007). On a more technical note, I also presented evidence that people like to repeat syntactic structure when they speak, and that this repetition actually pertains to hierarchical structure - and not just sequences of word types, as some speech recognition developers like to simplify it. (With F. Keller and J. Hockenmaier,   <a href="http://crl.ucsd.edu/cuny2007/program/27_Abstract.pdf"><i>Corpus-based evidence against sequence priming</i></a>)  I also learned that in the US, the green leaves of Coriander are called Cilantro - and I found out why I hate the stuff (I'm a supertaster). More about this soon.            ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://www.terminally-incoherent.com/blog/2007/08/27/install-games-on-a-separate-partition/]]></link>
    <title><![CDATA[Install Games on a Separate Partition]]></title>
    <body><![CDATA[Here is a windows tip that may save you from re-installing games in case of a Windows meltdown. Simply, make it a rule to install all the games on a separate partition. I started doing that a while ago because of shrinking disk space on my C: drive. After my HD died I thought I [...]]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://blogs.sun.com/jag/entry/crunch_time_for_javaone]]></link>
    <title><![CDATA[Crunch time for JavaOne]]></title>
    <body><![CDATA[<a href=http://java.sun.com/javaone/sf/index.jsp>JavaOne</a> is just a few weeks away and the crunch is already far too intense.  We're doing a review of proposed keynote demos tomorrow: it's easlly the longest "cool stuff" list we've ever had.  I don't know how we're going to choose.  There's a lot of cool stuff going on, and just not enough stage time for most of it.  Today is also the due date for deciding the Duke's Choice awards.  It's really hard.  As much as I've been bitching and moaning about my lack of sleep, it's a good problem to have. <p> We're also ending up with an overdose of competitions.  One of the reasons I decided against doing the t-shirt hurling contest again this year is that there were piles of other proposals: I wanted to leave room for something new.  The big tragedy here is that as a Sun Employee, I can't enter any of them.  :-( ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://arved.priv.at/weblog/archives/2007/05/mt_phishing_att.html]]></link>
    <title><![CDATA[MT phishing attempt]]></title>
    <body><![CDATA[Today in my inbox, a new kind of phishing mail: <pre> Movable Type Newsletter ========================  Get the fix for MT's built-in anti-spam plugin.  Check out our post to get the details: http://cts.vresp.com/c/?SixApart/683d839cb2/c349cbc97b/5a31576924 </pre>  And i thought everyone was using Wordpress, s9y etc.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2007/03/closures-for-organizing-your-code.html]]></link>
    <title><![CDATA[Closures for Organizing Your Code]]></title>
    <body><![CDATA[<p>Much of the discussion of Closures in Java has been about they way they affect public APIs. But there is another aspect  that is just as important: the way closures affect <em>private</em> APIs between parts of your program. Closures often enable a tremendous simplification of a program design compared to what would be required in their absence. The following describes my implementation of a graph algorithm for computing the<em> Jeffersonians</em> of a graph using algorithm K from Knuth's <em>The Art of Computer Programming</em>, volume 4B, section 7.5.7.</p> <p>As you may be aware the set of Jeffersonians of a graph is best computed using a complex recursive algorithm. Although recursive algorithms can be translated into algorithms without using recursion (Java without recursion remains Turing-complete), the recursive version of the algorithm is much shorter and easier to understand. We're lucky to be living in an age in which virtually all programming languages support recursion. Though details of the implementation are not important, my implementation went something like this:</p> <blockquote>   <pre>public Collection&lt;Jeffersonian&gt; findAllJeffersonians(Graph g) {     Collection&lt;Jeffersonian&gt; result = new ArrayList&lt;Jeffersonian&gt;();     findAllJeffersoniansInternal(g, result);     return result; }</pre> </blockquote> <p>The idea is that the recursive part of the algorithm can pass around the collection into which the result will be placed, and every Jeffersonian that is found will be placed into the collection:</p>  <blockquote>   <pre>private void findAllJeffersoniansInternal(<br />        Graph g, Collection&lt;Jeffersonian&gt; result) {<br />    // complex recursive algorithm here<br />    Jeffersonian found = ...;<br />    result.add(found);<br />    // more complex recursion here<br />}</pre> </blockquote> <p>One pot of coffee and an all-nighter later I had this working like a charm. The next day my  tech lead asked me to add an API element that determines whether or not a graph has a Jeffersonian or not. That was easy:</p>    <blockquote>   <pre>public boolean hasJeffersonian(Graph g) {     return findAllJeffersonians(g).size() != 0; }</pre> </blockquote> <p>This didn't pass code review. The problem is that this new method is to be used in the inner loop of Google's &uuml;ber-secret application that will take over the world. Never mind that. The problem is performance. Determining whether or not a graph <em>has</em> a Jeffersonian can be done in linear time, but  enumerating all of them requires quadratic time (or worse). But my implementation does it the hard way. By then it was Friday afternoon and I really wanted to head home for a glass of wine, so I did what any self-loathing software engineer would do: I cut and pasted the complex recursive code in <tt>findAllJeffersoniansInternal</tt> into <tt>hasJeffersonianInternal</tt> and added a boolean return value (true when a Jeffersonian was found). Then I added logic to short-circuit the rest of the algorithm once a Jeffersonian had been found at any step. The code was messy but workable, and I had it passing tests in less than an hour. The code duplication left me somewhat uncomfortable, but the two methods were different enough that merging them would have been hard. I considered adding a second flag so I could have one body of code to do both versions, but I decided to leave that refactoring until Monday. </p>     <p>Something very strange happened over the weekend, though. On Monday my pointy-haired boss told me there was both good news and bad news, and asked which I wanted first. Knowing how these jokes work (the second one always trumps the first) I asked for the bad news first. The bad news was that my machine had crashed, losing all of my work from Friday. Including my implementation of <tt>hasJeffersonian</tt>. The good news was that my machine had been replaced with a brand new one, a fast new 40-core workstation, and it came with JDK7 preinstalled. I had been using JDK6 before, so I was eager to try  the new Java language features. </p>     <p>Taking a fresh look at the problem of writing <tt>hasJeffersonian</tt>, I decided to refactor the original program to pass  a closure instead of a collection:</p>     <blockquote>       <pre>public Collection&lt;Jeffersonian&gt; findAllJeffersonians(Graph g) {     Collection&lt;Jeffersonian&gt; result = new ArrayList&lt;Jeffersonian&gt;();     findAllJeffersoniansInternal(g, { Jeffersonian j =&gt; result.add(j); });     return result; }<br /><br />private void findAllJeffersoniansInternal(<br />        Graph g, {Jeffersonian =&gt; void} foundJeffersonian) {<br />    // complex recursive algorithm here<br />    Jeffersonian found = ...;<br />    foundJeffersonian.invoke(found);<br />    // more complex recursion here<br />}</pre> </blockquote>     <p>Then I realized I could use the nicer syntax allowed for passing a closure to a method:</p>     <blockquote>       <pre>public Collection&lt;Jeffersonian&gt; findAllJeffersonians(Graph g) {     Collection&lt;Jeffersonian&gt; result = new ArrayList&lt;Jeffersonian&gt;();     findAllJeffersoniansInternal(Jeffersonian j : g) {         result.add(j);     }     return result; }</pre>     </blockquote>     <p>Solving the second problem was then trivial:</p>     <blockquote>       <pre>public boolean hasJeffersonian(Graph g) {     findAllJeffersoniansInternal(Jeffersonian j : g) {<br />        return true;<br />    }     return false; }</pre>     </blockquote>     <p>That was the entire implementation. I had a strange sense of elation, but I couldn't quite tell why. I could no longer remember why the problem was so messy on Friday. This refactoring seemed trivial, and this code was so clear. What made it so hard before? </p>     <p>Then I woke up. It's 2007, not 2009. JDK7 is barely a gleam in the eye of Sun. My machine is only dual-core. Consensus on closures is elusive. As far as I can tell, there isn't any such thing as a graph's Jeffersonian, or a Google plan to take over the world. It's Monday morning, and I have to figure out how to merge two  almost-copies of a big recursive algorithm.</p>     <p>But on the bright side, my boss is a really nice guy.</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/186]]></link>
    <title><![CDATA[MP3 patent mess and lessons for standards making]]></title>
    <body><![CDATA[<p><em>The <a href="http://people.w3.org/~djweitzner/blog/?p=87">original appearance</a> of this entry was in <a href="http://people.w3.org/~djweitzner/blog">Danny Weitzner - Open Internet Policy</a></em></p>  <p>The New York Times reports (<a href="http://www.nytimes.com/2007/03/05/technology/05music.html?_r=1&amp;oref=slogin">Patent Fights Are a Legacy of MP3’s Tangled Origins, Douglas Heingartner, 5 March 2007, C03</a>) on the mess over patent licensing for MP3 technology. While most (including Microsoft) had assumed/hoped that if they paid licensing fees to Frauenhofer they’d have the patent basis largely covered, now Alcatel (armed with the former Bell Labs patent portfolio from Lucent) and others are showing up demanding licensing fees, too. Microsoft just got hit with a with $1.5 billion patent infringement judgment in the United States. Other vendors with MP3 as an integral part of their product are worried that they existing licensing arrangments may not insulate them from new demand for fees.</p> <p>Leonardo Chiariglione, chair of the MPEG group, declares that this is a bad for MP3 deployment:</p> <blockquote><p>“I consider the situation in general not positive for the wide adoption of the standard, which is what I have been working on.” </p></blockquote> <p>At the same time he laments the fact that there is little the standards body (ISO and MPEG) can do. Says that Times article:</p> <blockquote><p>For those confused about where to turn to obtain an MP3 license for a new device or piece of software, he offers little solace. “The rule is that the MPEG working group is not allowed to consider patent issues in our technical work, so there is nothing I can do about it….” </p></blockquote> <p><a href="http://www.w3.org/Consortium/Patent-Policy-20040205/">W3C’s Patent Policy</a> takes a more activist approach to such matters. We won’t standardize any technology that cannot be implemented royalty-free, and if we find that there are threats to the RF status of a standard after it’s adopted, we can convene a special group to take action, including recommending changing or rescinding the standard.</p> ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/193]]></link>
    <title><![CDATA[IKL by Hayes et al. provides a semantics for N3?]]></title>
    <body><![CDATA[<p>One my <a href="/breadcrumbs/node/192">trip to Duke</a>, just after I arrived on Thursday, Pat Hayes gave a talk about <a href="http://www.ihmc.us/users/phayes/IKL/GUIDE/GUIDE.html">IKL</a>; it&#39;s a logic with nice Web-like properties such as <em>any collection of well-formed IKL sentences is itself well-formed</em>. As he was talking, I saw lots of parallels to N3... propositions as terms, log:uri, etc.</p><p>By Friday night I was exhuasted from travel, lack of sleep, and conference-going, but I couldn&#39;t get the IKL/N3 ideas out of my head, so I had to code it up as another output mode of <a href="http://www.w3.org/2000/10/swap/n3absyn.py">n3absyn.py</a>.</p><p>The <a href="http://lists.w3.org/Archives/Public/www-archive/2007Apr/0056.html">superman case</a> works, though it&#39;s a bit surprising that <u>rdf:type</u> gets contextualized along with superman. The <a href="http://lists.w3.org/Archives/Public/www-archive/2007Apr/thread.html#msg57">thread</a> continues with the case of &quot;if your homepage says you&#39;re vegetarian, then for the purpose of registration for this conference, you&#39;re vegetarian&quot;. I&#39;m still puzzling over Pat&#39;s explanation a bit, but it seems to make sense. </p>  <p>Along with the <a href="http://www.ihmc.us/users/phayes/IKL/SPEC/SPEC.html">IKL spec</a> and <a href="http://www.ihmc.us/users/phayes/IKL/GUIDE/GUIDE.html">IKL Guide</a>, Pat also suggests:</p> <ul><li><a href="http://ontolog.cim3.net/cgi-bin/wiki.pl?ConferenceCall_2006_10_26">conference call on IKL</a>, including a slideshow and even a recorded talk</li> <li> another <a href="http://www.ihmc.us/users/phayes/IKL/IKRIS_MV.ppt">slightly earlier powerpoint slideshow</a></li> </ul>  ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/3659594/]]></link>
    <title><![CDATA[HUAWEI go! - Installation eines USB-HSDPA/UMTS Modems auf einem Apple MacBook Pro]]></title>
    <body><![CDATA[Jetzt habe ich doch noch einen Rückruf von A1 bekommen. Der Herr hatte zwar auch keine Ahnung von Macs, aber mit vereinten Kräften ("ein paar Mitarbeiter haben Macs privat") hab' ich's jetzt zum Laufen gebracht.<br /> <br /> Also so gehts:<br /> <br /> 1. Download -> <a href="http://www.a1.net/mccard">http://www.a1.net/mccard</a> > Download Center <br /> bzw. direkt <a href="http://www.a1.net/downloadcenter/VodafoneMCInstaller2.06.05.R8.dmg">hier</a><br /> <br /> Den Installer gibt es auch auf:<br /> <a href="http://www.vodafone.de/hilfe-support/technischer-support/97001.html">http://www.vodafone.de/hilfe-support/technischer-support/97001.html</a><br /> <br /> Die Hilfe Datei auf dieser Seite ist leider nutzlos, weil nur für PCs... deswegen geht's hier weiter:<br /> <br /> 2. Installer ausführen<br /> <br /> 3. Modem einstecken<br /> <br /> 4. In dem Verzeichnis Finder > Programme > Vodafone Mobile Connect befindet sich auch eine Hilfe Datei: <br /> Anleitung_deutsch.html<br /> aber hier geht's für ungeduldige weitere:<br /> <br /> 5. Finder > Programme > Vodafone Mobile Connect > Vodafone Mobile Connect.app ausführen<br /> <br /> Das Programm versucht eine Verbindung aufzubauen, und fragt nach dem PIN<br /> <br /> Am Ende erscheint ein Fenster, dass man wie immer einfach wegklickt. Man sollte sich aber UNBEDINGT DEN DIALOG DURCHLESEN. Dort steht dann nämlich drinnen:<br /> <br /> 6. Finder > Programme > Internet-Verbindung starten<br /> <br /> 7. Dort auf das USB Modem gehen und auf "Verbinden" klicken<br /> <br /> <img title="" height="240" alt="vfmc_internet_connect" width="400" src="http://static.twoday.net/matsblog/images/vfmc_internet_connect.gif" /><br /> <br /> 8. Browser starten -> und los geht's<br /> <br /> Funkt wirklich gut!<br /> <br /> <br /> Und noch ein abschliessendes Zitat:  <blockquote>Achtung: Wenn Sie den Mac neu starten oder aus dem Ruhezustand aufwecken, müssen Sie u.U. Vodafone Mobile Connect starten und anschließend "Aktivieren" drücken, um eine Verbindung herzustellen.</blockquote>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582865/cscw-2006-collaborative-editing-20.html]]></link>
    <title><![CDATA[CSCW 2006: Collaborative editing 20 years later]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Lilly Irani & Jens Riegelsberger, User Experience team</span><br /><br />9am Mountain View, California. 6pm Zurich, Switzerland. The two of us sit separated by thousands miles, telephones tucked under our ears, talking about this blog post and typing words and edits into <a href="http://docs.google.com/" title="Writely">Google Docs</a>. As we talk about the title, we start typing into the same paragraph -- and Lilly gets a warning: "You've edited a paragraph that Jens has been editing!" Lilly stops typing so she doesn't lose her thoughts and coordinates with Jens over the phone. Then we realize "We just <a href="http://www.cscw2006.org/program_technical_tue.html#session9" title="read a paper">talked about this problem</a> at the conference we're writing about!"<br /><br />Two weeks ago four Googlers ventured north to attend <a href="http://www.cscw2006.org/" title="ACM CSCW">ACM CSCW</a> in Banff, Alberta, Canada. CSCW is ACM's conference on Computer Supported Cooperative Work and brings together computer scientists, social scientists, and designers interested in how people live their lives -- at work, at play, and in between -- with and around technology, with a focus on undestanding the design of technological systems. Topics like issues and implementation of collaborative editing are staples at CSCW.<br /><br />As this year was the conference's 20th anniversary, we had a chance to hear from many of the founders of CSCW: Irene Greif, Jonathan Grudin, Tom Malone, Judy Olson, Lucy Suchman, among others. Not surprisingly, the mood was introspective, with many speakers tracing the impact of the community over time and looking critically and constructively at the future paths the research community might take. Many sessions focused on less traditional areas of research, such as how Facebook figures into college students' school transitions and how tagging vocabularies evolve and are shaped by technology in a movie community. Jens also gave a talk on his pre-Google research on <a href="http://doi.acm.org/10.1145/1180875.1180899" title="effects of photos and voice in online gamer matchmaking systems">how photos and voice profiles affect people's choice of gaming partners</a>. And he participated in a <a href="http://myweb.cwpost.liu.edu/qzhang/cscw06/presentations.html" title="workshop exploring how people trust -- and learn to trust">workshop exploring how people trust -- and learn to trust</a> -- in online environments.<br /><br />Apart from actively taking part in the debates and Q&As, we also demo-ed Google's tools for getting things done, collaboratively or solo: <a href="http://docs.google.com/" title="Google Docs &amp; Spreadsheets">Google Docs & Spreadsheets</a> and <a href="http://www.google.com/notebook" title="Google Notebook">Google Notebook</a>. These were met with much interest, as these publicly available Google tools build on insights gained in the CSCW field over the last 20 years.<br /><br />If you're interested in these issues, you'd be a great addition to our team. Learn about available positions in <a href="http://www.google.com/support/jobs/bin/topic.py?dep_id=1091&amp;loc_id=1100" title="user experience research and design">user experience research and design</a>.<img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582865" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/198]]></link>
    <title><![CDATA[Units of measure and property chaining]]></title>
    <body><![CDATA[<p>We&#39;re long overdue for standard URIs for units of measure in the Semantic Web.</p><p>The <a href="http://www.ontologyportal.org/">SUMO stuff</a> has a nice browser (e.g. see <a href="http://sigma.ontologyportal.org:4010/sigma/Browse.jsp?kb=SUMO&amp;term=Meter">meter</a>), a nice mapping from wordnet, and nice licensing terms. Of course, it&#39;s not RDF-native. In particular, it uses n-ary relations in the form of functions of more than one argument; 1 hour is written <strong>(&amp;%MeasureFn 1 &amp;%HourDuration)</strong>. I might be willing to work out a mapping for that, but other details in <a href="http://sigmakee.cvs.sourceforge.net/*checkout*/sigmakee/KBs/Merge.kif">the KIF source</a> bother me a bit: a month is modelled conservatively as something between 28 and 31 days, but a year is exactly 365 days, despite leap-years. Go figure.</p>  <p>There&#39;s a nice <cite><a href="http://www.w3.org/TR/mathml-units/">Units in MathML</a></cite> note from November 2003, but all the URIs are incomplete, e.g. <strong>http://.../units/yard</strong> .</p>  <p>The Sep 2006 <a href="http://www.w3.org/TR/owl-time/">OWL Time</a> Working Draft has full URIs such as <strong>http://www.w3.org/2006/time#seconds</strong>, but its approach to n-ary relations is unsound, as I pointed out in a <a href="http://lists.w3.org/Archives/Public/public-swbp-wg/2006Jun/0035">Jun 2006 comment</a>.</p>  <p>Tim sketched the <a href="http://www.w3.org/DesignIssues/InterpretationProperties">Interpretation Properties</a>  idiom back in 1998; I don&#39;t suppose it fits in OWL-DL, but it appeals to me quite a bit as an approach to units of measure. He just recently fleshed out some details in <a href="http://www.w3.org/2007/ont/unit">http://www.w3.org/2007/ont/unit</a>. Units of measure are modelled as properties that relate quantities to magnitudes; for example:</p><pre> track length [ un:mile 0.25].</pre> <p>This Interpretation Properties approach allows us to model composition of units in the natural way:</p><pre>W is o2:chain of (A V).<br /></pre><p>where o2:chain is like property chaining in OWL 1.1 (<a href="http://lists.w3.org/Archives/Public/public-owl-dev/2007JulSep/0037.html">we hope</a>).</p><p>Likewise, inverse units are modelled as inverse properties: </p> <pre>s a Unit; rdfs:label &quot;s&quot;.<br />hz rdfs:label &quot;Hz&quot;; owl:inverseOf s. </pre>  <p>Finally, scalar conversions are modelled using <strong>product</strong>; for example, <strong>mile</strong> is defined in terms of meter like so:</p><pre>(m 0.0254) product inch.<br />(inch 12) product foot.<br />(foot 3) product yard.<br />(yard 22) product chain.<br />(chain 10) product furlong.<br />(furlong 8)product mile.</pre>   <p>I supplemented his ontology with some test/example cases, <a href="http://www.w3.org/2007/ont/unit_ex.n3">unit_ex.n3</a> and then added a few rules to flesh out the modelling. These rules converts between meters and miles:</p><pre># numeric multiplication associates with unit multiplication<br />{ (?U1 ?S1) un:product ?U2.<br />  (?U2 ?S2) un:product ?U3.<br />  (?S1 ?S2) math:product ?S3<br />} =&gt; { (?U1 ?S3) un:product ?U3 }<br /><br /># scalar conversions between units<br />{ ?X ?UNIT ?V.<br />  (?BASE ?CONVERSION) un:product ?UNIT.<br />  (?V ?CONVERSION) math:product ?V2.<br />} =&gt; { ?X ?BASE ?V2 }.</pre><p>Put them together and out comes:</p><pre>    ex:track     ex:length  [<br />             :chain 20.0;<br />             :foot 1320.0;<br />             :furlong 2.0;<br />             :inch 15840.0;<br />             :m 402.336;<br />             :mile 0.25;<br />             :yard 440.0 ] .</pre><p>The rules I wrote for pushing conversion factors into chains isn&#39;t fully general, but it works in cases like converting from this:</p><pre>(un:foot un:hz) o2:chain fps.<br />bullet speed [ fps 4000 ].</pre><p>to this:<br /> </p><pre>    ex:bullet     ex:speed  [<br />             ex:fps 4000;<br />             :mps 1219.2 ] .</pre><p> As I say, I find this approach quite appealing. I hope to discuss it with people working on units of measure in development of a <a href="http://www.w3.org/2007/uwa/editors-drafts/DeliveryContextOntology/2007-05-31/DCOntology.html">Delivery Context Ontology</a>. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://steve-yegge.blogspot.com/2007/02/nooglers-view-of-google.html]]></link>
    <title><![CDATA[A Noogler's View of Google]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://steve-yegge.blogspot.com/2007/02/next-big-language.html]]></link>
    <title><![CDATA[The Next Big Language]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/DataMining/~3/149379910/googlevirtual-e.html]]></link>
    <title><![CDATA[Google/Virtual Earth Wish List]]></title>
    <body><![CDATA[I've been happily watching the march of features and data encouraged by the competition to win users of 3D Earth systems. Here is a short list of next generation features that I'd love to see: Day/Night simulation. With the increasing...]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://blogs.sun.com/jag/entry/fun_with_widgets]]></link>
    <title><![CDATA[Fun with widgets]]></title>
    <body><![CDATA[<a href=http://www.ab5k.org/><img align=right src=http://files.joshy.org/files/joshy/blog/secret/fullscreen-small.png border=0></a> I've been having a lot of fun with Rob Cooper and <a href=http://weblogs.java.net/blog/joshy/>Joshua Marinacci's</a> <a href=http://www.ab5k.org/>AB5k</a> <i>Widgets for the World</i> system. It's vaguely like Mac OS X's Dashboard, Vista's Sidebar, and Yahoo's Widgets, except that it works everywhere: OS X, Solaris, Linux, Windows (Vista, XP, 2000, ...). Anywhere Java runs.  It also lets you use all the Java APIs: 3D, networking, all of it... Very cool.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/06/emacs-22-release-june-2-2007.html]]></link>
    <title><![CDATA[Emacs 22 release - June 2, 2007]]></title>
    <body><![CDATA[<p> Yes, after many many years, and several failed predictions, Emacs 22 is finally released!  Find Emacs 22.1 on <a href="http://www.gnu.org/software/emacs/">GNU's site</a> and see the list of changes in the <a href="http://www.gnu.org/software/emacs/NEWS.22.1">NEWS</a> file. The main features that I can think of: Mac OS X support, Unicode support, Cygwin support, the use of <code>~/.emacs.d/init.elc</code> instead of <code>~/.emacs</code> (for faster startup times), separate colors for active/inactive modelines, colors in terminal mode, highlighting of active minibuffers, grep highlighting, drag and drop, mouse support in xterms, <code>tramp</code> for remote file access, an included python mode, IRC, <code>org-mode</code> for keeping notes and appointments, a URL library, the super powerful calc mode, an RSS reader, better keyboard macros, <a href="http://steve-yegge.blogspot.com/2006/06/shiny-and-new-emacs-22.html">better search and replace</a>, word wrapping mode (only works with fixed width fonts), spreadsheet package, as-you-type compile checking (<code>flymake</code>), and Subversion support.  I especially like the <code>ido</code> package, which enhances buffer switching and file opening. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/147034293/introducing-sky-in-google-earth.html]]></link>
    <title><![CDATA[Introducing Sky in Google Earth]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Andy Connolly and Ryan Scranton</span><br /><br />At Google we are always interested in creating new ways to share ideas and information and applying these techniques to different research fields. Astronomy provides a great opportunity with an abundance of images and information that are accessible to researchers and indeed, anyone with an interest in the stars.  With the release of the <a href="http://earth.google.com/">Google Earth 4.2 client</a> the new Sky feature acts as a virtual telescope that provides a view of some of the most detailed images ever taken of the night sky. By clicking on the Sky button, you can explore the universe, seamlessly zooming from the familiar views of the constellations and stars, to the deepest images ever taken of galaxies and more. From planets moving across the sky to supernovae exploding in distant galaxies, Sky provides a view of a dynamic universe that we hope you will enjoy.<br /><br />In addition to allowing educators, amateurs or anyone with an interest in space to visually explore the sky, one of the most exciting aspects of Sky is its capability for research and discovery in astronomy. With the latest features in KML you can connect astronomical image and catalog databases directly to the visualization capabilities of Sky ( e.g. searching the Sloan Digital Sky Survey database for the highest redshift quasars or correlating the the infrared and optical sky to detect the presence of dust within our Galaxy). From releasing new data about the latest discovery of planets around nearby stars to identifying the host galaxy of a gamma ray burst the possibilities are endless. Examples of how to build research applications such as a view of the microwave background emission from the remnant of the Big Bang can be found in the <a href="http://earth.google.com/gallery"> Google Earth Gallery</a>.<br /><br />It has been a lot of fun creating Google's first astronomical observatory. Go check it out; explore the sky from the comfort of your home; If you find something interesting let us know on the <a href="http://bbs.keyhole.com/ubb/postlist.php/Cat/0/Board/sky/"> Sky section</a> of the Google Earth Community, or <a href="http://code.google.com/apis/kml/documentation/"> author your own </a> KML applications to to share your discoveries and data with everyone else. You can also find more Sky resources on our <a href="http://earth.google.com/sky/skyedu"> website.</a><img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/147034293" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582878/making-difference.html]]></link>
    <title><![CDATA[Making a difference]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Peter Norvig, Director, Google Research</span><br /><br />We've been asked what Google Research is like, and we thought the best way to answer is with a blog. First let me say that we're not like the stereotype of a Research Lab: the place where you hide all the Ph.D.s to keep them away from the engineers who do the <i>real</i> work.<br /><br />We're different for two reasons.<br /><br />First, Google Engineering is different: it contains many world class Ph.D. researchers. For example, the top download from the ACM digital library last month was <a href="http://labs.google.com/papers/gfs-sosp2003.pdf"><i>The Google File System</i></a>, written by Google Ph.D.s who happen to be "engineers" (although in their previous jobs, two were at research labs and one was a grad student). This week's <a href="http://www.nature.com/nature/journal/v439/n7078/full/439787a.html">cover story</a> in <i>Nature</i> describes work by Google Earth engineers in partnership with colleagues at CMU and NASA Ames.<br /><br />Second, Google Research is different: we also have lots of world class Ph.D.s (and a few non-Ph.D.s). Yes, we write papers and prove theorems, but we're all here because we want to discover and build useful things that will change the world.<br /><br />So who are we? We're experts in machine translation who came here to work with the largest corpus of bilingual and monolingual text ever assembled. We're experts in machine learning algorithms who came to work on one of the world's largest computing clusters. We're researchers in natural language, vision, security, human-computer interaction, and a dozen other fields who came to help a user base of hundreds of millions of people. And we're working side by side with the engineering team -- not in a separate building or site. Some of us are launching projects on google.com this week and wearing pagers, and some of us are working on goals for the year 2020.<br /><br />So we're different, and we like it that way. We hope you do too, and hope that you'll learn more about us from this blog.<img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582878" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582859/drink-from-firehose-with-university.html]]></link>
    <title><![CDATA[Drink from the firehose with University Research Programs]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Michael Lancaster and Josh Estelle, Software Engineers</span><br /><br />Whenever we talk to university researchers, we hear a consistent message: they wish they had Google infrastructure. In pursuit of our <a href="http://www.google.com/intl/en/corporate/index.html">company mission</a>, we have built an elaborate set of systems for collecting, organizing, and analyzing information about the web. Operating and maintaining such an infrastructure is a high barrier to entry for many researchers. We recognize this and want to share some of the fruits of our labor with the research community. Today, in conjunction with the <a href="http://www.google.com/events/facultysummit2007/agenda.html">Google Faculty Summit</a> we're making two services available under the new University Research Programs, namely access to web search, and machine translation.<br /><br /><a href="http://research.google.com/university/search/">University Research Program for Google Search</a><br /><br />Google is focused on the success of the web, which is essentially an organism in and of itself with extremely complex contents and an ever-evolving structure. The primary goal of the University Research Program for Google Search is to promote research that creates a greater understanding of the web. We want to make it easy for researchers to analyze millions of queries in a reasonably short amount of time. We feel that such research can benefit everyone. As such, we've added a proviso that all research produced through this program must be published in a freely accessible manner.<br /><br /><a href="http://research.google.com/university/translate/">University Research Program for Google Translate<br /></a><br />The web is a global information medium with content from many cultures and languages. In order to break the language barrier, many researchers are hard at work building high quality, automatic, machine translation systems. We've been successful with our own statistical machine translation system, and are now happy to provide researchers greater access to it. The University Research Program for Google Translate provides researchers access to translations, including detailed word alignment information and lists of the n-best translations with detailed scoring information. We hope this program will be a terrific resource to help further the state of the art in automatic machine translation.<br /><br />The web holds a wealth of untapped research potential and we look forward to seeing great new publications enabled by these new programs. Go ahead - <a href="http://research.google.com/university/">surprise us</a>!<br /><br />By the way, since many researchers lead a double life as educators, we want to let you know about a site that recently launched: <a href="http://code.google.com/edu/">Google Code for Educators</a>, designed to make it easy for CS faculty to integrate cutting-edge computer science topics into their courses. Check it out.<img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582859" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://www.flog.in/stories/4067156/]]></link>
    <title><![CDATA[setting off]]></title>
    <body><![CDATA[Die Sonne scheint, die Badehose haben wir eingepackt, heute FR um 16h fahren wir in <a href="http://www.flog.in/stories/3759905/">diesem Schlitten</a> in Richtung Osten...Juhui! Die Mobilnummer für die nächsten 10 Tage in Austria: <ul>   <li>+436764359376</li> </ul> ...ausnahmsweise hier im Netz. SEE YOU!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://reddit.com/goto?rss=true&id=1skex]]></link>
    <title><![CDATA[ Intel to slash prices for quad-core server processors in July]]></title>
    <body><![CDATA[<a href="http://digitimes.com/mobos/a20070521PD201.html">[link]</a><a href="http://reddit.com/info/1skex/comments">[more]</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://programming.reddit.com/goto?rss=true&id=2isv9]]></link>
    <title><![CDATA[ Windows Update updating without permission!]]></title>
    <body><![CDATA[<a href="http://cubicspot.blogspot.com/2007/08/windows-update-updating-without.html">[link]</a><a href="http://programming.reddit.com/info/2isv9/comments">[more]</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://www.flog.in/stories/4184521/]]></link>
    <title><![CDATA[<a href="http://www.yxaiio.com">http://www.yxaiio.com</a>]]></title>
    <body><![CDATA[Am nächsten Wochenende wäre ich gerne nach Spanien geflogen, einerseits weil ein guter Freund von mir bei einem tollen Spektakel in Granada mitwirkt (Videos von der Performance <a href="http://videos.ideal.es/informaciondecontenido.php?con=1468">hier</a> und <a href="http://videos.ideal.es/informaciondecontenido.php?con=1327">hier</a>)<br /> Leider keinen Rückflug am Sonntag in der Economy bekommen.<br /> Die zweite interessante Geschichte für Nachtschwärmer in Spanien: <a href="http://www.yxaiio.com">YXAIIO</a> Ein Team aus Österreich tourt seit einigen Wochen durch alle angesagten Clubs, promotet wird das ganze übers WEB, <a href="http://www.myspace.com/yxaiio">myspace Profil </a>, Fotos auf <a href="http://flickr.com/photos/yxaiio">FLICKR</a> und Videos auf <a href="http://www.youtube.com/yxaiio">YOUTUBE</a> sind da natürlich Pflicht. Das "seeding" in Spanien läuft auf Hochtouren, der <a href="http://www.econectados.com/2007/08/yxaiio-tour-de-fiesta-nocturna-al-estilo-20/">Beitrag von eConectados</a> auf Spanisch. Kurz: Musik zum voll abtanzen!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/07/flapper-fiasco.html]]></link>
    <title><![CDATA[flapper fiasco]]></title>
    <body><![CDATA[Siobhan's birthday party was on Saturday.  She always throws these elaborate costume parties.  The first one I attended was three years ago -- an 80s theme, with prizes for the best costumes.  This is how we dressed, (photo from 2004):<br /><br /><img src = "http://niniane.smugmug.com/photos/7352086-S.jpg"><br /><br />It took 45 minutes to blow-dry my hair into that hairdo, and I still didn't win a prize.<br /><br />This year's evite said to pick a costume from any decade and dance style of our choice, such as 1780s rain dance, or 1950s sixth grade dance.  <br /><br />I chose 1920s flapper.  Here is an example of what flappers look like, from google images:<br /><br /><img src = "http://www.valdosta.edu/~mssteven/flapper.jpg"><br /><br />I went to a costume shop on Saturday.  Tom was in the city hanging out with me, so he accompanied me.<br /><br /><img src = "http://niniane.smugmug.com/photos/175917304-S.jpg"><br /><br />While there, he took the opportunity to goof around:<br /><br /><img src = "http://niniane.smugmug.com/photos/175917315-S.jpg"><br /><br />I told the shop owner of my costume idea.  He had all the gear.  "I'll flap you up!" he said.<br /><br /><img src = "http://niniane.smugmug.com/photos/175917361-S.jpg"><br /><br />I bought everything he suggested: feathered headdress, black-and-white feather boa, flapper dress -- plus fishnet stockings not included in the picture.  Flapper was sure to be a popular costume idea, and it was likely I would not be the only one at the party.  I decided to go all out.  <br /><br />I had to ensure I would be the best flapper, or at least not embarrass myself with the crowd of five or six other flappers.<br /><br />At home Saturday night, I googled for "flapper makeup".  I carefully applied smoky eye powder, sequined eyelashes, and kohl eyeliner.<br /><br />...<br /><br />At 11:30pm, I took a cab down to the Orbit Room.  The cab driver didn't bat an eyelash at my outfit.  This is San Francisco after all.<br /><br />I walked into the bar, and ... I thought I must be at the wrong place.  NOT A SINGLE OTHER PERSON WAS IN COSTUME.<br /><br />Siobhan came up to me, in a strapless black dress.  She opened her mouth to say something, but only gibberish came out because she was laughing so hard.<br /><br />I watched her doubled over in giggles.  "How did this happen?" I said.<br /><br />She stopped laughing long enough to say, "No one else took the evite seriously."<br /><br />"I can see that," I said.  "Why not?"<br /><br />Rose turned around from the bar and spotted me.  She came over in a little black dress.  "Did you just come from a costume party?" she asked.<br /><br />"NO!" I said.  <br /><br />"Then why are you dressed like that?"<br /><br />I stared at her.  "Did you not get the same evite that I did?"<br /><br />"Oh."  Her eyes widened.  "You got dressed up for <i>this party</i>?"<br /><br />"Yes!  Why didn't you?"<br /><br />"I was lazy." <br /><br />That was the same excuse given by every other partygoer, as they looked me up and down, and then commended me on how it was wonderful that I got into the spirit of the costume and how I should not feel out of place at all.<br /><br />A picture of the ridiculousness:<br /><br /><img src = "http://niniane.smugmug.com/photos/175917392-M.jpg"><br /><br />In the movie <u>Legally Blonde</u>, there's a scene where Reese Witherspoon dresses as a playboy bunny for a costume party.  She discovers upon arrival that it's a regular party, not a costume party.<br /><br />I never understood why she walked inside, bunny ears and lingerie and all, instead of turning around to go home.<br /><br />Now I understand.  When you spend an hour putting on every last touch of your costume, getting your eyelashes <i>just so</i> to match the damn flapper photo, you are not going to just go home!   <br /><br />Even if your friends decide at midnight to move to a dive bar with a jukebox, where the other patrons are wearing rock-and-roll T-shirts and playing pool.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/08/geek-conversations-about-love-part-4-in.html]]></link>
    <title><![CDATA[geek conversations about love (part 4 in a series)]]></title>
    <body><![CDATA[Over instant messenger:<br /><br /><font color=blue>ozzir:</font> when is your talk?<br /><font color=red>niniane:</font> 7pm<br /><font color=blue>ozzir:</font> oh, i'm taking my gf to dinner, for her birthday<br /><font color=red>niniane:</font> that's nice!  where are you taking her?<br /><font color=blue>ozzir:</font> [url of restaurant]<br /><font color=red>niniane:</font> the food looks good<br /><font color=blue>ozzir:</font> i was going to propose<br /><font color=red>niniane:</font> WHAT?<br /><font color=red>niniane:</font> really????? That's so awesome!!<br /><font color=red>niniane:</font> omg<br /><font color=red>niniane:</font> i'm so excited for you!<br /><font color=blue>ozzir:</font> ... that we stop celebrating birthdays<br /><font color=red>niniane:</font> god damn it<br /><font color=blue>ozzir:</font> i was going to propose that we stop getting each other gifts for birthdays<br /><font color=red>niniane:</font> :(<br /><font color=blue>ozzir:</font> sorry, i can't stop laughing<br /><font color=blue>ozzir:</font> hahahahaha]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://googlemac.blogspot.com/2007/08/non-secrets-of-wwdc.html]]></link>
    <title><![CDATA[(Non-)Secrets of WWDC]]></title>
    <body><![CDATA[by Mike Morton, Mac Team Engineer<br /><br />Each summer for more than 25 years, thousands of developers have flocked to Northern California to attend Apple’s Worldwide Developer Conference (which everyone calls WWDC). It’s a week of lectures and labs, schmoozing and socializing, and it concentrates Apple geekery on a scale unmatched by anything else.<br /><br />Recently most of Google’s Mac developers attended WWDC at San Francisco’s <a href="http://www.moscone.com/">Moscone Center</a>. As usual, we learned a lot of cool new stuff and, also as usual, Apple asked everyone not to talk about the stuff we learned: only the Steve Jobs keynote speech is public information. So instead, I’d like to tell you about the experience of attending the keynote and the rest of WWDC.<br /><br /><br /><span style="font-weight: bold;">The build-up</span><br /><br />So what’s the attraction? Isn’t all of Apple’s developer info available on the web? Yes, eventually, it is. But WWDC offers early information, in depth and in person. Some presentations are quite small and informal, and there are labs staffed by Apple engineers where you can ask questions or ask for help.<br /><br />On top of that, there’s the social component. We all know the cliche that engineers are asocial, but the truth is that most of us really aren't. WWDC gives everyone a chance to see old school friends, former colleagues, and meet cyber-friends and -colleagues for the first time. I tend to look at nametags as people whiz by, just in case I spot a name I recognize under a face I’ve never seen.<br /><br />There’s organized socializing, too, in the form of WWDC-sponsored parties and events held by companies, organizations, and individuals. Many folks believe that the technology industry exists to give us all a chance to drink beer, and they take good advantage of the opportunity.<br /><br />Well before the conference starts, Apple posts a detailed schedule on its website. The schedule usually has some slots labeled TBA (to be announced). This usually means that Steve Jobs is going to tell us some big news on Monday, and those sessions later in the week will fill in the details. I plan my schedule in advance, meticulously choosing talks and other sessions like a first-year college student trying to plan all four years in advance. It’s fun, but nearly pointless, because you can't know what's in the TBA sessions.<br /><br /><br /><span style="font-weight: bold;">Lining up</span><br /><br />Experienced attendees fly in a few days before to shake the jet lag. This time, I didn’t: I walked into my hotel in the city about one minute past midnight on the first day of the conference. Still, I didn’t need my alarm to get up early, because the first day of WWDC is a big deal. I guess everyone else thought so, too, because when I arrived at Moscone Center at 7:00 a.m., the line outside was two blocks long and growing fast.<br /><br />They let us in without too much of a wait, and registration went quickly. Everyone gets a badge, and tries not to lose it during the week — security folks really do check them every time you come in.<br /><br />Then we line up again. There’s only one event the first morning: Steve Jobs’ keynote. Waiting two to three hours in line means lots of time to reconnect with old friends and exchange business cards with new ones. Sitting up front is a big deal. When the doors finally open, some folks want those seats badly enough that they will sprint the entire length of the auditorium. Since some of them don’t get much exercise, let alone running while lugging a laptop, the resulting race isn’t exactly <a href="http://en.wikipedia.org/wiki/Wide_World_of_Sports_%28US_TV_series%29#Introduction">the human drama of athletic competition</a>. For me, this is when WWDC really begins, and I like to call it The Running Of The Geeks.<br /><br /><br /><span style="font-weight: bold;">The Keynote</span><br /><br />Nobody rallies the troops like Steve Jobs, and… this year's keynote began with nobody like Steve Jobs. It was John Hodgman (“I’m a PC” in <a href="http://www.apple.com/getamac/ads/">Apple’s ads</a>) on video, claiming to be Steve Jobs, telling us that Apple was disbanding and… well, you can <a href="http://www.youtube.com/watch?v=Bf5qZrFfQFg">watch it for yourself</a>.<br /><br />When the real Steve walked on stage, he wasted no time in telling us that Apple was doing well. He showed some upcoming games, previewed a bunch of features of <a href="http://www.apple.com/macosx/leopard/">Leopard…</a> and then showed Safari running on Windows. That last was my favorite, not for the technical or marketing implications, but for the moment when he sat down at a Windows box, paused, and said (almost to himself) “This is odd”.<br /><br />After the keynote, everyone headed to lunch, then to a “Mac OS X State of the Union” talk (the only one in that time slot), a survey of major changes affecting developers. By the end of Monday, regular sessions have begun, and I try hard to pay attention as I realize I’m at the beginning of a week full of new things to absorb.<br /><br /><br /><span style="font-weight: bold;">Entertainment</span><br /><br />There are things to do nearly every evening: Monday night was a reception hosted by <a href="http://developer.apple.com/">Apple Developer Connection</a>. Tuesday night was the <a href="http://developer.apple.com/ada/">Apple Design Awards</a>, which left a lot of people Wednesday morning saying “Did you see that cool <a href="http://worrydream.com/bartwidget/">BART widget</a>?!”. Later that evening was <a href="http://en.wikipedia.org/wiki/Stump_the_experts">Stump The Experts</a>, a sort of quiz show featuring impossibly hard tech trivia questions (but looking on the web for answers isn’t cheating). Thursday night is a big party — for many years it was held on the Apple campus, but this year it was outdoors in San Francisco.<br /><br />For my money, the best entertainment of the week is Apple engineer James Dempsey, who performs original songs about Apple’s latest technology. I still remember laughing through <a href="http://www.youtube.com/watch?v=YYvOGPMLVDo">Model View Controller</a> when he did it live. This year I missed his two new songs, <a href="http://www.youtube.com/watch?v=X0AcrL6vHE8">I love View</a> and <a href="http://www.youtube.com/watch?v=4t7fNzwNgzM">Release Me</a>. If you don’t think these performances are hilarious — well, maybe you’re not nerdy enough (take that as you will).<br /><br /><br /><span style="font-weight: bold;">Eventually it's Friday</span><br /><br />WWDC always feels like a long week, but it's great fun. When it ended, I wanted to get home and start working on cool Google products using everything new in OS X!<br /><br />Getting into the shuttle from the hotel to SFO, I realized all four of us were carrying WWDC bags. Somehow we managed to not get them mixed up as we rushed for our flights. Now that might have been interesting.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.feedburner.com/~r/blogspot/gJZg/~3/144582876/experimental-study-of-p2p-voip.html]]></link>
    <title><![CDATA[An experimental study of P2P VoIP]]></title>
    <body><![CDATA[<span class="byline-author">Posted by Neil Daswani & Ravi Jain, Google; and Saikat Guha, Cornell University</span><br /><br />VoIP (Voice-over-IP) systems are one of the fastest growing means of communication on the Internet, enabling free or low-cost phone calls.  But to date, researchers have had little data to work with to learn how to build VoIP systems better.  Some of these systems are proprietary, and obtaining data about their operational characteristics has been particularly challenging. For instance, even though the Skype network has tens of millions of users, it has been hard for researchers to benefit from its commercial success.<br /><br />Data was collected from a Skype 'supernode' running at Cornell.  Skype is a Peer-to-Peer (P2P) system in which clients (for example, a home user's PC) communicate directly to exchange voice packets with other clients (also called peers).  However, their communication is facilitated by special peers called supernodes that can allow the peers to connect even if they are behind firewalls or other network elements such as NATs (Network Address Translators).  P2P in Skype already connects millions of users behind NATs today.  Prior to our research, not much has been known about how Skype users and clients behave, and how supernodes are selected or what kinds of demands they place on the network they reside in.<br /><br />We learned a couple things from the data.  For example, we found that Skype users typically keep their client software open during the workday, as opposed to users of file-sharing P2P systems (such as KaZaa) where users typically join and leave the network with much greater frequency.  In further contrast to P2P file-sharing applications, which typically tend to be bandwidth hogs, Skype clients and supernodes use relatively little bandwidth and CPU even when they relay VoIP calls. So this means you can run Skype without having it slow down your Internet connection.<br /><br />You'll find even more results discussed in <a href="http://www.cs.cornell.edu/%7Esaikat/skype/">the paper</a>.  In addition to better P2P systems, researchers can use the data to design a better Internet.  Based on what we've learned, perhaps researchers can design a next-generation P2P-friendly Internet that is commercially viable.<img src="http://feeds.feedburner.com/~r/blogspot/gJZg/~4/144582876" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/180]]></link>
    <title><![CDATA[A design for web content labels built from GRDDL and rules]]></title>
    <body><![CDATA[<p>In <a href="http://chatlogs.planetrdf.com/swig/2007-01-22.html#T19-44-45">#swig discussion</a>, Tim mentioned he did <a href="http://www.w3.org/DesignIssues/TagLabel">some writing on labels and rules and OWL</a> which prompted me to flesh out some related ideas I had. The result is a <a href="http://www.w3.org/2007/01/lbl22/">Makefile and four tests with example labels</a>. One of them is:</p><blockquote> <p>All resources on example.com are accessible for all users and meet WAI AA guidelines except those on visual.example.com which are not suitable for users with impaired vision.</p> </blockquote>  <p>I picked an XML syntax out of the air and wrote visaa.lbl:  </p><pre>&lt;label<br />    xmlns=&quot;<a href="http://www.w3.org/2007/01/lbl22/label">http://www.w3.org/2007/01/lbl22/label</a>&quot;<br />    xmlns:mobilebp=&quot;http://www.w3.org/2007/01/lbl22/mobilebp@@#&quot;<br />    xmlns:wai=&quot;http://www.w3.org/2007/01/lbl22/wai@@#&quot;<br />    &gt;<br />  &lt;scope&gt;<br />    &lt;domain&gt;example.com&lt;/domain&gt;<br />    &lt;except&gt;<br />      &lt;domain&gt;visual.example.com&lt;/domain&gt;<br />    &lt;/except&gt;<br />  &lt;/scope&gt;<br />  &lt;audience&gt;<br />    &lt;wai:AAuser /&gt;<br />  &lt;/audience&gt;<br />&lt;/label&gt;<br /></pre>  <p>And then in testdata.ttl we have:  </p><pre>&lt;http://example.com/pg1simple&gt; a webarch:InformationResource.<br /> &lt;http://visual.example.com/pg2needsVision&gt; a<br />webarch:InformationResource.<br /> :charlene a wai:AAuser.<br /></pre>  <p>Then we run the test thusly...</p>  <pre>$ make visaa_test.ttl<br />xsltproc --output visaa.rdf label2rdf.xsl visaa.lbl<br />python ../../../2000/10/swap/cwm.py visaa.rdf lblrules.n3 owlAx.n3<br />testdata.ttl \<br />                --think --filter=findlabels.n3 --n3 &gt;visaa_test.ttl<br /></pre>  <p>and indeed, it concludes: </p><pre>    &lt;http://example.com/pg1simple&gt;     lt:suitableFor :charlene .<br /></pre>  <p>but doesn&#39;t conclude that pg2needsVision is OK for charlene.</p>    <p>The .lbl syntax is RDF data via <a href="http://www.w3.org/2003/g/data-view">GRDDL</a> and label2rdf.xsl. Then owlAx.n3 is rules that derive from the RDFS and OWL specs; i.e. stuff that&#39;s already standard. As Tim wrote, A label is a fairly direct use of OWL restrictions. This is very much the sort of thing OWL is designed for. Only the lblrules.n3 bit goes beyond what&#39;s standardized, and it&#39;s written in the N3 Rules subset of <a href="http://www.w3.org/DesignIssues/Notation3">N3</a>, which, assuming a few built-ins, <a href="http://lists.w3.org/Archives/Public/public-rif-wg/2006Sep/0071">maps pretty neatly to recent RIF designs</a>.</p><p>A <a href="http://clarkparsia.com/weblog/2007/01/21/snow-sparql-and-soemthingelsethatbeginswiths/">recent item from Bijan</a> notes a <a href="http://platon.escet.urjc.es/~axel/publications/GIA-TR-2006-11-28.pdf">SPARQL-rules design</a> by Axel; I wonder if these rules fit in that design too. I hope to take a look soonish.  </p>  ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://piaw.blogspot.com/2007/07/mike-pouts-at-bludenz-train-station.html]]></link>
    <title><![CDATA[Mike pouts at the Bludenz Train Station.]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://headius.blogspot.com/2007/05/big-plans.html]]></link>
    <title><![CDATA[Big Plans]]></title>
    <body><![CDATA[I just came across this amusing entry from an old, now-defunct blog of mine on LiveJournal.<br /><br />The last line pretty much says it all. I must have been really frustrated with my job at the time:<br /><blockquote><a href="http://headius.livejournal.com/14012.html">Someone should pay me to sit at home and do great things.</a></blockquote>(If you don't get the joke: I now work for Sun Microsystems, at home, on JRuby...so if JRuby's ever considered a "great thing", the prophecy will be fulfilled.)<br /><br />And yes, I've seen the <a href="http://money.cnn.com/magazines/fortune/fortune_archive/2007/05/28/100033867/">Microsoft news</a>. I'd hate to be an OSS developer or apologist at Microsoft today. If Sun did something like this I'd resign.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://blog.alexbosworth.net/article/a_new_weblog]]></link>
    <title><![CDATA[A New Weblog]]></title>
    <body><![CDATA[<p>Welcome to the new Weblog. It&#8217;s about thousand million times better than the old weblog. This one is powered by &#8216;songshu&#8217; &#8211; a weblog engine designed and coded by <a href="http://chipmunkninja.com">Marc</a>.</p>   <strong>Cool things about songshu</strong>  <ul>  <li>It rocks</li>   <li>It uses Textile for editing</li>   <li>The will of the warrior</li>  </ul>    <p>In my new weblog you never know what you are going to get. I&#8217;m going to write about a wide range of fascinating topics, such as the fact that I have a new weblog powered by songshu.</p>    <h2>Tube</h2>    <p>Here&#8217;s another topic: good television to enjoy. I would recommend you watch &#8220;Flight of the Conchords&#8221;. It&#8217;s great. It&#8217;s a musical comedy show on <span class="caps">HBO</span>.</p>    <p>Here&#8217;s a clip:</p>   <object width="425" height="350"><param name="movie" value="http://www.youtube.com/v/N7vgY0yEs9Y"></param><param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/N7vgY0yEs9Y" type="application/x-shockwave-flash" wmode="transparent" width="425" height="350"></embed></object>   <p>If you don&#8217;t have <span class="caps">HBO</span> or hate the media industrial establishment like I do, just download the episodes from <a href="http://www.eztvefnet.org/index.php?main=show&#38;id=559">eztv</a></p>    <h2>Pitures</h2>    <p>The other thing my new blog will have is pictures, as I now am the owner of a camera device. I used pictures in a previous <a href="http://static.alexbosworth.net/i_live_in_china.html">interim blog post</a> to offer a glimpse of my new jet setting lifestyle living in Beijing, and I&#8217;m pleased with the concept of picture posting. I&#8217;m still working on the proper venue for my photo gallery management, and <a href="http://flickr.com">flickr</a> is right out because it&#8217;s banned in China.</p>    <p>Here&#8217;s a try at using Facebook&#8217;s image thing, Facebook claims they are the number one image management website in the world and I like their Java uploader thing a lot. The first picture is of a lamp.</p>    <p><a href='http://www.facebook.com/album.php?aid=3430&#38;l=b419a&#38;id=500434826'><img src='http://photos-826.ll.facebook.com/photos-ll-sf2p/v110/71/110/500434826/s500434826_90568_2204.jpg'></a></p>    <p>I feel dorky taking pictures and being in pictures but the results can be good so I&#8217;ll work on more of those.</p>    <h2>Applications</h2>    <p>I now have a Virtual Private Server. That will enable me to create little applications. I will most likely announce these applications on this blog.</p> <img src='http://blog.alexbosworth.net/view/a_new_weblog' height='0' width='0'/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://arved.priv.at/weblog/archives/2007/05/still_alive.html]]></link>
    <title><![CDATA[Still alive...]]></title>
    <body><![CDATA[<p>One month without an entry, but i am still alive.<br /> Busy at work and enjoying the presummer.</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://paulbuchheit.blogspot.com/2007/05/amazingly-bad-apis.html]]></link>
    <title><![CDATA[Amazingly bad APIs]]></title>
    <body><![CDATA[I actually don't hate the Java language (at least it's killing off c++), but every time I use it I'm blown away by how hostile the APIs are.<br /><br />For example, let's say that we want to scale an image file. That's a fairly common thing to do, so it's probably only one line of code, right? Wrong. It turns out that they haven't even bothered to include a reasonable API for doing this. Instead, you have to take the awkward APIs that they do provide, and then write about <a href="http://today.java.net/pub/a/today/2007/04/03/perils-of-image-getscaledinstance.html">50</a> lines of code to do what you really want. This <a href="http://today.java.net/pub/a/today/2007/04/03/perils-of-image-getscaledinstance.html">article</a> that explains what the "right" way is. <br /><br />Once the image is scaled, you'll want to save the smaller version too. Luckily, that's only a few lines of code. Of course that's only if you're happy with the default settings -- what if you want to use a different JPEG quality level? Here are the <a href="http://java.sun.com/javase/6/docs/api/javax/imageio/package-summary.html">docs</a> -- see if you can figure it out (the solution involves 4 additional classes).<br /><br />For comparison, here is some Python code which loads an image, scales it, and then saves it at a non-default quality level:<pre>from PIL import Image<br /><br />i = Image.open("/tmp/c.jpg")<br />i.thumbnail([220, 133], Image.ANTIALIAS)<br />i.save('/tmp/c-thumb.jpg', quality=90)</pre>Doing the same thing in Java requires closer to 100 lines, not because the language is bad, but because the APIs are terrible.<br /><br />How did this happen? My theory is that the people who made the Java APIs just sat in a room making stuff up (and possibly drawing UML diagrams). Meanwhile, the Python people were actually writing software and creating libraries to make their life easier.<br /><br /><span style="font-weight:bold;">There is a lesson in this</span>: If you are building a platform, you should also be writing applications for that platform, and the platform should be designed to make life very simple for those apps. It's my understanding that Ruby on Rails came out of a process such as this (they extracted the common tasks out of their web apps). If you just sit around staring at the clouds while writing your APIs, you'll probably end up with something bad.<br /><br />I also have a second theory about what happened to Java: it attracted people who like to write piles of code filled with endless abstractions. When I worked at Google, one of the engineers on our Java mailing list suggested that we ban the keyword 'new'! I was puzzled by this suggestion, but after a little research I learned that one of the hot fashions in Java is to use <a href="http://en.wikipedia.org/wiki/Factory_pattern">factories</a> instead of 'new' (not that factories are bad, but "sometimes good" does not imply "always best"). Better yet, you don't reference the factories directly (not enough abstraction), instead you have some framework that injects the factories into your classes according to what is written in an XML configuration file. In this way, you can make your code perfectly unreadable, but more importantly, it is very abstract.<br /><br /><br /><span style="font-weight:bold;">Update</span>: Several people have interpreted this post to mean that I'm opposed to the factory pattern. That is, of course, silly. Factories, when the situation calls for them, are fine. For example, the python code above is using a factory. What harms code is the blanket application of the factory pattern in every possible situation. To put this another way, Tabasco sauce is delicious on eggs, but I still don't put it on ice cream. (but don't think I haven't tried!)<br /><br /><span style="font-weight:bold;">Update Two</span>: It's not about Java, really! <span style="font-weight:bold;">My point here is that your APIs should emerge from the needs of real applications, and that they should make common tasks super-easy.</span> Bad APIs are common in many languages, Java just happens to be the language that I'm using right now.<br /><br />Why didn't I simply hunt down+install some third-party image library? Because that's   a hassle too (probably more work than copying code off of some web page), and all I want is to generate nice looking thumbnails.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
    </votes>
    <link><![CDATA[http://gafter.blogspot.com/2006/10/concurrent-loops-using-java-closures.html]]></link>
    <title><![CDATA[Concurrent Loops Using Java Closures]]></title>
    <body><![CDATA[The <span style="FONT-FAMILY:Courier New">java.util.concurrent</span> package has very nice support for writing concurrent loops. I used it recently to improve the performance of some code in the <a href="http://www.google.com/calendar" target="blank_" title="Google Calendar">Google Calendar</a> Server. In the Calendar Server, we have a class representing an event on a calendar. The following method on an event computed the set of attendees to the event. The old code looked something like this:<br/> <br/> <div style="MARGIN-LEFT:40px"> <span style="FONT-FAMILY:Courier New">public Collection&lt;Principal&gt; getAttendees() {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; List&lt;Principal&gt; result = new ArrayList&lt;Principal&gt;();</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; for (EventResponse r : getResponses()) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New"></span><span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="FONT-FAMILY:Courier New">if (r.mayAttend()) {<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="FONT-FAMILY:Courier New">result.add(r.getAttendee());<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><span style="FONT-FAMILY:Courier New"></span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; }</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; return result;</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">}</span><br/> </div> <br/> The problem with this code, it turned out, was that <span style="FONT-FAMILY:Courier New">getAttendee()</span> has to talk to a remote server to look up the <span style="FONT-FAMILY:Courier New">Principal</span> in a database, and although the remote server is very fast, it is far enough away that there is some latency. Since this loop is sequential, when there are many responses it spends most of its time waiting for a response from the remote server, over and over again. Consequently the call to <span style="FONT-FAMILY:Courier New">getAttendees()</span> was very slow for events with many attendees. One solution to this kind of problem would be to send a single batch request, and that is probably the best long-term solution to the problem, but the server in this case doesn't yet know how to handle batch requests. So our fix to the immediate performance problem was to use <span style="FONT-FAMILY:Courier New">java.util.concurrent</span> and make the requests in parallel; this did speed things up significantly:<br/> <br/> <div style="MARGIN-LEFT:40px"> <span style="FONT-FAMILY:Courier New">public Collection&lt;Principal&gt; getAttendees() {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; final List&lt;Principal&gt; result = new ArrayList&lt;Principal&gt;();</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; CompletionService&lt;Void&gt; ecs =</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new ExecutorCompletionService&lt;Void&gt;(threadPool);</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; for (final EventResponse r : getResponses()) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ecs.submit(new Callable&lt;Void&gt;() {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Void call() {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (r.mayAttend()) {<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</span><span style="FONT-FAMILY:Courier New"></span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Principal attendee = r.getAttendee();</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; synchronized (result) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; result.add(attendee);</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; }</span><span style="FONT-FAMILY:Courier New"></span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; } catch (Throwable ex) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LOGGER.log(Level.SEVERE, "Uncaught Exception", ex);<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br style="FONT-FAMILY:Courier New"/> </span> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; }</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; // wait for the tasks to complete</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; for (final EventResponse r : getResponses()) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*discard*/ ecs.take().get();</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (InterruptedException ex) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new AssertionError(ex); // shouldn't happen</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (ExecutionException ex) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LOGGER.log(Level.SEVERE, "Uncaught Exception", ex);</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; }</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; return result;</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">}</span><br/> </div> <br/> When I find code like this I have a few reactions. First, my eyes glaze over at the complexity. Then, if I'm interested, I look carefully at the code to try to understand it. After all, I'm likely to want to do something like this again someday. Finally, I bookmark it so I can add it to my bag of tricks.<br/> I don't think writing a concurrent loop should have to be so complex. Here is what I would like to have written:<br/> <br/> <div style="MARGIN-LEFT:40px"> <span style="FONT-FAMILY:Courier New">public Collection&lt;Principal&gt; getAttendees() {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; List&lt;Principal&gt; result = new ArrayList&lt;Principal&gt;();</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; for eachConcurrently(EventResponse r : getResponses(), threadPool) {<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (r.mayAttend()) {<br style="FONT-FAMILY:Courier New"/> </span> <span style="FONT-FAMILY:Courier New"></span><span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Principal attendee = r.getAttendee();</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; synchronized (result) {</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; result.add(attendee);<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br style="FONT-FAMILY:Courier New"/> </span> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><span style="FONT-FAMILY:Courier New"></span><span style="FONT-FAMILY:Courier New"></span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; }</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; return result;</span><br style="FONT-FAMILY:Courier New"/> <span style="FONT-FAMILY:Courier New">}</span><br/> </div> <br/> You might think that in order to do this kind of thing we would need to add a concurrent looping statement to the language. Actually, it is possible to add the concurrent looping construct as a library method if you have closures in the language! It isn't trivial to write, but that's why we have people like Doug Lea in the world. An API like this "<span style="FONT-FAMILY:Courier New">for eachConcurrently</span>" thing should be written once by an expert and placed into the JDK for everyone to use.<br/> <br/> What should happen if you use <span style="FONT-FAMILY:Courier New">continue</span>, <span style="FONT-FAMILY:Courier New">break</span>, or <span style="FONT-FAMILY:Courier New">return</span> within the body of this loop, or <span style="FONT-FAMILY:Courier New">throw</span> an exception? The <span style="FONT-FAMILY:Courier New">continue</span> case is easy: it just completes execution of that one iteration, and the other iterations proceed on their merry way. The semantics of <span style="FONT-FAMILY:Courier New">break</span> are a bit subtle, but obvious once you realize this is supposed to act like a loop: it completes the current iteration and cancels any other iterations that have not completed, and control returns to the caller of <span style="FONT-FAMILY:Courier New">for eachConcurrently</span>. Handling a <span style="FONT-FAMILY:Courier New">return</span> statement is similar: it cancels any uncompleted iterations and returns from the enclosing method, which in this case would be <span style="FONT-FAMILY:Courier New">getAttendees</span>. Finally, any exception that propagates out of a loop iteration cancels uncompleted iterations and propagates from the loop.<br/> <br/> p.s.: Martin Buchholz offered the follow improved version of the code using <span style="FONT-FAMILY:Courier New">java.util.concurrent</span>:<br/> <br/> <div style="MARGIN-LEFT:40px">  <span style="FONT-FAMILY:Courier New"> public Collection&lt;Principal&gt; getAttendees() {</span><br style="FONT-FAMILY:Courier New"/>  <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp;&nbsp; final Collection&lt;Principal&gt; result</span><br style="FONT-FAMILY:Courier New"/>  <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; = new ConcurrentLinkedQueue&lt;Principal&gt;();</span><br style="FONT-FAMILY:Courier New"/>  <div style="direction:ltr">   <p><span style="FONT-FAMILY:Courier New">&nbsp;&nbsp;&nbsp; final Collection&lt;Callable&lt;Object&gt;&gt; tasks</span><br style="FONT-FAMILY:Courier New"/>         <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; = new ArrayList&lt;Callable&lt;Object&gt;&gt;();</span><br style="FONT-FAMILY:Courier New"/>         <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp;&nbsp; for (final EventResponse r : getResponses())</span><br style="FONT-FAMILY:Courier New"/>       <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; tasks.add(Executors.callable(new Runnable() { public void run() {</span><br style="FONT-FAMILY:Courier New"/>       <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; try {</span><br style="FONT-FAMILY:Courier New"/>       <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if (r.mayAttend())</span><br style="FONT-FAMILY:Courier New"/>       <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; result.add(r.getAttendee());</span><br style="FONT-FAMILY:Courier New"/>       <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; } catch (Throwable ex) {</span><br style="FONT-FAMILY:Courier New"/>       <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; LOGGER.log(Level.SEVERE, "Uncaught Exception", ex);</span><br style="FONT-FAMILY:Courier New"/>       <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }}}));</span><br style="FONT-FAMILY:Courier New"/>         <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp;&nbsp; try {<br style="FONT-FAMILY:Courier New"/>       </span><span style="FONT-FAMILY:Courier New">&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; threadpool.invokeAll(tasks);</span><br style="FONT-FAMILY:Courier New"/>         <span style="FONT-FAMILY:Courier New"> &nbsp;&nbsp;&nbsp; } catch (InterruptedException ex) {}<br style="FONT-FAMILY:Courier New"/> &nbsp;&nbsp;&nbsp; return new ArrayList&lt;Principal&gt;(result);</span><br style="FONT-FAMILY:Courier New"/>         <span style="FONT-FAMILY:Courier New"> </span> }<br/>     </p>   </div> </div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://blogs.sun.com/jag/entry/time_for_the_toy_show]]></link>
    <title><![CDATA[Time for the Toy Show]]></title>
    <body><![CDATA[<a href=http://blogs.sun.com/jag/resource/MosconeJ1Friday.jpg><img border=0 align=right   src=http://blogs.sun.com/jag/resource/MosconeJ1FridaySmall.jpg></a>Somehow, JavaOne as once again been a complete blur.  My promises to myself to blog more often haven't worked out. With all the talks, press, analysts, customers, friends, server meltdowns and general running around, there just aren't enough hours in a day.  Some folks tried real hard to get me to the AfterDark party last night, but no: I had to rehearse for this morning.  This JavaOne has truly been different. <p>My keynote is both easy and hard: it's all demos.  All stuff that I think is inspiring.  All stuff that makes me think "Could I switch jobs with you?".  But it's long.  Two hours, 12 demos.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://fsinf.at/node/471]]></link>
    <title><![CDATA[Wahlergebnis ÖH-Wahl 2007]]></title>
    <body><![CDATA[<p>und hier das entgueltige Wahlergebnis:</p> <p><a href="http://fsinf.at/node/471">Weiterlesen</a></p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://armstrongonsoftware.blogspot.com/2007/03/hasta-la-vista-baby.html]]></link>
    <title><![CDATA[Hasta La Vista,  baby]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://blog.alexandrow.org/stories/3298502/]]></link>
    <title><![CDATA[Evolver 07]]></title>
    <body><![CDATA[Last weekend I launched the all new version of <a href="http://www.evolver.at">evolver.at</a>, Austria's first webzine, which had it's 10th birthday last year.<br /> <br /> I completely dumped the <a href="http://blog.alexandrow.org/stories/80927/">old PHP based source</a> (a long-held wish of mine) and wrote a new application from scratch (which allowed me to especially focus on and support the workflows being present in a professional editorial environment). Well not from scratch really, for it is the second successfully deployed project that is topped on my new and yet unnamed web framework (which in turn is based on <a href="http://helma.org">Helma</a>).<br /> <br /> <a href="http://c3o.org/">Christopher Clay</a> did a great job on HTML, while the design originated from the hands of <a href="http://www.evolver.at/account/ernst.meyer/">Ernst Meyer</a>.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://steve-yegge.blogspot.com/2006/05/oblivion.html]]></link>
    <title><![CDATA[Oblivion]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://programming.reddit.com/goto?rss=true&id=2d3vw]]></link>
    <title><![CDATA[ Nice summary of the Unix filesystem-structure (Mindmap, GIF)]]></title>
    <body><![CDATA[<a href="http://www.fermbyg.dk/Prohest/nix/img/Unixfile_structures.gif">[link]</a><a href="http://programming.reddit.com/info/2d3vw/comments">[more]</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://www.davids-world.com/archives/2007/05/kelvingrove_mus.html]]></link>
    <title><![CDATA[Kelvingrove Museum: How did the airplane get on top of the elephant?]]></title>
    <body><![CDATA[       <img alt="IMG_4527_kelvingrove.jpg"  src="http://www.davids-world.com/IMG_4527_kelvingrove.jpg" width="200" height="300" align="right" hspace=10/>The Kelvingrove Museum in Glasgow is a peculiar one. It's a hundred years old, and a plethora of art works, design pieces and artefacts have found their way into the beautiful building in Glasgow over the decades: a Picasso mounted at children-friendly height right next to multimedia screen, and a WWII-Spitfire over a stuffed elephant.              ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://www.flog.in/stories/4196414/]]></link>
    <title><![CDATA[5 Monate!]]></title>
    <body><![CDATA[<a href="http://flog.blogr.com"><img title="" height="500" alt="P1010934a" width="430" src="http://static.twoday.net/flog/images/P1010934a.jpg" /></a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
    </votes>
    <link><![CDATA[http://pogue.blogs.nytimes.com/2007/08/23/the-psychology-of-numeracy/]]></link>
    <title><![CDATA[The Psychology of Numeracy]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://fsinf.at/node/475]]></link>
    <title><![CDATA[Regenbogenparade]]></title>
    <body><![CDATA[<p><a href='http://www.regenbogenparade.at/'><img src='/files/logo_regenbogenparade2007.jpg' width='500' height='294'></a><br /> Am Samstag den 30.06.07 ist es wieder so weit. Die Regenbogenparade findet statt. Zum inzwischen neunten Mal wird sich ein bunter und schriller Zug auf dem Ring, entgegen der Fahrtrichtung (andersrum), vom Stadtpark beginnend, durch Wien ziehen.</p> <p><a href="http://fsinf.at/node/475">Weiterlesen</a></p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://senzee.blogspot.com/2007/07/nearest-neighbor.html]]></link>
    <title><![CDATA[Nearest Neighbor]]></title>
    <body><![CDATA[What's the fastest way to find the closest pair of three-dimensional points in a large set? That was the question posed for the most recent <em>Hacker's Delight</em> challenge.<br /><br />We just released the results for <a href="http://www.hejl.com/hd/7/results.html">Hacker's Delight #7: Nearest Neighbor</a>. A little premature, it turns out, we misplaced a bunch of the entries. Once the remaining entries were found, I ran the tests before I came home tonight and <a href="http://www.hejl.com/">Jim</a> should be putting them up soon. It turns out that the missing entries don't really affect the outcome.<br /><br />This is the third <a href="http://www.hejl.com/hd/">Hacker's Delight challenge</a> I've blogged about. <a href="http://www.hejl.com/hd/6/results.html">Challenge #6: 64 Choose 4</a> came from the post <a href="http://senzee.blogspot.com/2006/06/let-me-count-ways.html">Let Me Count The Ways</a> and, in full circle, <a href="http://senzee.blogspot.com/2006/08/let-me-count-ways-part-ii.html">Let Me Count The Ways (Part II)</a> comes from the challenge. From <em>Hacker's Delight #4: Primes</em> came <a href="http://senzee.blogspot.com/2006/06/sieve-of-eratosthenes.html">Sieve of Eratosthenes</a>.<br /><br />Alistair Milne from EA Montreal blew <em>Nearest Neighbor </em>out of the water with a <a href="http://www.hejl.com/hd/7/results/alistairmilne.html">blazingly fast and beautiful algorithm</a> for finding the nearest two points in a cloud of points in three dimensional space. For comparison the very slow <a href="http://www.hejl.com/hd/7/main.html">reference implementation is here</a>. I wondered if I could get any more performance out of Alistair's algorithm and came up with an <a href="http://www.hejl.com/hd/7/results/senzee_alistairmilne.html">uglier but ~25% faster SIMD optimized version of his algorithm</a>. Sadly, my own reasonably fast implementation for <em>Nearest Neighbor </em>is incorrect about 7% of the time.<br /><br />My implementation, and many others we received were based on the canonical <em>Nearest Neighbor</em> algorithm as described in Cormen's <a href="http://www.amazon.com/Introduction-Algorithms-Thomas-H-Cormen/dp/0262032937/ref=pd_bbs_2/002-0671607-9544802?ie=UTF8&s=books&amp;amp;qid=1184118727&amp;sr=8-2">Introduction to Algorithms</a>. It seems that in every respect, Alistair's algorithm is superior. It's more elegant, it's much faster and it does less work.<br /><br />Be sure to check it out.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://blogs.sun.com/jag/entry/five_things_you_probably_don]]></link>
    <title><![CDATA[Five things you probably don't know about me]]></title>
    <body><![CDATA[I've now been tagged not <a href=http://weblogs.java.net/blog/timboudreau/archive/2007/01/tag_and_im_it.html>once</a>, but <a href=http://blogs.sun.com/richgreen/>twice</a> in the game of blog-tag that's been going on. It's clearly time to get it over with, so here are five things you probably don't know about me: <ol> <li>When I was a kid my favorite place to play was my grandfathers shop and "boneyard".  The boneyard was a few acres next to the shop where he parked all of his old (dead) farm equipment.  It's history stretched back to about 1910 and had several slowly decaying (but grand) steam tractors.  They were my favorites. The shop had a full set of blacksmithing tools.  Lots of fun! <li>My first job was cleaning the sidewalks at a <a href=http://maps.google.com/maps?f=q&hl=en&q=calgary,+canada&ie=UTF8&z=18&ll=51.086539,-114.103548&spn=0.002271,0.005826&t=k&om=1>small strip mall</a> in Calgary.  My favorite shop there was the only one who was never my custormer: a baker named Seebe Borge (I hope I got his name right).  I kept trying to convince him to pay me to shovel the sidewalks, and he kept saying no, but he'd regularly hand me half a loaf of bread, fresh out of the oven, covered in obscene quantities of butter, sugar and cinammon.  He'd eat the other half.  Perfect food when standing outside watching the snow fall. <li><img src=http://aurora.phys.ucalgary.ca/isis2/img/isis_web2.jpg align=right>Before I discovered computers, I wanted to be a forest warden for the National Parks Service. <li>My first experience with computing was building a machine to play tic-tac-toe for a science fair. I built it out of old telephone relays and television parts that I obtained by dumpster diving (I could never afford new anything).  The amusing bit was that the TVs were all vacuum tube machines that didn't have anything like a low voltage power supply usable by the relays.  So I ran the relays on 300V, which often got exciting  :-) <li>My first computing job was writing software to process data from the <a href=http://aurora.phys.ucalgary.ca/isis2/index.html>ISIS II satellite</a>.  The picture on the right is the machine I worked on, a PDP-8/I with 8K of RAM (eventually 12K).  The pairs of white circles are DECtape drives that the OS swapped on (no disk!).  To the left is a pair of 9 track tape drives, and to the left of them in the blue cabinet is the analog tape drive where we read the raw satellite data from.  The display used for photography was on the right, just off the screen.  It had a phenominal 2Kx2K resolution - which was hard given that the framebuffer was 4K of RAM from the main memory.  It was 6 bits/pixel, 12 bits/word, hence 8K pixels or 4 scan lines in the framebuffer.  We could stear the 2Kx4 pixels up and down on the screen, which had a camera attached to it.  It took quite a while to pass enough data through to get a full frame. </ol> So, who should I tag?  I'll start with <a href=http://blogs.sun.com/brewin/>Bob Brewin</a> and <a href=http://blogs.sun.com/tpm/>Tim Marsland</a>, the co-software-CTOs at Sun, neither of which have been doing enough blogging.  My boss, <a href=http://blogs.sun.com/prague/entry/czech_java_user_group_first>Laurie Tolson</a>, who still hasn't started blogging.  I should tag a couple more, but these will cause me enough trouble for now.  ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[/info/2i3ji/comments#c2idf3]]></link>
    <title><![CDATA[mjakl on  Why you shouldn't use the Lesser GPL for your next library [by the Free Software Foundation (FSF)]]]></title>
    <body><![CDATA[<p>What do you mean? Why do you make money with the LGPL but not with the GPL? You can charge for GPL software as well as for LGPL software.</p>  <p>If you give it to them with a license like the LGPL, you force them to give you back all the modifications they make (the same with the GPL).</p>  <p>If I write some piece of code for some company, they usually get all the rights anyway.</p>  <p>I like the GPL much better for my toy-projects because when I write some code for me and release it to the world, I don't want a company to make money - with me watching it. They can always buy the software from me with a commercial license and do whatever they want to... .</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://michaelzoehrer.blogspot.com/2006/11/kiwi.html]]></link>
    <title><![CDATA[Kiwi!]]></title>
    <body><![CDATA[Die kleinen Erfolge sind die schönsten.<br /><object width="425" height="350"><param name="movie" value="http://youtube.com/v/sdUUx5FdySs"></param><embed src="http://youtube.com/v/sdUUx5FdySs" type="application/x-shockwave-flash" width="425" height="350"></embed></object><br>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://www.davids-world.com/archives/2007/05/bike_strategy_c.html]]></link>
    <title><![CDATA[Bike Strategy. Cheap and no worries.]]></title>
    <body><![CDATA[       When my bike had magically disappeared on Sunday morning, I was annoyed and unhappy as I am when my stuff gets taken away from me. But, luckily, my grand master plan, <i>David's Bike Strategy</i> has worked out: Buy a cheap and tatty looking one, do not spend big bucks on it, and don't worry too much if it gets stolen. Because every bike will get stolen if you ride it.  So, my white Raleigh bicycle is in the hands of (presumably) some local neds now. Just like the nice <a href="http://www.davids-world.com/archives/2004/12/the_trick_bike.html">Trick Bike</a> that got <a href="http://www.davids-world.com/archives/2005/05/the_trick_bike_1.html">nicked</a> two years ago.  My new bike only cost £50 at Edinburgh's awesome <a href="http://www.thebikestation.org.uk/">Bike Station</a>, and as you can see from the picture: it's a bike with character. And it rides .. great! Brakes work, goes down steps, loves the Edinburgh cobble-stone, and is fast almost like a city or road bike. I'm a happy camper! <a href="http://www.davids-world.com/IMG_4537_bike.jpg"><img alt="IMG_4537_bike.jpg" src="http://www.davids-world.com/IMG_4537_bike-thumb.jpg" width="450" height="299" /></a>             ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://niniane.blogspot.com/2007/08/geek-conversations-about-love-part-5-in.html]]></link>
    <title><![CDATA[geek conversations about love (part 5 in a series)]]></title>
    <body><![CDATA["It seems like he's not into it."<br /><br />"Or he could just be shy?"<br /><br />"You know, it would be convenient if there were a logical test that would determine what's going on.  Help me come up with this test, and I'll apply it."<br /><br />"Dude, Heisenberg will own you."]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://www.terminally-incoherent.com/blog/2007/08/25/superbad/]]></link>
    <title><![CDATA[Superbad]]></title>
    <body><![CDATA[It&#8217;s Saturday, so it means it&#8217;s time for a review! This time it&#8217;s not anime though so don&#8217;t run away.     Superbad Funniest movie of the summer I went to see Superbad with high expectations. It was highly recommended, highly rated, and everyone was raving about it for like a week now. This is usually a [...]]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://www.dekorte.com/blog/blog.cgi?do=item&id=2882]]></link>
    <title><![CDATA[60 Minutes: US Comptroller on the Economy]]></title>
    <body><![CDATA[<a href=http://www.youtube.com/watch?v=KGpY2hw7ao8>Video</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/05/emacs-highlighting-parentheses.html]]></link>
    <title><![CDATA[Emacs: highlighting parentheses]]></title>
    <body><![CDATA[<p> Emacs has several packages for dealing with <a href="http://www.emacswiki.org/cgi-bin/wiki/CategoryParentheses">parentheses</a>. Emacs comes with ways to highlight the matching parenthesis when you're on one; try <kbd>show-paren-mode</kbd>. One of the newer add-on packages is Nikolaj Schumacher's <a href="http://www.emacswiki.org/cgi-bin/wiki/HighlightParentheses">highlight-parentheses</a> mode, which shows the parentheses that enclose the current cursor position.  I tried modifying it to highlight the containing expressions instead of only their parentheses: </p> <pre class=snippet> (defun hl-paren-highlight ()   "Highlight the parentheses around point."   <span style="background-color: #99ff99;">(unless (= (point) hl-paren-last-point)     </span><span style="background-color: #ccff99;">(save-excursion       </span><span style="background-color: #ffcc99;">(let ((pos (point))             (match-pos (point))             (level -1)             (max (1- (length hl-paren-overlays))))         </span><span style="background-color: #ff9999;">(while (and match-pos (&lt; level max))           </span><span style="background-color: #ff99cc;">(setq match-pos                 </span><span style="background-color: #cc99ff;">(when </span><span style="background-color: #9999ff;">(setq pos </span><span style="background-color: #99ccff;">(cadr </span><span style="background-color: #99ffcc;">(syn<span style="background-color:red;color:white">t</span>ax-ppss pos)</span><span style="background-color: #99ccff;">)</span><span style="background-color: #9999ff;">)</span><span style="background-color: #cc99ff;">                   (ignore-errors (scan-sexps pos 1)))</span><span style="background-color: #ff99cc;">)</span><span style="background-color: #ff9999;">           (when match-pos             (if (eq 'expression hl-paren-type)                 (hl-paren-put-overlay pos match-pos (incf level))               (hl-paren-put-overlay pos (1+ pos) (incf level))               (hl-paren-put-overlay (1- match-pos) match-pos                  (incf level)))             ))</span><span style="background-color: #ffcc99;">         (while (&lt; level max)           (hl-paren-put-overlay nil nil (incf level))))</span><span style="background-color: #ccff99;">)</span><span style="background-color: #99ff99;">     (setq hl-paren-last-point (point)))</span>) </pre> <p> Unfortunately, as you can see, it's a mess. I tried better colors (white, gray, etc.) but I just couldn't make it usable.  So I gave up on highlighting the regions and went back to highlighting just the parentheses. It's a bit better: </p> <pre class="snippet"> (<span style="color: #0000cd;">defun</span> <span style="color: #2244d0; font-style: italic;">hl-paren-highlight</span> ()   <span style="color: #448844; background-color: #e8e8e8;">"Highlight the parentheses around point."</span>   <span style=" background-color: #99ff99;">(</span><span style="color: #0000cd;">unless</span> (= (point) hl-paren-last-point)     <span style=" background-color: #ccff99;">(</span><span style="color: #0000cd;">save-excursion</span>       <span style=" background-color: #ffcc99;">(</span><span style="color: #0000cd;">let</span> ((pos (point))             (match-pos (point))             (level -1)             (max (1- (length hl-paren-overlays))))         <span style=" background-color: #ff9999;">(</span><span style="color: #0000cd;">while</span> (and match-pos (&lt; level max))           <span style=" background-color: #ff99cc;">(</span><span style="color: #0000cd;">setq</span> match-pos                 <span style=" background-color: #cc99ff;">(</span><span style="color: #0000cd;">when</span> <span style=" background-color: #9999ff;">(</span><span style="color: #0000cd;">setq</span> pos <span style=" background-color: #99ccff;">(</span>cadr <span style=" background-color: #99ffcc;">(</span>syn<span style="background-color:red;color:white">t</span>ax-ppss pos<span style=" background-color: #99ffcc;">)</span><span style=" background-color: #99ccff;">)</span><span style=" background-color: #9999ff;">)</span>                   (<span style="color: #0000cd;">ignore-errors</span> (scan-sexps pos 1))<span style=" background-color: #cc99ff;">)</span><span style=" background-color: #ff99cc;">)</span>           (<span style="color: #0000cd;">when</span> match-pos             (<span style="color: #0000cd;">if</span> (eq <span style="color: #0000ee;">'</span>expression hl-paren-type)                 (hl-paren-put-overlay pos match-pos (incf level))               (hl-paren-put-overlay pos (1+ pos) (incf level))               (hl-paren-put-overlay (1- match-pos) match-pos                  (incf level)))             )<span style=" background-color: #ff9999;">)</span>         (<span style="color: #0000cd;">while</span> (&lt; level max)           (hl-paren-put-overlay nil nil (incf level)))<span style=" background-color: #ffcc99;">)</span><span style=" background-color: #ccff99;">)</span>     (<span style="color: #0000cd;">setq</span> hl-paren-last-point (point))<span style=" background-color: #99ff99;">)</span>) </pre> <p> However it's still a bit too … colorful.  So I changed it to simply make the enclosing parentheses bold: </p> <pre class="snippet"> <b>(</b><span style="color: #0000cd;">defun</span> <span style="color: #2244d0; font-style: italic;">hl-paren-highlight</span> ()   <span style="color: #448844; background-color: #e8e8e8;">"Highlight the parentheses around point."</span>   <b>(</b><span style="color: #0000cd;">unless</span> (= (point) hl-paren-last-point)     <b>(</b><span style="color: #0000cd;">save-excursion</span>       <b>(</b><span style="color: #0000cd;">let</span> ((pos (point))             (match-pos (point))             (level -1)             (max (1- (length hl-paren-overlays))))         <b>(</b><span style="color: #0000cd;">while</span> (and match-pos (&lt; level max))           <b>(</b><span style="color: #0000cd;">setq</span> match-pos                 <b>(</b><span style="color: #0000cd;">when</span> <b>(</b><span style="color: #0000cd;">setq</span> pos <b>(</b>cadr <b>(</b>syn<span style="background-color:red;color:white">t</span>ax-ppss pos<b>)</b><b>)</b><b>)</b>                   (<span style="color: #0000cd;">ignore-errors</span> (scan-sexps pos 1))<b>)</b><b>)</b>           (<span style="color: #0000cd;">when</span> match-pos             (<span style="color: #0000cd;">if</span> (eq <span style="color: #0000ee;">'</span>expression hl-paren-type)                 (hl-paren-put-overlay pos match-pos (incf level))               (hl-paren-put-overlay pos (1+ pos) (incf level))               (hl-paren-put-overlay (1- match-pos) match-pos                  (incf level)))             )<b>)</b>         (<span style="color: #0000cd;">while</span> (&lt; level max)           (hl-paren-put-overlay nil nil (incf level)))<b>)</b><b>)</b>     (<span style="color: #0000cd;">setq</span> hl-paren-last-point (point))<b>))</b> </pre> <p> That's nicer, although perhaps too subtle. I added more bolding: </p> <pre class="snippet"> (<span style="color: #0000cd;">defun</span> <span style="color: #2244d0; font-style: italic;">hl-paren-highlight</span> ()   <span style="color: #448844; background-color: #e8e8e8;">"Highlight the parentheses around point."</span>   <span style=" font-weight: bold;">(unless</span> (= (point) hl-paren-last-point)     <span style=" font-weight: bold;">(save-excursion</span>       <span style=" font-weight: bold;">(let</span> ((pos (point))             (match-pos (point))             (level -1)             (max (1- (length hl-paren-overlays))))         <span style=" font-weight: bold;">(while</span> (and match-pos (&lt; level max))           <span style=" font-weight: bold;">(setq</span> match-pos                 <span style=" font-weight: bold;">(when</span> <span style=" font-weight: bold;">(setq</span> pos <span style=" font-weight: bold;">(cadr</span> <span style=" font-weight: bold;">(syn<span style="background-color:red;color:white">t</span>ax-ppss</span> pos<span style=" font-weight: bold;">)))</span>                   (<span style="color: #0000cd;">ignore-errors</span> (scan-sexps pos 1))<span style=" font-weight: bold;">))</span>           (<span style="color: #0000cd;">when</span> match-pos             (<span style="color: #0000cd;">if</span> (eq <span style="color: #0000ee;">'</span>expression hl-paren-type)                 (hl-paren-put-overlay pos match-pos (incf level))               (hl-paren-put-overlay pos (1+ pos) (incf level))               (hl-paren-put-overlay (1- match-pos) match-pos<span style="background-color: #eeeeff;"> </span>                 (incf level)))             )<span style=" font-weight: bold;">)</span>         (<span style="color: #0000cd;">while</span> (&lt; level max)           (hl-paren-put-overlay nil nil (incf level)))<span style=" font-weight: bold;">))</span>     (setq hl-paren-last-point (point))<span style=" font-weight: bold;">)</span>) </pre> <p> It bolds the parentheses and also the first s-expression inside the opening parenthesis. It doesn't understand when the parentheses begin <a href="http://amitp.blogspot.com/2007/04/lisp-vs-python-syntax.html">a form</a> (instead of all the other uses of parentheses), so it sometimes highlights the first s-expression even when it's not special in any way. Despite this wart, I like this form of highlighting so far.  </p> <p> <strong>Update:</strong> [2007-05-29] However, there is one more thing I wanted. I de-emphasize parentheses by using a lighter color for them; I want the enclosing parentheses to be bold and black. However I want the enclosing first s-expressions to be bold, but not necessarily black. Note in the above example the keywords are normally blue, but when enclosing the current point they are black. I fixed this by adding separate highlighting for the enclosing parentheses and the first s-expression: </p>     <pre class="snippet"> <span style="color: #000000; font-weight: bold;">(</span><span style="color: #0000cd; font-weight: bold;">defun</span> <span style="color: #2244d0; font-style: italic;">hl-paren-highlight</span> <span style="color: #8080b0;">(</span><span style="color: #8080b0;">)</span>   <span style="color: #448844; background-color: #e8e8e8;">"Highlight the parentheses around point."</span>   <span style="color: #000000; font-weight: bold;">(</span><span style="color: #0000cd; font-weight: bold;">unless</span> <span style="color: #8080b0;">(</span>= <span style="color: #8080b0;">(</span>point<span style="color: #8080b0;">)</span> hl-paren-last-point<span style="color: #8080b0;">)</span>     <span style="color: #000000; font-weight: bold;">(</span><span style="color: #0000cd; font-weight: bold;">save-excursion</span>       <span style="color: #000000; font-weight: bold;">(</span><span style="color: #0000cd; font-weight: bold;">let</span> <span style="color: #8080b0;">(</span><span style="color: #8080b0;">(</span>pos <span style="color: #8080b0;">(</span>point<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>             <span style="color: #8080b0;">(</span>match-pos <span style="color: #8080b0;">(</span>point<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>             <span style="color: #8080b0;">(</span>level -1<span style="color: #8080b0;">)</span>             <span style="color: #8080b0;">(</span>max <span style="color: #8080b0;">(</span>1- <span style="color: #8080b0;">(</span>length hl-paren-overlays<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>         <span style="color: #000000; font-weight: bold;">(</span><span style="color: #0000cd; font-weight: bold;">while</span> <span style="color: #8080b0;">(</span>and match-pos <span style="color: #8080b0;">(</span>&lt; level max<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>           <span style="color: #000000; font-weight: bold;">(</span><span style="font-weight: bold;">setq</span> match-pos                 <span style="color: #000000; font-weight: bold;">(</span><span style="color: #0000cd; font-weight: bold;">when</span> <span style="color: #000000; font-weight: bold;">(</span><span style="font-weight: bold;">setq</span> pos <span style="color: #000000; font-weight: bold;">(</span><span style="font-weight: bold;">cadr</span> <span style="color: #000000; font-weight: bold;">(</span><span style="font-weight: bold;">syn<span style="background-color:red;color:white">t</span>ax-ppss</span> pos<span style="color: #000000; font-weight: bold;">)</span><span style="color: #000000; font-weight: bold;">)</span><span style="color: #000000; font-weight: bold;">)</span>                   <span style="color: #8080b0;">(</span><span style="color: #0000cd;">ignore-errors</span> <span style="color: #8080b0;">(</span>scan-sexps pos 1<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span><span style="color: #000000; font-weight: bold;">)</span><span style="color: #000000; font-weight: bold;">)</span>           <span style="color: #8080b0;">(</span><span style="color: #0000cd;">when</span> match-pos             <span style="color: #8080b0;">(</span><span style="color: #0000cd;">if</span> <span style="color: #8080b0;">(</span>eq <span style="color: #0000ee;">'</span>expression hl-paren-type<span style="color: #8080b0;">)</span>                 <span style="color: #8080b0;">(</span>hl-paren-put-overlay pos match-pos <span style="color: #8080b0;">(</span>incf level<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>               <span style="color: #8080b0;">(</span>hl-paren-put-overlay pos <span style="color: #8080b0;">(</span>1+ pos<span style="color: #8080b0;">)</span> <span style="color: #8080b0;">(</span>incf level<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>               <span style="color: #8080b0;">(</span>hl-paren-put-overlay <span style="color: #8080b0;">(</span>1- match-pos<span style="color: #8080b0;">)</span> match-pos<span style="background-color: #eeeeff;"> </span>                 <span style="color: #8080b0;">(</span>incf level<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span>             <span style="color: #8080b0;">)</span><span style="color: #000000; font-weight: bold;">)</span>         <span style="color: #8080b0;">(</span><span style="color: #0000cd;">while</span> <span style="color: #8080b0;">(</span>&lt; level max<span style="color: #8080b0;">)</span>           <span style="color: #8080b0;">(</span>hl-paren-put-overlay nil nil <span style="color: #8080b0;">(</span>incf level<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span><span style="color: #000000; font-weight: bold;">)</span><span style="color: #000000; font-weight: bold;">)</span>     <span style="color: #8080b0;">(</span>setq hl-paren-last-point <span style="color: #8080b0;">(</span>point<span style="color: #8080b0;">)</span><span style="color: #8080b0;">)</span><span style="color: #000000; font-weight: bold;">)</span><span style="color: #000000; font-weight: bold;">)</span> </pre> <p> I'm pretty happy with this variant of <code>highlight-parentheses.el</code>. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
    </votes>
    <link><![CDATA[http://lambda-the-ultimate.org/node/2419]]></link>
    <title><![CDATA[Beyond Pretty-Printing: Galley Concepts in Document Formatting Combinators]]></title>
    <body><![CDATA[<p ><a href="http://www.cas.mcmaster.ca/~kahl/Publications/Conf/Kahl-1999a.pdf">Beyond Pretty-Printing: Galley Concepts in Document Formatting Combinators</a>, Wolfram Kahl. 1999.</p> <blockquote ><p > Galleys have been introduced by Jeff Kingston as one of the key concepts underlying his advanced document formatting system Lout. Although Lout is built on a lazy functional programming language, galley concepts are implemented as part of that language and defined only informally. In this paper we present a first formalization of document formatting combinators using galley concepts in the purely functional programming language Haskell. </p></blockquote> <p >We've talked about functional layout algorithms for mathematics before, so it seems like a good idea to link to a paper about typesetting all the text those formulas are surrounded by. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/05/who-are-you-poll-results.html]]></link>
    <title><![CDATA["Who are you" poll results]]></title>
    <body><![CDATA[Thanks for participating to the poll "Who are you" recently proposed on this blog. It is helpful for me to better know the audience of Data Mining Research. Here are the results over 43 votes:<br /><br />Data mining practitioners: 33%<br /><br />Data mining researchers: 44%<br /><br />People from other fields: 23%<br /><br />It is a quite good mix of researchers and practitioners. I'm surprised (in good) of the high percentage of people from other fields than data mining. I guess these people come from a closely related field such as computer science in general or mathematics. Anyway, I will do my best so that any reader can regularly find interesting posts.<div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://googlemac.blogspot.com/2007/04/google-desktop-for-mac_04.html]]></link>
    <title><![CDATA[Google Desktop for Mac]]></title>
    <body><![CDATA[Posted By Mike Pinkerton, Software Engineer<br /><br />People have been asking me since I started at Google what I've been working on, and until today, I've been unable to say. Now is the time to change all that and introduce the newest product from the Google MacEng team: <a title="Google Desktop for the Mac (beta)" href="http://desktop.google.com/mac">Google Desktop for Mac (beta)</a>.<br /><br />Google Desktop for Mac takes many of the features from the Windows product, such as indexing Gmail and web history, <a href="http://google.com/" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)"> Google.com</a> integration, finding content in past file revisions and deleted files, and fast application launching. But we know that simply "porting" to the Mac is not a good idea. So we took the time to develop a product that deeply integrates into Mac OS X and maintains its high standards of usability. This is a Mac product through and through, from the bezel on our search box down to correctly (and securely) handling multiple users and FileVault.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://photos1.blogger.com/x/blogger/813/3778/1600/132028/iChatScreenSnapz001.jpg"><img style="margin: 0pt 10px 10px 0pt; float: left; cursor: pointer;" src="http://photos1.blogger.com/x/blogger/813/3778/400/725559/iChatScreenSnapz001.jpg" alt="" border="0" /></a>Our primary goal was to make desktop search as fast as Google.com web search. When people think Google, they think speed, and our Google Desktop product is no different. The search box makes launching documents and applications lightning fast and provides quick access to your files, folders, email, and webpages. Better still, with a convenient shortcut key (command + command) it's always right at your fingertips.<br /><br /><br /><br />The next goal was to make Google Desktop as easy to use as a Google.com web search. In your web browser, Google Desktop looks and behaves like our web search, seamlessly blending the two experiences. When you do a Google.com search we'll also display interesting results from your Mac that are related to your search. Getting to Google Desktop is easy, whether you use the search box's shortcut key or click the "Desktop" tab on Google.com. Google Desktop additionally searches your Gmail and web history (from Safari, Camino, and Firefox) without you having to lift a finger, and can even find that important outline you deleted by accident!<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://photos1.blogger.com/x/blogger/813/3778/1600/660189/CaminoScreenSnapz001.jpg"><img style="margin: 0pt 0pt 10px 10px; float: right; cursor: pointer;" src="http://photos1.blogger.com/x/blogger/813/3778/400/957113/CaminoScreenSnapz001.jpg" alt="" border="0" /></a>As part of Google Desktop, you also get the new Google Updater. Don't worry, you don't have to do anything special: installing Google Desktop gets you Google Updater for free. It is designed to allow you to easily install, update, and uninstall all the Google software for Mac OS X. In addition to managing the products you have installed, Updater allows you to explore and discover other Google software, including Google Earth, Notifier, and Picasa Web Uploader, and learn a little about each of them.  Best of all, Google Updater is always up to date with our full product line, and can even notify you about new software releases from Google!<br /><br />Over the coming months, we'll continue to improve the product and innovate in the area of search, as well as find other ways to integrate into Mac OS X. As tech lead, I'm incredibly proud of the work my team has done, and I hope you enjoy the fruits of our labor. If you'd like to send us some feedback, we'd love to hear it over in <a title="our forum" href="http://groups.google.com/group/google-mac-desktop/">our forum</a>.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://hackr.de/2007/08/31/was-geht-dem-web-seine-dummen-reden]]></link>
    <title><![CDATA[Was geht dem Web seine dummen Reden]]></title>
    <body><![CDATA[<p>... von gestern an? </p>   <p><tt>&as_qdr=d1</tt> an Google Suchen angehängt und passt schon.</p>   <p>(<a href="http://blog.rivva.de/archives/2007/8/31/achilles_last_stand/">via mit erklärung</a>)</p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/06/fun-youtube-videos.html]]></link>
    <title><![CDATA[Fun YouTube videos]]></title>
    <body><![CDATA[<p> YouTube is full of strange and fun videos. Here are some that I've seen recently (original titles and descriptions; I didn't write these descriptions): </p> <dl>  <dt><a href="http://www.youtube.com/watch?v=1PJTq2xQiQ0">Ship floating on nothing! :: Physikshow Uni Bonn</a></dt><dd>Get enchanted by a aluminium foil ship floating above ground on sulphur hexafluoride (gas significantly denser than air) at the Physikshow of the University ...</dd> <dt><a href="http://www.youtube.com/watch?v=lWWKBY7gx_0">Le Grand Content</a></dt><dd>A Film by Clemens Kogler together with Karo Szmit. Voice by Andre Tschinder.Le Grand Content examines the omnipresent Powerpoint-culture in search for its ph...</dd> <dt><a href="http://www.youtube.com/watch?v=m6JLzOHJzbU">Strange Weather Phenomenon in Newfoundland</a></dt><dd>Recorded in Miles Cove, Newfoundland, Canada. Not sure on the exact date this was filmed, but apparently it was in the spring of the year, in 2003. Miles Cov...</dd> <dt><a href="http://youtube.com/watch?v=NLlGopyXT_g">The Machine is Us/ing Us (Final Version)</a></dt><dd>&quot;Web 2.0&quot; in just under 5 minutes.http://mediatedcultures.netThis is a slightly revised and cleaned up version of the video that was featured on YouTube in F...</dd> <dt><a href="http://www.youtube.com/watch?v=3Ufs9Wx0VXQ">Wil Wheaton praises Sony's 1,000,000/1 Contrast OLED TV's</a></dt><dd>OLED = organic light-emitting diode.This is an amazing new technology that will enable extremely thin TV's with a contrast ratio that is about 100 times grea...</dd> <dt><a href="http://www.youtube.com/watch?v=cdbYsoEasio">The Wilhelm Scream Compilation</a></dt><dd>A video I found several years ago, with clips of films using the scream that is found in most George Lucas films...</dd> <dt><a href="http://www.youtube.com/watch?v=cW44BpXpjYw">LineRider &quot;Discarded&quot; A Line Rider Short by TechDawg</a></dt><dd>HiRes @ http://www.iridethelines.comA Short new Line Rider Adventure by TechDawg!  This track contained 13,028 lines, yet is only around 2 minutes in length....</dd> <dt><a href="http://www.youtube.com/watch?v=OYZnsO2ZgWo">Crow Makes Tools</a></dt><dd>This bird fashions a hook out of a hairpin to get the food out of the tube.</dd> <dt><a href="http://youtube.com/watch?v=l69Vi5IDc0g">Will It Blend? - Glow Sticks</a></dt><dd>Need a 12 hour lantern, but all you have are some glow sticks and a Blendtec Total Blender? Well look no further MacGyver, that's all you need.</dd> <dt><a href="http://www.youtube.com/watch?v=8Nwdeq80H2Q">Vertical truck</a></dt><dd>Look at this truck. It can climb an almost 100% vertical wall.</dd> <dt><a href="http://www.youtube.com/watch?v=HdesIbwOYAA">Happydent White Commercial</a></dt><dd>Commercial about how Indian light up their city.Presented by Happydent White Chewing Gum</dd> <dt><a href="http://www.youtube.com/watch?v=avNa1qTsR1s">Staplerfahrer Klaus</a></dt><dd>Aufklärungsvideo über die Folgen, bei nicht Einhaltung der Vorschriften.... ;-)</dd> <dt><a href="http://www.youtube.com/watch?v=V40ScvJeFxg">LEGO Mindstorms NXTway-G Balancing Robot</a></dt><dd>NXT balancing robot using the HiTechnic Gyro Sensor.  Designed and developed by Roy Watanabe, Waseda University Japan.</dd> <dt><a href="http://www.youtube.com/watch?v=ynCsFZ3AS3E">Don's Guns</a></dt><dd>Creepy adverstisement</dd> <dt><a href="http://www.youtube.com/watch?v=FE02TxLlRQU">Amazing unloading excavator</a></dt><dd>The Thais has their way of unloading excavator</dd> <dt><a href="http://www.youtube.com/watch?v=1gvGDsIYrrQ">Speed Painting with Ketchup and French Fries</a></dt><dd>What do you do with fresh McDonald's French Fries and 10 packets of Ketchup? You paint with them of course.   50 min speed painting plays in 4 mins.  Ketchup...</dd> <dt><a href="http://www.youtube.com/watch?v=c0Qs6GPK3Cc">Silent Movie Star Wars (Brilliant)</a></dt><dd>Star Wars from the 20's</dd> <dt><a href="http://www.youtube.com/watch?v=crfrKqFp0Zg">beatboxing flute super mario brothers theme</a></dt><dd>Beatboxing Flute player Greg Patillo covers all the mario themes like nothing you've heard (unless you've been wandering through washington square park and h...</dd> <dt><a href="http://www.youtube.com/watch?v=pPfJhUgliSs">Atari 2600 - Centipede</a></dt><dd>Atari 2600 TV AdvertismentUploaded By Locke2007 of MechaMetropolis.co.uk</dd> <dt><a href="http://www.youtube.com/watch?v=IVKRkA9Xm8Y">Ritterschlag</a></dt><dd>Animated short about damsels in distress and dragons</dd> <dt><a href="http://www.youtube.com/watch?v=epUk3T2Kfno">Otters holding hands</a></dt><dd>Vancouver Aquarium:  two sea otters float around, napping, holding hands.  SO CUTE!</dd> <dt><a href="http://www.youtube.com/watch?v=S9kVhtpfLmw">TAMESHIGIRI~Tomato~</a></dt><dd>Cut The Tomato with the Nihontou(???). on HighSpeedCamera. ??:?????????????????http://nihontou.jp/syuushinryuu/index.htm??????????????http://www.nobby-tech.c...</dd> <dt><a href="http://www.youtube.com/watch?v=GX4_3cV_3Mw">Leaping Shampoo</a></dt><dd>Scientists of the University of Twente in The Netherlands won a prestigious place in the 'Hall of Fame' of videos about fluid-in-motion. They have made a vid...</dd> <dt><a href="http://youtube.com/watch?v=xPxDw7ajfGE">baby duck feed the carp (Nishiki-Goi, Koi)</a></dt><dd>baby duck feeding carps.</dd> <dt><a href="http://www.youtube.com/watch?v=VczbbiRmDik">The Original Human SPACE INVADERS Performance</a></dt><dd>SPACE INVADERS is the 2nd video performance of the GAME OVER Project, directed by the Swiss artist Guillaume REYMOND (NOTsoNOISY creative agency). This stop-...</dd> <dt><a href="http://www.youtube.com/watch?v=uZfrFX36Hkc">OLEDS demonstration</a></dt><dd>Check out all of the cool ways you could use organic lighting; imagine wallpaper that lights up!!  Demonstration from GE's global research center.</dd> <dt><a href="http://www.youtube.com/watch?v=kVcHhJD9bh0">Technological Terror</a></dt><dd>On Monday, April 23 2007, the Academy of Motion Picture Arts and Sciences screened Star Wars as part of their Great to Be Nominated series. Before the start ...</dd> <dt><a href="http://www.youtube.com/watch?v=krXP_TUZqsk">First McDonalds Commercial - Creeepy!</a></dt><dd>The first McDonalds TV Commercial. I wouldnb't let my kids anywhere NEAR that creepy clown thing!</dd> <dt><a href="http://www.youtube.com/watch?v=MX6aerxQPOs">Slow motion high FPS compilation</a></dt><dd>A compilation of videos shot with high FPS cameras and then put into slow motion.</dd> <dt><a href="http://www.youtube.com/watch?v=voAntzB7EwE">colour changing card trick</a></dt><dd>From www.quirkology.com.  Created by Richard Wiseman</dd> <dt><a href="http://www.youtube.com/watch?v=Ul0gfCyeiyM">The killer tortoise</a></dt><dd>A tortoise in our garden defends it's territory against invading cats.</dd> <dt><a href="http://www.youtube.com/watch?v=yXnkzeCU3bE">Gravity Wave</a></dt><dd>Lapse of gravity wave action from the Tama, Iowa KCCI-TV webcam on 6 May 2007.</dd> <dt><a href="http://www.youtube.com/watch?v=iIg0sCHRE8o">Robotic Automated Parking Garage info @ www.aparcalo.com</a></dt><dd>Check out this crazy new parking system from New Zealand, its incredible. It is called U-Parkit by Ahu developments.  Here is a website, www.aparcalo.com</dd> <dt><a href="http://www.youtube.com/watch?v=Y6nshKhqyqU">Millimetres Matter</a></dt><dd>Someone has built a tiny pie-throwing trebuchet to prove that millimetres matter! www.millimetresmatter.com</dd> <dt><a href="http://www.youtube.com/watch?v=rn8ULJGboOE">Line Rider Super Mario Bros. 1-1</a></dt><dd>This is all but an exact copy of the first level on super mario bros. for the nintendo entertainment system. Every cloud, bush, etc. is only pixels away from...</dd> <dt><a href="http://www.youtube.com/watch?v=AlPqL7IUT6M">Struck in tsunami</a></dt><dd>Real Tsunami</dd> <dt><a href="http://www.youtube.com/watch?v=ypMl2RFTC9Y">Cat eats with fork and chopsticks</a></dt><dd>This cat, as raised by a woman who is batshiat crazy, eats with a fork and chopsticks.</dd> <dt><a href="http://www.youtube.com/watch?v=sjqr6dycBcI">Falkirk Wheel</a></dt><dd>Falkirk Wheel</dd> <dt><a href="http://www.youtube.com/watch?v=s-DqZ8jAmv0">Blaise Aguera y Arcas: Photosynth demo</a></dt><dd>Using photos of oft-snapped subjects (like Notre Dame) scraped from around the Web, Photosynth creates breathtaking multidimensional spaces with zoom and nav...</dd> <dt><a href="http://youtube.com/watch?v=D02XvWhQzT8">Stargate Atlantis meets Line Rider -- Go Rodney!</a></dt><dd>Two of my favorite things, together at last! Follow Rodney on the whackiest sled ride in the Pegasus galaxy...(5945 lines).Higher quality at http://acko.net/...</dd> <dt><a href="http://www.youtube.com/watch?v=7uAA-B-PZpA">Child Genius</a></dt><dd>How can you encourage a child ?</dd>  </dl>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/3829473/]]></link>
    <title><![CDATA[Colorpicker auf Twitter]]></title>
    <body><![CDATA[Jö!<br /> <br /> <a href="http://www.twitter.com">twitter</a> verwendet meinen <a href="http://www.knallgrau.at/code/colorpicker">colorpicker</a>. Einfach mal auf Settings > Design gehen :)]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/01/heroes-character-connections.html]]></link>
    <title><![CDATA[Heroes: character connections]]></title>
    <body><![CDATA[<p> I got a late start to watching <a href="http://heroeswiki.com/">Heroes</a>, and I've been trying to put everything together.  One thing I've been interested in is how many connections already existed at the time the story starts.  For example, Peter is connected to Nathan (brother), who is connected to Linderman (father's dealings), who is connected to Niki (owes money), who is connected to Ando (webcam), who is connected to Hiro (coworker).  I tried assembling the pre-existing connections (many of which are not revealed in the first episode): </p> <p> <a href="http://bp0.blogger.com/_kV9ZnGnZL7M/RcQ-DvGQymI/AAAAAAAAAAo/L9Wr21Uq5b4/s1600-h/Heroes+Character+Connections.png"><img width="600" src="http://bp0.blogger.com/_kV9ZnGnZL7M/RcQ-DvGQymI/AAAAAAAAAAo/L9Wr21Uq5b4/s800/Heroes+Character+Connections.png" border="1" alt="Heroes character connections before story began" /></a> </p> <p> The weird thing is, I can't find a pre-existing connection between the two groups.  One one side is Hiro, Niki, Linderman, Peter, etc., and on the other side is Mr. Bennet, Claire, Mohinder, Sylar, etc.  There are a few new connections made after the story begins—Nathan and Mohinder, Peter and Claire, Isaac and Eden, Matt and Mr. Bennet—but I can't find a way to connect them.  I keep thinking Mr. Bennet and Linderman must be connected somehow, but if they are, I must've missed the connection. </p> <p> There is of course the matter of Claire's biological father.  The candidates I've read on the blogs are Nathan, Linderman, Sylar, and Mr. Bennet himself.  <strong>Having Claire's father be Linderman or Nathan would make everyone connected</strong>, which seems like something the creators of Heroes would do. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/166]]></link>
    <title><![CDATA[Reinventing HTML]]></title>
    <body><![CDATA[<p>Making standards is hard work.  Its hard because it involves listening to other people and figuring out what they mean, which means figuring out where they are coming from, how they are using words, and so on. </p><p> There is the age-old tradeoff for any group as to whether to zoom along happily, in relative isolation, putting off the day when they ask for reviews, or whether to get lots of people involved early on, so a wider community gets on board earlier, with all the time that costs.  That's a trade-off which won't go away. </p><p>  The solutions tend to be different for each case, each working group. Some have lots of reviewers and some few, some have lots of time, some urgent deadlines. </p><p>  A particular case is HTML.  HTML has the potential interest of <em>millions</em> of people: anyone who has designed a web page may have useful views on new HTML features. It is the earliest spec of W3C, a battleground of the browser wars, and now the most widespread spec. </p><p>  The perceived accountability of the HTML group has been an issue. Sometimes this was a departure from the W3C process, sometimes a sticking to it in principle, but not actually providing assurances to commenters. An issue was the formation of the breakaway WHAT WG, which attracted reviewers though it did not have a process or specific accountability measures itself. </p><p>  There has been discussion in blogs where Daniel Glazman, Björn Hörmann, Molly Holzschlag, Eric Meyer, and Jeffrey Zeldman and others have shared concerns about W3C works particularly in the HTML area. The validator and other subjects cropped up too, but let's focus on HTML now. We had a W3C retreat in which we discussed what to do about these things. </p><p>  Some things are very clear. It is really important to have real developers on the ground involved with the development of HTML.  It is also really important to have browser makers intimately involved and committed.  And also all the other stakeholders, including users and user companies and makers of related products. </p><p>  Some things are clearer with hindsight of several years.  It is necessary to evolve HTML incrementally. The attempt to get the world to switch to XML, including quotes around attribute values and slashes in empty tags and namespaces all at once didn't work.  The large HTML-generating public did not move, largely because the browsers didn't complain. Some large communities did shift and are enjoying the fruits of well-formed systems, but not all.   It is important to maintain HTML incrementally, as well as continuing a transition to well-formed world, and developing more power in that world. </p><p>  The plan is to charter a completely new HTML group.  Unlike the previous one, this one will be chartered to do incremental improvements to HTML, as also in parallel xHTML. It will have a different chair and staff contact.  It will work on HTML and xHTML together.  We have strong support for this group, from many people we have talked to, including browser makers. </p><p>  There will also be work on forms.   This is a complex area, as existing HTML forms and XForms are both form languages. HTML forms are ubiquitously deployed, and there are many implementations and users of XForms.  Meanwhile, the Webforms submission has suggested sensible extensions to HTML forms.  The plan is, informed by Webforms, to extend HTML forms. At the same time, there is a work item to look at how HTML forms (existing and extended) can be thought of as XForm equivalents, to allow an easy escalation path. A goal would be to have an HTML forms language which is a superset of the existing HTML language, and a subset of a XForms language wit added HTML compatibility.  We will see to what extend this is possible.  There will be a new Forms group, and a common task force between it and the HTML group. </p><p>  There is also a plan for a separate group to work on the XHTML2 work which the old "HTML working group" was working on.  There will be no dependency of HTML work on the XHTML2 work. </p><p>  As well as a new HTML work, there are other things  want to change. The validator I think is a really valuable tool both for users and in helping standards deployment. I'd like it to check (even) more stuff, be (even) more helpful, and prioritize carefully its errors, warning and mild chidings.  I'd like it to link to an explanations of why things should be a certain way. We have, by the way, just ordered some new server hardware, paid for by the Supporters program -- thank you! </p><p>  This is going to be hard work.  I'd like everyone to go into this realizing this. I'll be asking these groups to be very accountable, to have powerful issue tracking systems on the w3.org web site, and to be responsive in spirit as well as in letter to public comments.  As always, we will be insisting on working implementations and test suites. Now we are going to be asking for things like talking with validator developers, maybe providing validator modules and validator test suites. (That's like a language test suite but backwards, in a way).  I'm going to ask commenters to be respectful of the groups, as always.  Try to check whether the comment has been made before, suggest alternative text, one item per message, etc, and add to technical perception social awareness. </p><p>  This is going to be a very major collaboration on a very important spec, one of the crown jewels of web technology.   Even though hundreds of people will be involved, we are evolving the technology which millions going on billions will use in the future.  There won't seem like enough thankyous to go around some days.  But we will be maintaining something very important and creating something even better. </p><p> Tim BL </p> <p><em>p.s. comments are disabled here in <cite>breadcrumbs</cite>, the DIG research blog, but they are welcome <a href="http://www.w3.org/QA/2006/10/reinventing_html_discuss.html">in the W3C QA weblog</a>.</em></p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~3/144447765/detail1855.html]]></link>
    <title><![CDATA[Cooking with IEEE Spectrum: Kevin Weeks - IEEE Spectrum Radio]]></title>
    <body><![CDATA[<p><center><img src='http://assets.gigavox.com/showimages/1855.jpg' border='0'></center></p>On this first edition of Cooking with IEEE Spectrum, Suzan Hassler speaks with Kevin Weeks, the programmer, magazine editor turned chef. They talk about Week's path to becoming a chef, his inspiration, and of course his cooking tips for those with an analytical mind.<div class="feedflare"> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=MTRo0Y75"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=MTRo0Y75" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=tR9zkPDq"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=tR9zkPDq" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=WDVHoD4T"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=WDVHoD4T" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=Wm0iqL75"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=Wm0iqL75" border="0"></img></a> </div><img src="http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~4/144447765" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://amitp.blogspot.com/2007/05/wrong-number.html]]></link>
    <title><![CDATA[Wrong Number]]></title>
    <body><![CDATA[<p> With my home phone, I sometimes get “wrong number” calls. Someone dialed the wrong number, or someone gave out the wrong number, or someone forgot to dial the area code.  I also get these types of emails.  Other people make a typo when giving out their email address, or they use the wrong domain, or they just don't know their own email address.  Here are some examples of emails that should've gone to someone else: </p> <ul> <li>Relatives emailing me about a party (but they're not <em>my</em> relatives)</li> <li>Construction projects in Dubai emailing me about my workers being lazy</li> <li>Business partners in China emailing me about ceramic manufacturing</li> <li>London Business School emailing me updates about classes I can take</li> <li>Citibank India emailing me <strong>financial information about my account</strong> (this has happened for three different people, all of whom accidentally used my email address)</li> <li>Someone emailing me the design for the anchor bolts he wants me to manufacture</li> <li>A hotel chain emailing me about work I'm doing for their new hotel</li> <li>A mattress company emailing me about mattresses I've ordered for that hotel</li> <li>Someone asking me for a job at my company</li> <li>Someone who wanted a refund for the flight I booked for him</li> <li>A pizza restaurant emailing me NDAs I need to sign before I can meet with them</li> <li>A company that was pleased with my interviews and offered me a job paying $55,000/year, plus a Blackberry and a TiVo (!)</li> <li>A London jobs site sending me updates on on jobs I've applied to</li> <li>Monster.com India sending me updates on legal jobs</li> <li>A pregnancy site sending me information about my 27th week of pregnancy</li> <li>A photo site sending me my password</li> <li>A dating site sending me potential matches</li> <li>An email asking about various legal cases I'm involved with</li> <li>Yahoo sending me accounts for which my email is listed as the secondary email address</li> <li>Someone sending me pictures from a hike I went on</li> <li>Invites from several social networking sites from people I don't know</li> <li>Someone asking me to send my software to an address in … Nigeria</li> </ul> <p> Citibank India especially worries me. They didn't try to verify my email address. What you're <em>supposed</em> to do if you run a web service with accounts: </p> <ol> <li>Let me sign up online.</li> <li>Mark the account “unverified”.</li> <li>Send me an email with a verification code or link.</li> <li>Only once I verify the email address should you mark the account “verified”.</li> <li>Only send sensitive information to verified accounts.</li> </ol> <p> Citibank India and Monster India do not do this.  You should also never send passwords to people over email; send them a link that lets them reset their password. </p> <p> I'm not sure why I get so many “wrong number” emails, but my guess is that it's because there are lots and lots of people named Amit Patel, and if you search for that name, you end up with me, so people assume I'm the Amit Patel they're looking for. If I'm getting repeated emails or if it seems like an important email, I'll send them an explanation of how they have the wrong email address; other times I just delete the email. </p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://piaw.blogspot.com/2007/07/thoughts-about-tour-de-france.html]]></link>
    <title><![CDATA[Thoughts about the Tour de France]]></title>
    <body><![CDATA[]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://www.matsblog.com/stories/3478023/]]></link>
    <title><![CDATA[Schnee]]></title>
    <body><![CDATA[Dass ich das heuer noch mal zu Gesicht bekomme<br /> <br /> <img title="" height="320" alt="Spur-im-Schnee" width="400" src="http://static.twoday.net/matsblog/images/Spur-im-Schnee.jpg" /><br /> <br /> wer hätte das noch gedacht.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://olabini.blogspot.com/2007/08/siouxsie-sioux-mantaray.html]]></link>
    <title><![CDATA[Siouxsie Sioux - Mantaray]]></title>
    <body><![CDATA[And the love just keeps coming. Not only a new NMA album, but Siouxsie Sioux releases a solo debut next month! Wow. Lovely!]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~3/150548437/detail1910.html]]></link>
    <title><![CDATA[Barbara Aronson - Jon Udell's Interviews with Innovators]]></title>
    <body><![CDATA[In this edition of Jon Udell's Interviews with Innovators, host Jon dell speaks with Barbara Aronson, program manager for the World Health Organization's Health InterNetwork Access Initiative (HINARI). Thanks to this program, qualifying hospitals, universities, and other organizations in 70 of the poorest countries receive free access to many of the best biomedical journals.<div class="feedflare"> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=ukXVjPAC"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=ukXVjPAC" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=jYcMKCtO"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=jYcMKCtO" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=0Dg9VbPg"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=0Dg9VbPg" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=z8qhNQIx"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=z8qhNQIx" border="0"></img></a> </div><img src="http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~4/150548437" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~3/146268555/detail1868.html]]></link>
    <title><![CDATA[Michael Evans - One Laptop per Child]]></title>
    <body><![CDATA[<p><center><img src='http://assets.gigavox.com/showimages/1868.jpg' border='0'></center></p>The mission of the non-profit One Laptop per Child association is to develop a low-cost laptop, a technology that could revolutionize how we educate the world's children. Their goal is to provide children around the world with new opportunities to explore, experiment, and express themselves. Michael Evans of Red Hat, discusses the project, and reviews Red Hat's role in the project and how important it is to design the machine with hardware and software developers together, always considering the needs of the young enduser.<p>  This program is from our Open Source Conversations channel, which has a separate <a href='http://rss.gigavox.com/channel/osc.xml'>RSS feed</a>. </p><div class="feedflare"> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=x9YMgk9f"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=x9YMgk9f" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=8kv50o6E"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=8kv50o6E" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=5U6UM0c3"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=5U6UM0c3" border="0"></img></a> <a href="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?a=vGJ6idfx"><img src="http://feeds.gigavox.com/~f/gigavox/channel/itconversations?i=vGJ6idfx" border="0"></img></a> </div><img src="http://feeds.gigavox.com/~r/gigavox/channel/itconversations/~4/146268555" height="1" width="1"/>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://googlemac.blogspot.com/2007/04/google-data-apis-connect-cocoa.html]]></link>
    <title><![CDATA[Google data APIs connect Cocoa developers to Google]]></title>
    <body><![CDATA[Posted by Greg Robbins, Software Engineer<br /><br />When you trust your personal data to Google, it's still your data. You're free to edit it, to share it with others, or to download it and take it somewhere else entirely. The principle is simple: we won't lock you away from your data. In practice, we work hard to be sure that you and the software you use have the access that makes the principle really meaningful.<br /><br />Last year, Google introduced<a href="http://code.google.com/apis/gdata/" title="Google data APIs"> Google data APIs</a>, based on the Atom Publishing Protocol. Google data APIs are just a standard way to allow programs to get at your data on our servers. They already work with Google Calendar, Google Base, Blogger, and many other services. Google provides<a href="http://code.google.com/apis/gdata/clientlibs.html" title="libraries"> libraries</a> to make it easy for programmers working in Java, C#, and Javascript to use the APIs.<br /><br />The native language for Mac OS X applications is Objective-C, and it's our preferred language for Mac application development. To make it simpler for us to write Mac software that interacts with Google services, I created a framework to use Google data APIs directly in Objective-C programs. We are using the framework for our application development, and today we are making the framework available to all developers. The<a href="http://code.google.com/p/gdata-objectivec-client/" title="Google Data APIs Objective-C Library"> Google Data APIs Objective-C Library</a> joins<a href="http://code.google.com/p/macfuse/" title="MacFUSE"> MacFUSE</a> and<a href="http://code.google.com/p/google-breakpad/" title="Breakpad"> Breakpad</a> as open-source development efforts of Google's Mac software team, hosted at code.google.com.<br /><br />A few small examples will give programmers an idea of how natural it is to use the framework to interact with Google services. Say an online roleplaying game wants to add a reminder to your Google Calendar that you need to be ready to join your guild in battle tonight between 10 and 11 pm. Adding the appointment to your calendar takes a few lines like this:<br /><pre><br />#import "GData/GData.h"<br /><br />GDataServiceGoogleCalendar *service =<br />  [[GDataServiceGoogleCalendar alloc] init];<br />[service setUserCredentialsWithUsername:@"myaccount@gmail.com"     <br />                               password:@"mypassword"];<br /><br />NSURL *calendarFeedURL =<br />  [NSURL URLWithString:kGDataGoogleCalendarDefaultPrivateFullFeed];<br /><br />GDataEntryCalendarEvent *newEvent =<br />  [GDataEntryCalendarEvent calendarEvent];<br />GDataTextConstruct *content =<br />  [GDataTextConstruct textConstructWithString:@"Battle today at 10pm"];<br /><br />[newEvent setContent:content];<br />[newEvent setIsQuickAdd:YES];<br /><br />[service fetchCalendarEventByInsertingEntry:newEvent<br />                         forFeedURL:calendarFeedURL<br />                           delegate:self<br />        didFinishSelector:@selector(calendarTicket:finishedWithEntry:)<br />          didFailSelector:@selector(calendarTicket:failedWithError:)];<br /></pre><br />Or, if a screensaver wants to get the items you've advertised for sale on Google Base and animate them in a groovy fashion, this is how it would retrieve your stuff:<br /><pre><br />NSURL *baseFeedURL = [NSURL URLWithString:kGDataGoogleBaseUserItemsFeed];<br />[service fetchGoogleBaseFeedWithURL:baseFeedURL                 <br />                     delegate:self<br />            didFinishSelector:@selector(baseTicket:finishedWithFeed:)    <br />              didFailSelector:@selector(baseTicket:failedWithError:)];<br /></pre><br /><br />The framework calls back into the screensaver with the list (called a<span style="font-style: italic;"> feed</span>) of Google Base items:<br /><pre><br />- (void)baseTicket:(GDataServiceTicket*)ticket<br />  finishedWithFeed:(GDataFeedGoogleBase *)feed {<br />  NSArray *myItems = [feed entries];<br />}<br /></pre><br />The framework also supports<a href="http://developer.apple.com/documentation/Cocoa/Conceptual/KeyValueCoding/" title="key-value coding"> key-value coding</a>, so it's quick and easy for Mac code chefs to use<a href="http://developer.apple.com/documentation/Cocoa/Conceptual/CocoaBindings/" title="Cocoa bindings"> Cocoa bindings</a> to whip up user interface displays of your information. Several sample Cocoa applications are available at code.google.com to show how to use more features of the Google data APIs.<br /><br />Google Calendar, Google Base, Google Spreadsheets, and generic Atom feeds like Blogger are supported now in the framework, with access to more services already in development. If you are a Mac developer, I hope you'll join the<a href="http://code.google.com/p/gdata-objectivec-client/" title="open-source project"> open-source project</a> and help us make even more Mac applications Google-savvy.]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://hackr.de/2007/08/29/raging-wiki]]></link>
    <title><![CDATA[Raging Wiki]]></title>
    <body><![CDATA[<p><a href="http://www.wikirage.com/">wikirage</a></p>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Down</vote>
    </votes>
    <link><![CDATA[http://michaelzoehrer.blogspot.com/2006/12/will-kommen-sterreich-maschek.html]]></link>
    <title><![CDATA[Will kommen Österreich]]></title>
    <body><![CDATA[Jaja Dorfers Donnerstalk ist einfach ein Hit!!<br /><div xmlns='http://www.w3.org/1999/xhtml'><p><object height='350' width='425'><param value='http://youtube.com/v/4rrNQBF9W_Q' name='movie'></param><embed height='350' width='425' type='application/x-shockwave-flash' src='http://youtube.com/v/4rrNQBF9W_Q'></embed></object></p></div>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://dig.csail.mit.edu/breadcrumbs/node/195]]></link>
    <title><![CDATA[A glimse of sanity in the online copyright arena]]></title>
    <body><![CDATA[<p><em>The <a href="http://people.w3.org/~djweitzner/blog/?p=91">original appearance</a> of this entry was in <a href="http://people.w3.org/~djweitzner/blog">Danny Weitzner - Open Internet Policy</a></em></p>  <p>With Apple’s <a href="http://www.apple.com/pr/library/2007/04/02itunes.html">announcement</a> of DRM-free music downloadable through iTunes, it appears that we may actually be heading toward a sane, scalable approach to copyrighted commercial content on the Web. Tracks from EMI and other music publishers can now be purchased in two versions, a locked up version for the usual 99 cents or a higher-quality and DRM-free version for $1.29. I got an entire album (Jacqueline Du Pre playing the Dvorák &amp; Elgar Cello Concertos with the Chicago Symphony) for a mere $9.95 in unlocked form.</p> <p>As several observers have pointed out, these DRM-free tracks do come with a catch — your name is embedded inside the MPEG-4 file so that if you decide to casually share these files around with your hundred thousand closest friends on the Net (exactly the result the DRM has tried, unsuccessfully, to prevent) then you’re at some risk of getting caught and of having personal information spread around the Net with your illegally-copied files. Following some <a href="http://www.tuaw.com/2007/05/30/tuaw-tip-dont-torrent-that-song/">instructions</a> from an independent Apple news blog, I was able to verify that my name was put into these files upon being downloaded</p> <p><code>[Daniel-Weitzners-Computer:iTunes Music/...] djweitzn% strings *.m4a | grep name<br /> nameDaniel Weitzner<br /> nameDaniel Weitzner<br /> nameDaniel Weitzner<br /> nameDaniel Weitzner<br /></code></p> <p>In addition to my name it appears that my .mac account id, through which I purchased the tracks, was also included.</p> <p>The big news here goes beyond just copyright. Apple has decided to jettison heavyweight DRM enforcement in favor of an approach that allows the free flow of data with back-end accountability. I believe this is just one step in a larger trend toward what I’ve been calling ‘accountable systems.’</p> <p>An exclusive reliance on access restrictions such as DRM leads to technology and policy perspectives where information, once revealed, is completely uncontrolled.   It’s like focusing all one’s attention on closing the barn door and ignoring what might happen to the horses after they’ve escaped.  The reality is that even when information is widely available, society has interests in whether or not that information is used appropriately.   Information policies should reflect those interests, and information technology should support those policies.</p> <p>In research we’ve been doing on accountable systems approaches to <a href="/TAMI/">privacy</a> and copyright, we seek an alternative to the “hide it or lose it” approach that currently characterizes policy compliance on the Web. Our alternative is to design systems that are oriented toward information accountability and appropriate use, rather than information security and access restriction.  I think what Apple is doing here will come to be seen as the an early step in a large-scale transformation in how we approach a wide variety of policy issues on the Web.</p> <p>Watch this space for more.</p> ]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Down</vote>
      <vote sample='michi_title'>Down</vote>
    </votes>
    <link><![CDATA[http://www.dekorte.com/blog/blog.cgi?do=item&id=2883]]></link>
    <title><![CDATA[MSNBC Interviews Ron Paul]]></title>
    <body><![CDATA[<a href=http://youtube.com/watch?v=oESkqd1i3IU>Video</a>]]></body>
  </item>
  <item>
    <votes>
      <vote sample='ben_title'>Up</vote>
      <vote sample='michi_title'>Up</vote>
      <vote sample='thomas_mixed'>Up</vote>
    </votes>
    <link><![CDATA[http://dataminingresearch.blogspot.com/2007/07/why-is-matlab-best-language-for-data_22.html]]></link>
    <title><![CDATA[Why is Matlab the best language for data mining? (cont'd)]]></title>
    <body><![CDATA[<!-- google_ad_section_start -->In the previous post, I was arguing that Matlab is an excellent programming language (and environment) for data mining. However, as you know, no programming language is perfect. Matlab also has its drawbacks. Here are a few of them.<span class="fullpost"><br /><br />First, Matlab is an interpreted language. Which means no compilation. The good thing is the <span style="font-style:italic;">on the fly</span> programming-executing aspect. On the other side, there is no declaration or type checking. This is normal since Matlab is not by definition a typed language. Or if you prefer, every element is a matrix. For example, the number 3 is stored as a 1x1 matrix containing the number 3. As there is no type checking, if you put by mistake '3' as a string in your matrix, you will have no error and no warning.<br /><br />Again, as there is no declaration, this situation can happen in Matlab:<br /><br /><blockquote>myvariable = 0;<br />...<br />myVariable = 10*i;<br />...<br />disp(myvariable)</blockquote><br />Indeed, since no declaration is needed, mistyping errors are dangerous in Matlab.<br /><br />Another issue in Matlab is its execution time which is quite high in comparison to C++ or even Java. Of course one solution is to use the MEX interface with which you can directly call C/C++ code. However, the communication between Matlab and the C code takes time and it is generally slower then a direct C/C++ code.<br /><br />Even with these limitations, I'm personally convinced that Matlab is a very powerful tool for data miners. The main reason is that you spend less time on the programming part and more on the problem your try to solve. If you think Matlab has other important drawbacks or on the contrary, if you think that the ones I mentioned are not really drawbacks, feel free to comment.<br /><br />Note: Data Mining Research is on holidays until August, 2nd.</span><!--google_ad_section_end --><div class="blogger-post-footer">RSS Feed</div>]]></body>
  </item>
</corpus>
